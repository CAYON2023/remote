ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"SEGGER_RTT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._GetAvailWriteSpace,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	_GetAvailWriteSpace:
  24              	.LVL0:
  25              	.LFB4:
  26              		.file 1 "systemview/SEGGER_RTT.c"
   1:systemview/SEGGER_RTT.c **** /*********************************************************************
   2:systemview/SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:systemview/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:systemview/SEGGER_RTT.c **** **********************************************************************
   5:systemview/SEGGER_RTT.c **** *                                                                    *
   6:systemview/SEGGER_RTT.c **** *            (c) 1995 - 2024 SEGGER Microcontroller GmbH             *
   7:systemview/SEGGER_RTT.c **** *                                                                    *
   8:systemview/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:systemview/SEGGER_RTT.c **** *                                                                    *
  10:systemview/SEGGER_RTT.c **** **********************************************************************
  11:systemview/SEGGER_RTT.c **** *                                                                    *
  12:systemview/SEGGER_RTT.c **** *       SEGGER SystemView * Real-time application analysis           *
  13:systemview/SEGGER_RTT.c **** *                                                                    *
  14:systemview/SEGGER_RTT.c **** **********************************************************************
  15:systemview/SEGGER_RTT.c **** *                                                                    *
  16:systemview/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:systemview/SEGGER_RTT.c **** *                                                                    *
  18:systemview/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:systemview/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:systemview/SEGGER_RTT.c **** * compatible with the SystemView and RTT protocol, and J-Link.       *
  21:systemview/SEGGER_RTT.c **** *                                                                    *
  22:systemview/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:systemview/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:systemview/SEGGER_RTT.c **** * condition is met:                                                  *
  25:systemview/SEGGER_RTT.c **** *                                                                    *
  26:systemview/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:systemview/SEGGER_RTT.c **** *   notice, this condition and the following disclaimer.             *
  28:systemview/SEGGER_RTT.c **** *                                                                    *
  29:systemview/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:systemview/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:systemview/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:systemview/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 2


  33:systemview/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:systemview/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:systemview/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:systemview/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:systemview/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:systemview/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:systemview/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:systemview/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:systemview/SEGGER_RTT.c **** * DAMAGE.                                                            *
  42:systemview/SEGGER_RTT.c **** *                                                                    *
  43:systemview/SEGGER_RTT.c **** **********************************************************************
  44:systemview/SEGGER_RTT.c **** *                                                                    *
  45:systemview/SEGGER_RTT.c **** *       SystemView version: 3.58                                    *
  46:systemview/SEGGER_RTT.c **** *                                                                    *
  47:systemview/SEGGER_RTT.c **** **********************************************************************
  48:systemview/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  49:systemview/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  50:systemview/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  51:systemview/SEGGER_RTT.c ****           allows real-time communication on targets which support
  52:systemview/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  53:systemview/SEGGER_RTT.c **** Revision: $Rev: 29668 $
  54:systemview/SEGGER_RTT.c **** 
  55:systemview/SEGGER_RTT.c **** Additional information:
  56:systemview/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  57:systemview/SEGGER_RTT.c ****           H->T    Host to target communication
  58:systemview/SEGGER_RTT.c ****           T->H    Target to host communication
  59:systemview/SEGGER_RTT.c **** 
  60:systemview/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  61:systemview/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  62:systemview/SEGGER_RTT.c **** 
  63:systemview/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  64:systemview/SEGGER_RTT.c **** 
  65:systemview/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  66:systemview/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  67:systemview/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  68:systemview/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  69:systemview/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):
  70:systemview/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  71:systemview/SEGGER_RTT.c **** 
  72:systemview/SEGGER_RTT.c **** 
  73:systemview/SEGGER_RTT.c **** ----------------------------------------------------------------------
  74:systemview/SEGGER_RTT.c **** */
  75:systemview/SEGGER_RTT.c **** 
  76:systemview/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  77:systemview/SEGGER_RTT.c **** 
  78:systemview/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  79:systemview/SEGGER_RTT.c **** 
  80:systemview/SEGGER_RTT.c **** /*********************************************************************
  81:systemview/SEGGER_RTT.c **** *
  82:systemview/SEGGER_RTT.c **** *       Configuration, default values
  83:systemview/SEGGER_RTT.c **** *
  84:systemview/SEGGER_RTT.c **** **********************************************************************
  85:systemview/SEGGER_RTT.c **** */
  86:systemview/SEGGER_RTT.c **** 
  87:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
  88:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_CB_ALIGN
  89:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_CB_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 3


  90:systemview/SEGGER_RTT.c ****   #endif
  91:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGN
  92:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE !=
  93:systemview/SEGGER_RTT.c ****   #endif
  94:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_CB_SECTION
  95:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_CB_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  96:systemview/SEGGER_RTT.c ****   #endif
  97:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_BUFFER_SECTION
  98:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_BUFFER_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_S
  99:systemview/SEGGER_RTT.c ****   #endif
 100:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGNMENT
 101:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
 102:systemview/SEGGER_RTT.c ****   #endif
 103:systemview/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_ALIGNMENT
 104:systemview/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
 105:systemview/SEGGER_RTT.c ****   #endif
 106:systemview/SEGGER_RTT.c **** #endif
 107:systemview/SEGGER_RTT.c **** 
 108:systemview/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
 109:systemview/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
 110:systemview/SEGGER_RTT.c **** #endif
 111:systemview/SEGGER_RTT.c **** 
 112:systemview/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 113:systemview/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 114:systemview/SEGGER_RTT.c **** #endif
 115:systemview/SEGGER_RTT.c **** 
 116:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 117:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 118:systemview/SEGGER_RTT.c **** #endif
 119:systemview/SEGGER_RTT.c **** 
 120:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 121:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 122:systemview/SEGGER_RTT.c **** #endif
 123:systemview/SEGGER_RTT.c **** 
 124:systemview/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 125:systemview/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 126:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 127:systemview/SEGGER_RTT.c ****   #endif
 128:systemview/SEGGER_RTT.c **** #endif
 129:systemview/SEGGER_RTT.c **** 
 130:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 131:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            SEGGER_RTT_CPU_CACHE_LINE_SIZE
 132:systemview/SEGGER_RTT.c **** #endif
 133:systemview/SEGGER_RTT.c **** 
 134:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 135:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     SEGGER_RTT_CPU_CACHE_LINE_SIZE
 136:systemview/SEGGER_RTT.c **** #endif
 137:systemview/SEGGER_RTT.c **** 
 138:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 139:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 140:systemview/SEGGER_RTT.c **** #endif
 141:systemview/SEGGER_RTT.c **** 
 142:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 143:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 144:systemview/SEGGER_RTT.c **** #endif
 145:systemview/SEGGER_RTT.c **** 
 146:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 4


 147:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 148:systemview/SEGGER_RTT.c **** #endif
 149:systemview/SEGGER_RTT.c **** 
 150:systemview/SEGGER_RTT.c **** #ifndef   STRLEN
 151:systemview/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 152:systemview/SEGGER_RTT.c **** #endif
 153:systemview/SEGGER_RTT.c **** 
 154:systemview/SEGGER_RTT.c **** #ifndef   STRCPY
 155:systemview/SEGGER_RTT.c ****   #define STRCPY(pDest, pSrc)                             strcpy((pDest), (pSrc))
 156:systemview/SEGGER_RTT.c **** #endif
 157:systemview/SEGGER_RTT.c **** 
 158:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
 159:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 160:systemview/SEGGER_RTT.c **** #endif
 161:systemview/SEGGER_RTT.c **** 
 162:systemview/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 163:systemview/SEGGER_RTT.c ****   #ifdef  MEMCPY
 164:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 165:systemview/SEGGER_RTT.c ****   #else
 166:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 167:systemview/SEGGER_RTT.c ****   #endif
 168:systemview/SEGGER_RTT.c **** #endif
 169:systemview/SEGGER_RTT.c **** 
 170:systemview/SEGGER_RTT.c **** #ifndef   MIN
 171:systemview/SEGGER_RTT.c ****   #define MIN(a, b)                                       (((a) < (b)) ? (a) : (b))
 172:systemview/SEGGER_RTT.c **** #endif
 173:systemview/SEGGER_RTT.c **** 
 174:systemview/SEGGER_RTT.c **** #ifndef   MAX
 175:systemview/SEGGER_RTT.c ****   #define MAX(a, b)                                       (((a) > (b)) ? (a) : (b))
 176:systemview/SEGGER_RTT.c **** #endif
 177:systemview/SEGGER_RTT.c **** 
 178:systemview/SEGGER_RTT.c **** /*********************************************************************
 179:systemview/SEGGER_RTT.c **** *
 180:systemview/SEGGER_RTT.c **** *       Defines, fixed
 181:systemview/SEGGER_RTT.c **** *
 182:systemview/SEGGER_RTT.c **** **********************************************************************
 183:systemview/SEGGER_RTT.c **** */
 184:systemview/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 185:systemview/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 186:systemview/SEGGER_RTT.c **** #endif
 187:systemview/SEGGER_RTT.c **** 
 188:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 189:systemview/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 190:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 191:systemview/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 192:systemview/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 193:systemview/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 194:systemview/SEGGER_RTT.c ****                                   Var
 195:systemview/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 196:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 197:systemview/SEGGER_RTT.c ****   #else
 198:systemview/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 199:systemview/SEGGER_RTT.c ****   #endif
 200:systemview/SEGGER_RTT.c **** #else
 201:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 202:systemview/SEGGER_RTT.c **** #endif
 203:systemview/SEGGER_RTT.c **** 
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 5


 204:systemview/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 205:systemview/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 206:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 207:systemview/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 208:systemview/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 209:systemview/SEGGER_RTT.c ****                                         Var
 210:systemview/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 211:systemview/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 212:systemview/SEGGER_RTT.c ****   #else
 213:systemview/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 214:systemview/SEGGER_RTT.c ****   #endif
 215:systemview/SEGGER_RTT.c **** #else
 216:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 217:systemview/SEGGER_RTT.c **** #endif
 218:systemview/SEGGER_RTT.c **** 
 219:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 220:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 221:systemview/SEGGER_RTT.c **** #else
 222:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 223:systemview/SEGGER_RTT.c **** #endif
 224:systemview/SEGGER_RTT.c **** 
 225:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 226:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 227:systemview/SEGGER_RTT.c **** #else
 228:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 229:systemview/SEGGER_RTT.c **** #endif
 230:systemview/SEGGER_RTT.c **** 
 231:systemview/SEGGER_RTT.c **** 
 232:systemview/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 233:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 234:systemview/SEGGER_RTT.c **** #else
 235:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 236:systemview/SEGGER_RTT.c **** #endif
 237:systemview/SEGGER_RTT.c **** 
 238:systemview/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 239:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 240:systemview/SEGGER_RTT.c **** #else
 241:systemview/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 242:systemview/SEGGER_RTT.c **** #endif
 243:systemview/SEGGER_RTT.c **** 
 244:systemview/SEGGER_RTT.c **** /*********************************************************************
 245:systemview/SEGGER_RTT.c **** *
 246:systemview/SEGGER_RTT.c **** *       Static const data
 247:systemview/SEGGER_RTT.c **** *
 248:systemview/SEGGER_RTT.c **** **********************************************************************
 249:systemview/SEGGER_RTT.c **** */
 250:systemview/SEGGER_RTT.c **** 
 251:systemview/SEGGER_RTT.c **** static const unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '
 252:systemview/SEGGER_RTT.c **** 
 253:systemview/SEGGER_RTT.c **** /*********************************************************************
 254:systemview/SEGGER_RTT.c **** *
 255:systemview/SEGGER_RTT.c **** *       Static data
 256:systemview/SEGGER_RTT.c **** *
 257:systemview/SEGGER_RTT.c **** **********************************************************************
 258:systemview/SEGGER_RTT.c **** */
 259:systemview/SEGGER_RTT.c **** 
 260:systemview/SEGGER_RTT.c **** //
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 6


 261:systemview/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 262:systemview/SEGGER_RTT.c **** //
 263:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
 264:systemview/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 265:systemview/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT                                                             __attribu
 266:systemview/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)]   __attribu
 267:systemview/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)] __attribu
 268:systemview/SEGGER_RTT.c ****   #elif (defined __ICCARM__)
 269:systemview/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 270:systemview/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT;
 271:systemview/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 272:systemview/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)];
 273:systemview/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 274:systemview/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)];
 275:systemview/SEGGER_RTT.c ****   #else
 276:systemview/SEGGER_RTT.c ****     #error "Don't know how to place _SEGGER_RTT, _acUpBuffer, _acDownBuffer cache-line aligned"
 277:systemview/SEGGER_RTT.c ****   #endif
 278:systemview/SEGGER_RTT.c **** #else
 279:systemview/SEGGER_RTT.c ****   SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 280:systemview/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]))
 281:systemview/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]
 282:systemview/SEGGER_RTT.c **** #endif
 283:systemview/SEGGER_RTT.c **** 
 284:systemview/SEGGER_RTT.c **** static unsigned char _ActiveTerminal;
 285:systemview/SEGGER_RTT.c **** 
 286:systemview/SEGGER_RTT.c **** /*********************************************************************
 287:systemview/SEGGER_RTT.c **** *
 288:systemview/SEGGER_RTT.c **** *       Static functions
 289:systemview/SEGGER_RTT.c **** *
 290:systemview/SEGGER_RTT.c **** **********************************************************************
 291:systemview/SEGGER_RTT.c **** */
 292:systemview/SEGGER_RTT.c **** 
 293:systemview/SEGGER_RTT.c **** /*********************************************************************
 294:systemview/SEGGER_RTT.c **** *
 295:systemview/SEGGER_RTT.c **** *       _DoInit()
 296:systemview/SEGGER_RTT.c **** *
 297:systemview/SEGGER_RTT.c **** *  Function description
 298:systemview/SEGGER_RTT.c **** *    Initializes the control block an buffers.
 299:systemview/SEGGER_RTT.c **** *
 300:systemview/SEGGER_RTT.c **** *  Notes
 301:systemview/SEGGER_RTT.c **** *    (1) May only be called via INIT() to avoid overriding settings.
 302:systemview/SEGGER_RTT.c **** *        The only exception is SEGGER_RTT_Init(), to make an intentional override possible.
 303:systemview/SEGGER_RTT.c **** */
 304:systemview/SEGGER_RTT.c ****   #define INIT()                                                                             \
 305:systemview/SEGGER_RTT.c ****     do {                                                                                     \
 306:systemview/SEGGER_RTT.c ****       volatile SEGGER_RTT_CB* pRTTCBInit;                                                    \
 307:systemview/SEGGER_RTT.c ****       pRTTCBInit = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF); \
 308:systemview/SEGGER_RTT.c ****       if (pRTTCBInit->acID[0] != 'S') {                                                      \
 309:systemview/SEGGER_RTT.c ****         _DoInit();                                                                           \
 310:systemview/SEGGER_RTT.c ****       }                                                                                      \
 311:systemview/SEGGER_RTT.c ****     } while (0)
 312:systemview/SEGGER_RTT.c **** 
 313:systemview/SEGGER_RTT.c **** static void _DoInit(void) {
 314:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 315:systemview/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 316:systemview/SEGGER_RTT.c ****   unsigned i;
 317:systemview/SEGGER_RTT.c ****   //
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 7


 318:systemview/SEGGER_RTT.c ****   // Initialize control block
 319:systemview/SEGGER_RTT.c ****   //
 320:systemview/SEGGER_RTT.c ****   p                     = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_O
 321:systemview/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 322:systemview/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 323:systemview/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 324:systemview/SEGGER_RTT.c ****   //
 325:systemview/SEGGER_RTT.c ****   // Initialize up buffer 0
 326:systemview/SEGGER_RTT.c ****   //
 327:systemview/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
 328:systemview/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 329:systemview/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 330:systemview/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 331:systemview/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 332:systemview/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 333:systemview/SEGGER_RTT.c ****   //
 334:systemview/SEGGER_RTT.c ****   // Initialize down buffer 0
 335:systemview/SEGGER_RTT.c ****   //
 336:systemview/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 337:systemview/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 338:systemview/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 339:systemview/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 340:systemview/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 341:systemview/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 342:systemview/SEGGER_RTT.c ****   //
 343:systemview/SEGGER_RTT.c ****   // Finish initialization of the control block.
 344:systemview/SEGGER_RTT.c ****   // Copy Id string backwards to make sure that "SEGGER RTT" is not found in initializer memory (us
 345:systemview/SEGGER_RTT.c ****   // as this would cause J-Link to "find" the control block at a wrong address.
 346:systemview/SEGGER_RTT.c ****   //
 347:systemview/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 348:systemview/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 349:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 350:systemview/SEGGER_RTT.c ****   }
 351:systemview/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 352:systemview/SEGGER_RTT.c **** }
 353:systemview/SEGGER_RTT.c **** 
 354:systemview/SEGGER_RTT.c **** /*********************************************************************
 355:systemview/SEGGER_RTT.c **** *
 356:systemview/SEGGER_RTT.c **** *       _WriteBlocking()
 357:systemview/SEGGER_RTT.c **** *
 358:systemview/SEGGER_RTT.c **** *  Function description
 359:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 360:systemview/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 361:systemview/SEGGER_RTT.c **** *    read by the host.
 362:systemview/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 363:systemview/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 364:systemview/SEGGER_RTT.c **** *
 365:systemview/SEGGER_RTT.c **** *  Parameters
 366:systemview/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 367:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 368:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 369:systemview/SEGGER_RTT.c **** *
 370:systemview/SEGGER_RTT.c **** *  Return value
 371:systemview/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 372:systemview/SEGGER_RTT.c **** */
 373:systemview/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 374:systemview/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 8


 375:systemview/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 376:systemview/SEGGER_RTT.c ****   unsigned RdOff;
 377:systemview/SEGGER_RTT.c ****   unsigned WrOff;
 378:systemview/SEGGER_RTT.c ****   volatile char* pDst;
 379:systemview/SEGGER_RTT.c ****   //
 380:systemview/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 381:systemview/SEGGER_RTT.c ****   //
 382:systemview/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 383:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 384:systemview/SEGGER_RTT.c ****   do {
 385:systemview/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 386:systemview/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 387:systemview/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 388:systemview/SEGGER_RTT.c ****     } else {
 389:systemview/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 390:systemview/SEGGER_RTT.c ****     }
 391:systemview/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 392:systemview/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 393:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 394:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 395:systemview/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 396:systemview/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 397:systemview/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 398:systemview/SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 399:systemview/SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
 400:systemview/SEGGER_RTT.c ****     };
 401:systemview/SEGGER_RTT.c **** #else
 402:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pBuffer, NumBytesToWrite);
 403:systemview/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 404:systemview/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 405:systemview/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 406:systemview/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 407:systemview/SEGGER_RTT.c **** #endif
 408:systemview/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 409:systemview/SEGGER_RTT.c ****       WrOff = 0u;
 410:systemview/SEGGER_RTT.c ****     }
 411:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 412:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 413:systemview/SEGGER_RTT.c ****   } while (NumBytes);
 414:systemview/SEGGER_RTT.c ****   return NumBytesWritten;
 415:systemview/SEGGER_RTT.c **** }
 416:systemview/SEGGER_RTT.c **** 
 417:systemview/SEGGER_RTT.c **** /*********************************************************************
 418:systemview/SEGGER_RTT.c **** *
 419:systemview/SEGGER_RTT.c **** *       _WriteNoCheck()
 420:systemview/SEGGER_RTT.c **** *
 421:systemview/SEGGER_RTT.c **** *  Function description
 422:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 423:systemview/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 424:systemview/SEGGER_RTT.c **** *    read by the host.
 425:systemview/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 426:systemview/SEGGER_RTT.c **** *
 427:systemview/SEGGER_RTT.c **** *  Parameters
 428:systemview/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 429:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 430:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 431:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 9


 432:systemview/SEGGER_RTT.c **** *  Notes
 433:systemview/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 434:systemview/SEGGER_RTT.c **** */
 435:systemview/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 436:systemview/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 437:systemview/SEGGER_RTT.c ****   unsigned WrOff;
 438:systemview/SEGGER_RTT.c ****   unsigned Rem;
 439:systemview/SEGGER_RTT.c ****   volatile char* pDst;
 440:systemview/SEGGER_RTT.c **** 
 441:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 442:systemview/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 443:systemview/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 444:systemview/SEGGER_RTT.c ****     //
 445:systemview/SEGGER_RTT.c ****     // All data fits before wrap around
 446:systemview/SEGGER_RTT.c ****     //
 447:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 448:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 449:systemview/SEGGER_RTT.c ****     WrOff += NumBytes;
 450:systemview/SEGGER_RTT.c ****     while (NumBytes--) {
 451:systemview/SEGGER_RTT.c ****       *pDst++ = *pData++;
 452:systemview/SEGGER_RTT.c ****     };
 453:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 454:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 455:systemview/SEGGER_RTT.c **** #else
 456:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 457:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 458:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 459:systemview/SEGGER_RTT.c **** #endif
 460:systemview/SEGGER_RTT.c ****   } else {
 461:systemview/SEGGER_RTT.c ****     //
 462:systemview/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 463:systemview/SEGGER_RTT.c ****     //
 464:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 465:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 466:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 467:systemview/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 468:systemview/SEGGER_RTT.c ****       *pDst++ = *pData++;
 469:systemview/SEGGER_RTT.c ****     };
 470:systemview/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 471:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 472:systemview/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 473:systemview/SEGGER_RTT.c ****       *pDst++ = *pData++;
 474:systemview/SEGGER_RTT.c ****     };
 475:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 476:systemview/SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 477:systemview/SEGGER_RTT.c **** #else
 478:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 479:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 480:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 481:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 482:systemview/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 483:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 484:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 485:systemview/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 486:systemview/SEGGER_RTT.c **** #endif
 487:systemview/SEGGER_RTT.c ****   }
 488:systemview/SEGGER_RTT.c **** }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 10


 489:systemview/SEGGER_RTT.c **** 
 490:systemview/SEGGER_RTT.c **** /*********************************************************************
 491:systemview/SEGGER_RTT.c **** *
 492:systemview/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 493:systemview/SEGGER_RTT.c **** *
 494:systemview/SEGGER_RTT.c **** *  Function description
 495:systemview/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 496:systemview/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 497:systemview/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 498:systemview/SEGGER_RTT.c **** *
 499:systemview/SEGGER_RTT.c **** *  Parameters
 500:systemview/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 501:systemview/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 502:systemview/SEGGER_RTT.c **** */
 503:systemview/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 504:systemview/SEGGER_RTT.c ****   unsigned char ac[2];
 505:systemview/SEGGER_RTT.c **** 
 506:systemview/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 507:systemview/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 508:systemview/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 509:systemview/SEGGER_RTT.c **** }
 510:systemview/SEGGER_RTT.c **** 
 511:systemview/SEGGER_RTT.c **** /*********************************************************************
 512:systemview/SEGGER_RTT.c **** *
 513:systemview/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 514:systemview/SEGGER_RTT.c **** *
 515:systemview/SEGGER_RTT.c **** *  Function description
 516:systemview/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 517:systemview/SEGGER_RTT.c **** *    buffer without blocking.
 518:systemview/SEGGER_RTT.c **** *
 519:systemview/SEGGER_RTT.c **** *  Parameters
 520:systemview/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 521:systemview/SEGGER_RTT.c **** *
 522:systemview/SEGGER_RTT.c **** *  Return value
 523:systemview/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 524:systemview/SEGGER_RTT.c **** */
 525:systemview/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
  27              		.loc 1 525 66 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 526:systemview/SEGGER_RTT.c ****   unsigned RdOff;
  32              		.loc 1 526 3 view .LVU1
 527:systemview/SEGGER_RTT.c ****   unsigned WrOff;
  33              		.loc 1 527 3 view .LVU2
 528:systemview/SEGGER_RTT.c ****   unsigned r;
  34              		.loc 1 528 3 view .LVU3
 529:systemview/SEGGER_RTT.c ****   //
 530:systemview/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 531:systemview/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 532:systemview/SEGGER_RTT.c ****   //
 533:systemview/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
  35              		.loc 1 533 3 view .LVU4
  36              		.loc 1 533 9 is_stmt 0 view .LVU5
  37 0000 0369     		ldr	r3, [r0, #16]
  38              	.LVL1:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 11


 534:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
  39              		.loc 1 534 3 is_stmt 1 view .LVU6
  40              		.loc 1 534 9 is_stmt 0 view .LVU7
  41 0002 C268     		ldr	r2, [r0, #12]
  42              	.LVL2:
 535:systemview/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
  43              		.loc 1 535 3 is_stmt 1 view .LVU8
  44              		.loc 1 535 6 is_stmt 0 view .LVU9
  45 0004 9342     		cmp	r3, r2
  46 0006 04D8     		bhi	.L2
 536:systemview/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
  47              		.loc 1 536 5 is_stmt 1 view .LVU10
  48              		.loc 1 536 14 is_stmt 0 view .LVU11
  49 0008 8068     		ldr	r0, [r0, #8]
  50              	.LVL3:
  51              		.loc 1 536 34 view .LVU12
  52 000a 801A     		subs	r0, r0, r2
  53              		.loc 1 536 42 view .LVU13
  54 000c 0344     		add	r3, r3, r0
  55              	.LVL4:
  56              		.loc 1 536 7 view .LVU14
  57 000e 581E     		subs	r0, r3, #1
  58              	.LVL5:
  59              		.loc 1 536 7 view .LVU15
  60 0010 7047     		bx	lr
  61              	.LVL6:
  62              	.L2:
 537:systemview/SEGGER_RTT.c ****   } else {
 538:systemview/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
  63              		.loc 1 538 5 is_stmt 1 view .LVU16
  64              		.loc 1 538 15 is_stmt 0 view .LVU17
  65 0012 9B1A     		subs	r3, r3, r2
  66              	.LVL7:
  67              		.loc 1 538 7 view .LVU18
  68 0014 581E     		subs	r0, r3, #1
  69              	.LVL8:
 539:systemview/SEGGER_RTT.c ****   }
 540:systemview/SEGGER_RTT.c ****   return r;
  70              		.loc 1 540 3 is_stmt 1 view .LVU19
 541:systemview/SEGGER_RTT.c **** }
  71              		.loc 1 541 1 is_stmt 0 view .LVU20
  72 0016 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE4:
  76              		.section	.text._WriteNoCheck,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	_WriteNoCheck:
  83              	.LVL9:
  84              	.LFB2:
 435:systemview/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
  85              		.loc 1 435 94 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 12


 435:systemview/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
  89              		.loc 1 435 94 is_stmt 0 view .LVU22
  90 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 32
  93              		.cfi_offset 3, -32
  94              		.cfi_offset 4, -28
  95              		.cfi_offset 5, -24
  96              		.cfi_offset 6, -20
  97              		.cfi_offset 7, -16
  98              		.cfi_offset 8, -12
  99              		.cfi_offset 9, -8
 100              		.cfi_offset 14, -4
 101 0004 0446     		mov	r4, r0
 102 0006 8846     		mov	r8, r1
 103 0008 1646     		mov	r6, r2
 436:systemview/SEGGER_RTT.c ****   unsigned WrOff;
 104              		.loc 1 436 3 is_stmt 1 view .LVU23
 437:systemview/SEGGER_RTT.c ****   unsigned Rem;
 105              		.loc 1 437 3 view .LVU24
 438:systemview/SEGGER_RTT.c ****   volatile char* pDst;
 106              		.loc 1 438 3 view .LVU25
 439:systemview/SEGGER_RTT.c **** 
 107              		.loc 1 439 3 view .LVU26
 441:systemview/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 108              		.loc 1 441 3 view .LVU27
 441:systemview/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 109              		.loc 1 441 9 is_stmt 0 view .LVU28
 110 000a C568     		ldr	r5, [r0, #12]
 111              	.LVL10:
 442:systemview/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 112              		.loc 1 442 3 is_stmt 1 view .LVU29
 442:systemview/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 113              		.loc 1 442 14 is_stmt 0 view .LVU30
 114 000c 8768     		ldr	r7, [r0, #8]
 442:systemview/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 115              		.loc 1 442 7 view .LVU31
 116 000e A7EB0509 		sub	r9, r7, r5
 117              	.LVL11:
 443:systemview/SEGGER_RTT.c ****     //
 118              		.loc 1 443 3 is_stmt 1 view .LVU32
 443:systemview/SEGGER_RTT.c ****     //
 119              		.loc 1 443 6 is_stmt 0 view .LVU33
 120 0012 9145     		cmp	r9, r2
 121 0014 07D9     		bls	.L5
 447:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 122              		.loc 1 447 5 is_stmt 1 view .LVU34
 447:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 123              		.loc 1 447 18 is_stmt 0 view .LVU35
 124 0016 4068     		ldr	r0, [r0, #4]
 125              	.LVL12:
 456:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 126              		.loc 1 456 5 is_stmt 1 view .LVU36
 127 0018 2844     		add	r0, r0, r5
 128              	.LVL13:
 456:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 129              		.loc 1 456 5 is_stmt 0 view .LVU37
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 13


 130 001a FFF7FEFF 		bl	memcpy
 131              	.LVL14:
 457:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 132              		.loc 1 457 15 is_stmt 1 view .LVU38
 458:systemview/SEGGER_RTT.c **** #endif
 133              		.loc 1 458 5 view .LVU39
 458:systemview/SEGGER_RTT.c **** #endif
 134              		.loc 1 458 26 is_stmt 0 view .LVU40
 135 001e 3544     		add	r5, r5, r6
 136              	.LVL15:
 458:systemview/SEGGER_RTT.c **** #endif
 137              		.loc 1 458 18 view .LVU41
 138 0020 E560     		str	r5, [r4, #12]
 139              	.L4:
 488:systemview/SEGGER_RTT.c **** 
 140              		.loc 1 488 1 view .LVU42
 141 0022 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 142              	.LVL16:
 143              	.L5:
 478:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 144              		.loc 1 478 5 is_stmt 1 view .LVU43
 479:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 145              		.loc 1 479 5 view .LVU44
 479:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 146              		.loc 1 479 18 is_stmt 0 view .LVU45
 147 0026 4068     		ldr	r0, [r0, #4]
 148              	.LVL17:
 480:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 149              		.loc 1 480 5 is_stmt 1 view .LVU46
 150 0028 4A46     		mov	r2, r9
 151              	.LVL18:
 480:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 152              		.loc 1 480 5 is_stmt 0 view .LVU47
 153 002a 2844     		add	r0, r0, r5
 154              	.LVL19:
 480:systemview/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 155              		.loc 1 480 5 view .LVU48
 156 002c FFF7FEFF 		bl	memcpy
 157              	.LVL20:
 481:systemview/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 158              		.loc 1 481 5 is_stmt 1 view .LVU49
 481:systemview/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 159              		.loc 1 481 20 is_stmt 0 view .LVU50
 160 0030 ED1B     		subs	r5, r5, r7
 161              	.LVL21:
 481:systemview/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 162              		.loc 1 481 20 view .LVU51
 163 0032 3544     		add	r5, r5, r6
 164              	.LVL22:
 482:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 165              		.loc 1 482 5 is_stmt 1 view .LVU52
 483:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 166              		.loc 1 483 5 view .LVU53
 167 0034 2A46     		mov	r2, r5
 168 0036 08EB0901 		add	r1, r8, r9
 169 003a 6068     		ldr	r0, [r4, #4]
 170 003c FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 14


 171              	.LVL23:
 484:systemview/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 172              		.loc 1 484 15 view .LVU54
 485:systemview/SEGGER_RTT.c **** #endif
 173              		.loc 1 485 5 view .LVU55
 485:systemview/SEGGER_RTT.c **** #endif
 174              		.loc 1 485 18 is_stmt 0 view .LVU56
 175 0040 E560     		str	r5, [r4, #12]
 488:systemview/SEGGER_RTT.c **** 
 176              		.loc 1 488 1 view .LVU57
 177 0042 EEE7     		b	.L4
 178              		.cfi_endproc
 179              	.LFE2:
 181              		.section	.text._WriteBlocking,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	_WriteBlocking:
 188              	.LVL24:
 189              	.LFB1:
 373:systemview/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 190              		.loc 1 373 101 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 373:systemview/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 194              		.loc 1 373 101 is_stmt 0 view .LVU59
 195 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 196              	.LCFI1:
 197              		.cfi_def_cfa_offset 32
 198              		.cfi_offset 3, -32
 199              		.cfi_offset 4, -28
 200              		.cfi_offset 5, -24
 201              		.cfi_offset 6, -20
 202              		.cfi_offset 7, -16
 203              		.cfi_offset 8, -12
 204              		.cfi_offset 9, -8
 205              		.cfi_offset 14, -4
 206 0004 0646     		mov	r6, r0
 207 0006 8846     		mov	r8, r1
 208 0008 1746     		mov	r7, r2
 374:systemview/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 209              		.loc 1 374 3 is_stmt 1 view .LVU60
 375:systemview/SEGGER_RTT.c ****   unsigned RdOff;
 210              		.loc 1 375 3 view .LVU61
 376:systemview/SEGGER_RTT.c ****   unsigned WrOff;
 211              		.loc 1 376 3 view .LVU62
 377:systemview/SEGGER_RTT.c ****   volatile char* pDst;
 212              		.loc 1 377 3 view .LVU63
 378:systemview/SEGGER_RTT.c ****   //
 213              		.loc 1 378 3 view .LVU64
 382:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 214              		.loc 1 382 3 view .LVU65
 215              	.LVL25:
 383:systemview/SEGGER_RTT.c ****   do {
 216              		.loc 1 383 3 view .LVU66
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 15


 383:systemview/SEGGER_RTT.c ****   do {
 217              		.loc 1 383 9 is_stmt 0 view .LVU67
 218 000a C568     		ldr	r5, [r0, #12]
 219              	.LVL26:
 382:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 220              		.loc 1 382 19 view .LVU68
 221 000c 4FF00009 		mov	r9, #0
 222 0010 18E0     		b	.L12
 223              	.LVL27:
 224              	.L17:
 387:systemview/SEGGER_RTT.c ****     } else {
 225              		.loc 1 387 7 is_stmt 1 view .LVU69
 387:systemview/SEGGER_RTT.c ****     } else {
 226              		.loc 1 387 31 is_stmt 0 view .LVU70
 227 0012 641B     		subs	r4, r4, r5
 228              	.LVL28:
 387:systemview/SEGGER_RTT.c ****     } else {
 229              		.loc 1 387 23 view .LVU71
 230 0014 621E     		subs	r2, r4, #1
 231              	.LVL29:
 232              	.L10:
 391:systemview/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 233              		.loc 1 391 5 is_stmt 1 view .LVU72
 391:systemview/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 234              		.loc 1 391 23 is_stmt 0 view .LVU73
 235 0016 B368     		ldr	r3, [r6, #8]
 236 0018 5C1B     		subs	r4, r3, r5
 391:systemview/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 237              		.loc 1 391 21 view .LVU74
 238 001a 9442     		cmp	r4, r2
 239 001c 28BF     		it	cs
 240 001e 1446     		movcs	r4, r2
 241              	.LVL30:
 392:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 242              		.loc 1 392 5 is_stmt 1 view .LVU75
 392:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 243              		.loc 1 392 21 is_stmt 0 view .LVU76
 244 0020 BC42     		cmp	r4, r7
 245 0022 28BF     		it	cs
 246 0024 3C46     		movcs	r4, r7
 247              	.LVL31:
 393:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 248              		.loc 1 393 5 is_stmt 1 view .LVU77
 393:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 249              		.loc 1 393 18 is_stmt 0 view .LVU78
 250 0026 7068     		ldr	r0, [r6, #4]
 251              	.LVL32:
 402:systemview/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 252              		.loc 1 402 5 is_stmt 1 view .LVU79
 253 0028 2246     		mov	r2, r4
 254 002a 4146     		mov	r1, r8
 255 002c 2844     		add	r0, r0, r5
 256              	.LVL33:
 402:systemview/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 257              		.loc 1 402 5 is_stmt 0 view .LVU80
 258 002e FFF7FEFF 		bl	memcpy
 259              	.LVL34:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 16


 403:systemview/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 260              		.loc 1 403 5 is_stmt 1 view .LVU81
 403:systemview/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 261              		.loc 1 403 21 is_stmt 0 view .LVU82
 262 0032 A144     		add	r9, r9, r4
 263              	.LVL35:
 404:systemview/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 264              		.loc 1 404 5 is_stmt 1 view .LVU83
 404:systemview/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 265              		.loc 1 404 21 is_stmt 0 view .LVU84
 266 0034 A044     		add	r8, r8, r4
 267              	.LVL36:
 405:systemview/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 268              		.loc 1 405 5 is_stmt 1 view .LVU85
 405:systemview/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 269              		.loc 1 405 21 is_stmt 0 view .LVU86
 270 0036 3F1B     		subs	r7, r7, r4
 271              	.LVL37:
 406:systemview/SEGGER_RTT.c **** #endif
 272              		.loc 1 406 5 is_stmt 1 view .LVU87
 406:systemview/SEGGER_RTT.c **** #endif
 273              		.loc 1 406 21 is_stmt 0 view .LVU88
 274 0038 2544     		add	r5, r5, r4
 275              	.LVL38:
 408:systemview/SEGGER_RTT.c ****       WrOff = 0u;
 276              		.loc 1 408 5 is_stmt 1 view .LVU89
 408:systemview/SEGGER_RTT.c ****       WrOff = 0u;
 277              		.loc 1 408 23 is_stmt 0 view .LVU90
 278 003a B368     		ldr	r3, [r6, #8]
 408:systemview/SEGGER_RTT.c ****       WrOff = 0u;
 279              		.loc 1 408 8 view .LVU91
 280 003c AB42     		cmp	r3, r5
 281 003e 09D0     		beq	.L15
 282              	.LVL39:
 283              	.L11:
 411:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 284              		.loc 1 411 15 is_stmt 1 view .LVU92
 412:systemview/SEGGER_RTT.c ****   } while (NumBytes);
 285              		.loc 1 412 5 view .LVU93
 412:systemview/SEGGER_RTT.c ****   } while (NumBytes);
 286              		.loc 1 412 18 is_stmt 0 view .LVU94
 287 0040 F560     		str	r5, [r6, #12]
 413:systemview/SEGGER_RTT.c ****   return NumBytesWritten;
 288              		.loc 1 413 11 is_stmt 1 view .LVU95
 413:systemview/SEGGER_RTT.c ****   return NumBytesWritten;
 289              		.loc 1 413 3 is_stmt 0 view .LVU96
 290 0042 4FB1     		cbz	r7, .L16
 291              	.LVL40:
 292              	.L12:
 384:systemview/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 293              		.loc 1 384 3 is_stmt 1 view .LVU97
 385:systemview/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 294              		.loc 1 385 5 view .LVU98
 385:systemview/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 295              		.loc 1 385 11 is_stmt 0 view .LVU99
 296 0044 3469     		ldr	r4, [r6, #16]
 297              	.LVL41:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 17


 386:systemview/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 298              		.loc 1 386 5 is_stmt 1 view .LVU100
 386:systemview/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 299              		.loc 1 386 8 is_stmt 0 view .LVU101
 300 0046 A542     		cmp	r5, r4
 301 0048 E3D3     		bcc	.L17
 389:systemview/SEGGER_RTT.c ****     }
 302              		.loc 1 389 7 is_stmt 1 view .LVU102
 389:systemview/SEGGER_RTT.c ****     }
 303              		.loc 1 389 30 is_stmt 0 view .LVU103
 304 004a B268     		ldr	r2, [r6, #8]
 389:systemview/SEGGER_RTT.c ****     }
 305              		.loc 1 389 62 view .LVU104
 306 004c 641B     		subs	r4, r4, r5
 307              	.LVL42:
 389:systemview/SEGGER_RTT.c ****     }
 308              		.loc 1 389 45 view .LVU105
 309 004e 1444     		add	r4, r4, r2
 389:systemview/SEGGER_RTT.c ****     }
 310              		.loc 1 389 23 view .LVU106
 311 0050 621E     		subs	r2, r4, #1
 312              	.LVL43:
 389:systemview/SEGGER_RTT.c ****     }
 313              		.loc 1 389 23 view .LVU107
 314 0052 E0E7     		b	.L10
 315              	.LVL44:
 316              	.L15:
 409:systemview/SEGGER_RTT.c ****     }
 317              		.loc 1 409 13 view .LVU108
 318 0054 0025     		movs	r5, #0
 319              	.LVL45:
 409:systemview/SEGGER_RTT.c ****     }
 320              		.loc 1 409 13 view .LVU109
 321 0056 F3E7     		b	.L11
 322              	.LVL46:
 323              	.L16:
 414:systemview/SEGGER_RTT.c **** }
 324              		.loc 1 414 3 is_stmt 1 view .LVU110
 415:systemview/SEGGER_RTT.c **** 
 325              		.loc 1 415 1 is_stmt 0 view .LVU111
 326 0058 4846     		mov	r0, r9
 327 005a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 415:systemview/SEGGER_RTT.c **** 
 328              		.loc 1 415 1 view .LVU112
 329              		.cfi_endproc
 330              	.LFE1:
 332              		.section	.text._PostTerminalSwitch,"ax",%progbits
 333              		.align	1
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	_PostTerminalSwitch:
 339              	.LVL47:
 340              	.LFB3:
 503:systemview/SEGGER_RTT.c ****   unsigned char ac[2];
 341              		.loc 1 503 88 is_stmt 1 view -0
 342              		.cfi_startproc
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 18


 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 503:systemview/SEGGER_RTT.c ****   unsigned char ac[2];
 345              		.loc 1 503 88 is_stmt 0 view .LVU114
 346 0000 00B5     		push	{lr}
 347              	.LCFI2:
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 14, -4
 350 0002 83B0     		sub	sp, sp, #12
 351              	.LCFI3:
 352              		.cfi_def_cfa_offset 16
 504:systemview/SEGGER_RTT.c **** 
 353              		.loc 1 504 3 is_stmt 1 view .LVU115
 506:systemview/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 354              		.loc 1 506 3 view .LVU116
 506:systemview/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 355              		.loc 1 506 9 is_stmt 0 view .LVU117
 356 0004 FF23     		movs	r3, #255
 357 0006 8DF80430 		strb	r3, [sp, #4]
 507:systemview/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 358              		.loc 1 507 3 is_stmt 1 view .LVU118
 507:systemview/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 359              		.loc 1 507 23 is_stmt 0 view .LVU119
 360 000a 054B     		ldr	r3, .L20
 361 000c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 507:systemview/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 362              		.loc 1 507 9 view .LVU120
 363 000e 8DF80530 		strb	r3, [sp, #5]
 508:systemview/SEGGER_RTT.c **** }
 364              		.loc 1 508 3 is_stmt 1 view .LVU121
 365 0012 0222     		movs	r2, #2
 366 0014 01A9     		add	r1, sp, #4
 367              	.LVL48:
 508:systemview/SEGGER_RTT.c **** }
 368              		.loc 1 508 3 is_stmt 0 view .LVU122
 369 0016 FFF7FEFF 		bl	_WriteBlocking
 370              	.LVL49:
 509:systemview/SEGGER_RTT.c **** 
 371              		.loc 1 509 1 view .LVU123
 372 001a 03B0     		add	sp, sp, #12
 373              	.LCFI4:
 374              		.cfi_def_cfa_offset 4
 375              		@ sp needed
 376 001c 5DF804FB 		ldr	pc, [sp], #4
 377              	.L21:
 378              		.align	2
 379              	.L20:
 380 0020 00000000 		.word	.LANCHOR0
 381              		.cfi_endproc
 382              	.LFE3:
 384              		.section	.rodata._DoInit.str1.4,"aMS",%progbits,1
 385              		.align	2
 386              	.LC0:
 387 0000 5465726D 		.ascii	"Terminal\000"
 387      696E616C 
 387      00
 388              		.section	.text._DoInit,"ax",%progbits
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 19


 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	_DoInit:
 395              	.LFB0:
 313:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 396              		.loc 1 313 27 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 10B5     		push	{r4, lr}
 401              	.LCFI5:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 314:systemview/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 405              		.loc 1 314 3 view .LVU125
 315:systemview/SEGGER_RTT.c ****   unsigned i;
 406              		.loc 1 315 3 view .LVU126
 316:systemview/SEGGER_RTT.c ****   //
 407              		.loc 1 316 3 view .LVU127
 320:systemview/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 408              		.loc 1 320 3 view .LVU128
 409              	.LVL50:
 321:systemview/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 410              		.loc 1 321 3 view .LVU129
 411 0002 134C     		ldr	r4, .L26
 412 0004 A822     		movs	r2, #168
 413 0006 0021     		movs	r1, #0
 414 0008 2046     		mov	r0, r4
 415 000a FFF7FEFF 		bl	memset
 416              	.LVL51:
 322:systemview/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 417              		.loc 1 322 3 view .LVU130
 322:systemview/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 418              		.loc 1 322 25 is_stmt 0 view .LVU131
 419 000e 0323     		movs	r3, #3
 420 0010 2361     		str	r3, [r4, #16]
 323:systemview/SEGGER_RTT.c ****   //
 421              		.loc 1 323 3 is_stmt 1 view .LVU132
 323:systemview/SEGGER_RTT.c ****   //
 422              		.loc 1 323 25 is_stmt 0 view .LVU133
 423 0012 6361     		str	r3, [r4, #20]
 327:systemview/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 424              		.loc 1 327 3 is_stmt 1 view .LVU134
 327:systemview/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 425              		.loc 1 327 27 is_stmt 0 view .LVU135
 426 0014 0F4A     		ldr	r2, .L26+4
 427 0016 A261     		str	r2, [r4, #24]
 328:systemview/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 428              		.loc 1 328 3 is_stmt 1 view .LVU136
 328:systemview/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 429              		.loc 1 328 27 is_stmt 0 view .LVU137
 430 0018 0F4B     		ldr	r3, .L26+8
 431 001a E361     		str	r3, [r4, #28]
 329:systemview/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 20


 432              		.loc 1 329 3 is_stmt 1 view .LVU138
 329:systemview/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 433              		.loc 1 329 27 is_stmt 0 view .LVU139
 434 001c 4FF48063 		mov	r3, #1024
 435 0020 2362     		str	r3, [r4, #32]
 330:systemview/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 436              		.loc 1 330 3 is_stmt 1 view .LVU140
 330:systemview/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 437              		.loc 1 330 27 is_stmt 0 view .LVU141
 438 0022 0023     		movs	r3, #0
 439 0024 A362     		str	r3, [r4, #40]
 331:systemview/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 440              		.loc 1 331 3 is_stmt 1 view .LVU142
 331:systemview/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 441              		.loc 1 331 27 is_stmt 0 view .LVU143
 442 0026 6362     		str	r3, [r4, #36]
 332:systemview/SEGGER_RTT.c ****   //
 443              		.loc 1 332 3 is_stmt 1 view .LVU144
 332:systemview/SEGGER_RTT.c ****   //
 444              		.loc 1 332 27 is_stmt 0 view .LVU145
 445 0028 E362     		str	r3, [r4, #44]
 336:systemview/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 446              		.loc 1 336 3 is_stmt 1 view .LVU146
 336:systemview/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 447              		.loc 1 336 29 is_stmt 0 view .LVU147
 448 002a 2266     		str	r2, [r4, #96]
 337:systemview/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 449              		.loc 1 337 3 is_stmt 1 view .LVU148
 337:systemview/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 450              		.loc 1 337 29 is_stmt 0 view .LVU149
 451 002c 0B4A     		ldr	r2, .L26+12
 452 002e 6266     		str	r2, [r4, #100]
 338:systemview/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 453              		.loc 1 338 3 is_stmt 1 view .LVU150
 338:systemview/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 454              		.loc 1 338 29 is_stmt 0 view .LVU151
 455 0030 1022     		movs	r2, #16
 456 0032 A266     		str	r2, [r4, #104]
 339:systemview/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 457              		.loc 1 339 3 is_stmt 1 view .LVU152
 339:systemview/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 458              		.loc 1 339 29 is_stmt 0 view .LVU153
 459 0034 2367     		str	r3, [r4, #112]
 340:systemview/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 460              		.loc 1 340 3 is_stmt 1 view .LVU154
 340:systemview/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 461              		.loc 1 340 29 is_stmt 0 view .LVU155
 462 0036 E366     		str	r3, [r4, #108]
 341:systemview/SEGGER_RTT.c ****   //
 463              		.loc 1 341 3 is_stmt 1 view .LVU156
 341:systemview/SEGGER_RTT.c ****   //
 464              		.loc 1 341 29 is_stmt 0 view .LVU157
 465 0038 6367     		str	r3, [r4, #116]
 347:systemview/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 466              		.loc 1 347 13 is_stmt 1 view .LVU158
 348:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 467              		.loc 1 348 3 view .LVU159
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 21


 468              	.LVL52:
 348:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 469              		.loc 1 348 3 is_stmt 0 view .LVU160
 470 003a 06E0     		b	.L23
 471              	.LVL53:
 472              	.L24:
 349:systemview/SEGGER_RTT.c ****   }
 473              		.loc 1 349 5 is_stmt 1 discriminator 3 view .LVU161
 349:systemview/SEGGER_RTT.c ****   }
 474              		.loc 1 349 50 is_stmt 0 discriminator 3 view .LVU162
 475 003c C3F10F02 		rsb	r2, r3, #15
 349:systemview/SEGGER_RTT.c ****   }
 476              		.loc 1 349 27 discriminator 3 view .LVU163
 477 0040 0749     		ldr	r1, .L26+16
 478 0042 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 349:systemview/SEGGER_RTT.c ****   }
 479              		.loc 1 349 16 discriminator 3 view .LVU164
 480 0044 024A     		ldr	r2, .L26
 481 0046 D154     		strb	r1, [r2, r3]
 348:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 482              		.loc 1 348 42 is_stmt 1 discriminator 3 view .LVU165
 483 0048 0133     		adds	r3, r3, #1
 484              	.LVL54:
 485              	.L23:
 348:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 486              		.loc 1 348 15 discriminator 1 view .LVU166
 348:systemview/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 487              		.loc 1 348 3 is_stmt 0 discriminator 1 view .LVU167
 488 004a 0F2B     		cmp	r3, #15
 489 004c F6D9     		bls	.L24
 352:systemview/SEGGER_RTT.c **** 
 490              		.loc 1 352 1 view .LVU168
 491 004e 10BD     		pop	{r4, pc}
 492              	.L27:
 493              		.align	2
 494              	.L26:
 495 0050 00000000 		.word	.LANCHOR1
 496 0054 00000000 		.word	.LC0
 497 0058 00000000 		.word	.LANCHOR2
 498 005c 00000000 		.word	.LANCHOR3
 499 0060 00000000 		.word	.LANCHOR4
 500              		.cfi_endproc
 501              	.LFE0:
 503              		.section	.text.SEGGER_RTT_ReadUpBufferNoLock,"ax",%progbits
 504              		.align	1
 505              		.global	SEGGER_RTT_ReadUpBufferNoLock
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 510              	SEGGER_RTT_ReadUpBufferNoLock:
 511              	.LVL55:
 512              	.LFB5:
 542:systemview/SEGGER_RTT.c **** 
 543:systemview/SEGGER_RTT.c **** /*********************************************************************
 544:systemview/SEGGER_RTT.c **** *
 545:systemview/SEGGER_RTT.c **** *       Public code
 546:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 22


 547:systemview/SEGGER_RTT.c **** **********************************************************************
 548:systemview/SEGGER_RTT.c **** */
 549:systemview/SEGGER_RTT.c **** 
 550:systemview/SEGGER_RTT.c **** /*********************************************************************
 551:systemview/SEGGER_RTT.c **** *
 552:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBufferNoLock()
 553:systemview/SEGGER_RTT.c **** *
 554:systemview/SEGGER_RTT.c **** *  Function description
 555:systemview/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 556:systemview/SEGGER_RTT.c **** *    which have been previously stored by the application.
 557:systemview/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 558:systemview/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer
 559:systemview/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 560:systemview/SEGGER_RTT.c **** *
 561:systemview/SEGGER_RTT.c **** *  Parameters
 562:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 563:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 564:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 565:systemview/SEGGER_RTT.c **** *
 566:systemview/SEGGER_RTT.c **** *  Return value
 567:systemview/SEGGER_RTT.c **** *    Number of bytes that have been read.
 568:systemview/SEGGER_RTT.c **** *
 569:systemview/SEGGER_RTT.c **** *  Additional information
 570:systemview/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 571:systemview/SEGGER_RTT.c **** */
 572:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBufferNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 513              		.loc 1 572 96 is_stmt 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		.loc 1 572 96 is_stmt 0 view .LVU170
 518 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 519              	.LCFI6:
 520              		.cfi_def_cfa_offset 32
 521              		.cfi_offset 4, -32
 522              		.cfi_offset 5, -28
 523              		.cfi_offset 6, -24
 524              		.cfi_offset 7, -20
 525              		.cfi_offset 8, -16
 526              		.cfi_offset 9, -12
 527              		.cfi_offset 10, -8
 528              		.cfi_offset 14, -4
 529 0004 0446     		mov	r4, r0
 530 0006 8846     		mov	r8, r1
 531 0008 9146     		mov	r9, r2
 573:systemview/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 532              		.loc 1 573 3 is_stmt 1 view .LVU171
 574:systemview/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 533              		.loc 1 574 3 view .LVU172
 575:systemview/SEGGER_RTT.c ****   unsigned                RdOff;
 534              		.loc 1 575 3 view .LVU173
 576:systemview/SEGGER_RTT.c ****   unsigned                WrOff;
 535              		.loc 1 576 3 view .LVU174
 577:systemview/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 536              		.loc 1 577 3 view .LVU175
 578:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 537              		.loc 1 578 3 view .LVU176
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 23


 579:systemview/SEGGER_RTT.c ****   volatile char*          pSrc;
 538              		.loc 1 579 3 view .LVU177
 580:systemview/SEGGER_RTT.c **** 
 581:systemview/SEGGER_RTT.c ****   INIT();
 539              		.loc 1 581 3 view .LVU178
 540              	.LBB2:
 541              		.loc 1 581 3 view .LVU179
 542              		.loc 1 581 3 view .LVU180
 543              	.LVL56:
 544              		.loc 1 581 3 view .LVU181
 545 000a 284B     		ldr	r3, .L39
 546 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547 000e DBB2     		uxtb	r3, r3
 548 0010 532B     		cmp	r3, #83
 549 0012 18D1     		bne	.L36
 550              	.LVL57:
 551              	.L29:
 552              		.loc 1 581 3 is_stmt 0 view .LVU182
 553              	.LBE2:
 554              		.loc 1 581 3 is_stmt 1 discriminator 3 view .LVU183
 582:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 555              		.loc 1 582 3 discriminator 3 view .LVU184
 583:systemview/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 556              		.loc 1 583 3 discriminator 3 view .LVU185
 584:systemview/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 557              		.loc 1 584 3 discriminator 3 view .LVU186
 558              		.loc 1 584 9 is_stmt 0 discriminator 3 view .LVU187
 559 0014 04EB4403 		add	r3, r4, r4, lsl #1
 560 0018 244A     		ldr	r2, .L39
 561 001a 02EBC303 		add	r3, r2, r3, lsl #3
 562 001e 9F6A     		ldr	r7, [r3, #40]
 563              	.LVL58:
 585:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 564              		.loc 1 585 3 is_stmt 1 discriminator 3 view .LVU188
 565              		.loc 1 585 9 is_stmt 0 discriminator 3 view .LVU189
 566 0020 5D6A     		ldr	r5, [r3, #36]
 567              	.LVL59:
 586:systemview/SEGGER_RTT.c ****   NumBytesRead = 0u;
 568              		.loc 1 586 3 is_stmt 1 discriminator 3 view .LVU190
 587:systemview/SEGGER_RTT.c ****   //
 588:systemview/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 589:systemview/SEGGER_RTT.c ****   //
 590:systemview/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 569              		.loc 1 590 3 discriminator 3 view .LVU191
 570              		.loc 1 590 6 is_stmt 0 discriminator 3 view .LVU192
 571 0022 AF42     		cmp	r7, r5
 572 0024 12D8     		bhi	.L37
 586:systemview/SEGGER_RTT.c ****   NumBytesRead = 0u;
 573              		.loc 1 586 16 view .LVU193
 574 0026 0026     		movs	r6, #0
 575              	.LVL60:
 576              	.L30:
 591:systemview/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 592:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 593:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 594:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 595:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 24


 596:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 597:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 598:systemview/SEGGER_RTT.c ****     while (NumBytesRem--) {
 599:systemview/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 600:systemview/SEGGER_RTT.c ****     };
 601:systemview/SEGGER_RTT.c **** #else
 602:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 603:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 604:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 605:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 606:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 607:systemview/SEGGER_RTT.c **** #endif
 608:systemview/SEGGER_RTT.c ****     //
 609:systemview/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 610:systemview/SEGGER_RTT.c ****     //
 611:systemview/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 612:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 613:systemview/SEGGER_RTT.c ****     }
 614:systemview/SEGGER_RTT.c ****   }
 615:systemview/SEGGER_RTT.c ****   //
 616:systemview/SEGGER_RTT.c ****   // Read remaining items of buffer
 617:systemview/SEGGER_RTT.c ****   //
 618:systemview/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 577              		.loc 1 618 3 is_stmt 1 view .LVU194
 578              		.loc 1 618 15 is_stmt 0 view .LVU195
 579 0028 ED1B     		subs	r5, r5, r7
 580              	.LVL61:
 619:systemview/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 581              		.loc 1 619 3 is_stmt 1 view .LVU196
 582              		.loc 1 619 15 is_stmt 0 view .LVU197
 583 002a 4D45     		cmp	r5, r9
 584 002c 28BF     		it	cs
 585 002e 4D46     		movcs	r5, r9
 586              	.LVL62:
 620:systemview/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 587              		.loc 1 620 3 is_stmt 1 view .LVU198
 588              		.loc 1 620 6 is_stmt 0 view .LVU199
 589 0030 65BB     		cbnz	r5, .L38
 590              	.LVL63:
 591              	.L31:
 621:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 622:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 623:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 624:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 625:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 626:systemview/SEGGER_RTT.c ****     while (NumBytesRem--) {
 627:systemview/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 628:systemview/SEGGER_RTT.c ****     };
 629:systemview/SEGGER_RTT.c **** #else
 630:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 631:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 632:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 633:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 634:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 635:systemview/SEGGER_RTT.c **** #endif
 636:systemview/SEGGER_RTT.c ****   }
 637:systemview/SEGGER_RTT.c ****   //
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 25


 638:systemview/SEGGER_RTT.c ****   // Update read offset of buffer
 639:systemview/SEGGER_RTT.c ****   //
 640:systemview/SEGGER_RTT.c ****   if (NumBytesRead) {
 592              		.loc 1 640 3 is_stmt 1 view .LVU200
 593              		.loc 1 640 6 is_stmt 0 view .LVU201
 594 0032 2EB1     		cbz	r6, .L28
 641:systemview/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 595              		.loc 1 641 5 is_stmt 1 view .LVU202
 596              		.loc 1 641 18 is_stmt 0 view .LVU203
 597 0034 04EB4404 		add	r4, r4, r4, lsl #1
 598              	.LVL64:
 599              		.loc 1 641 18 view .LVU204
 600 0038 1C48     		ldr	r0, .L39
 601 003a 00EBC404 		add	r4, r0, r4, lsl #3
 602 003e A762     		str	r7, [r4, #40]
 642:systemview/SEGGER_RTT.c ****   }
 643:systemview/SEGGER_RTT.c ****   //
 644:systemview/SEGGER_RTT.c ****   return NumBytesRead;
 603              		.loc 1 644 3 is_stmt 1 view .LVU205
 604              	.L28:
 645:systemview/SEGGER_RTT.c **** }
 605              		.loc 1 645 1 is_stmt 0 view .LVU206
 606 0040 3046     		mov	r0, r6
 607 0042 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 608              	.LVL65:
 609              	.L36:
 610              	.LBB3:
 581:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 611              		.loc 1 581 3 is_stmt 1 discriminator 1 view .LVU207
 612 0046 FFF7FEFF 		bl	_DoInit
 613              	.LVL66:
 581:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 614              		.loc 1 581 3 is_stmt 0 discriminator 1 view .LVU208
 615 004a E3E7     		b	.L29
 616              	.LVL67:
 617              	.L37:
 581:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 618              		.loc 1 581 3 discriminator 1 view .LVU209
 619              	.LBE3:
 591:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 620              		.loc 1 591 5 is_stmt 1 view .LVU210
 591:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 621              		.loc 1 591 24 is_stmt 0 view .LVU211
 622 004c 1346     		mov	r3, r2
 623 004e 04EB440A 		add	r10, r4, r4, lsl #1
 624 0052 02EBCA0A 		add	r10, r2, r10, lsl #3
 625 0056 DAF82060 		ldr	r6, [r10, #32]
 591:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 626              		.loc 1 591 17 view .LVU212
 627 005a F61B     		subs	r6, r6, r7
 628              	.LVL68:
 592:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 629              		.loc 1 592 5 is_stmt 1 view .LVU213
 592:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 630              		.loc 1 592 17 is_stmt 0 view .LVU214
 631 005c 4E45     		cmp	r6, r9
 632 005e 28BF     		it	cs
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 26


 633 0060 4E46     		movcs	r6, r9
 634              	.LVL69:
 593:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 635              		.loc 1 593 5 is_stmt 1 view .LVU215
 593:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 636              		.loc 1 593 18 is_stmt 0 view .LVU216
 637 0062 621C     		adds	r2, r4, #1
 638 0064 02EB4202 		add	r2, r2, r2, lsl #1
 639 0068 03EBC203 		add	r3, r3, r2, lsl #3
 640 006c 5968     		ldr	r1, [r3, #4]
 641              	.LVL70:
 602:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 642              		.loc 1 602 5 is_stmt 1 view .LVU217
 643 006e 3246     		mov	r2, r6
 644 0070 3944     		add	r1, r1, r7
 645              	.LVL71:
 602:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 646              		.loc 1 602 5 is_stmt 0 view .LVU218
 647 0072 4046     		mov	r0, r8
 648 0074 FFF7FEFF 		bl	memcpy
 649              	.LVL72:
 603:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 650              		.loc 1 603 5 is_stmt 1 view .LVU219
 604:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 651              		.loc 1 604 5 view .LVU220
 604:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 652              		.loc 1 604 18 is_stmt 0 view .LVU221
 653 0078 B044     		add	r8, r8, r6
 654              	.LVL73:
 605:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 655              		.loc 1 605 5 is_stmt 1 view .LVU222
 605:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 656              		.loc 1 605 18 is_stmt 0 view .LVU223
 657 007a A9EB0609 		sub	r9, r9, r6
 658              	.LVL74:
 606:systemview/SEGGER_RTT.c **** #endif
 659              		.loc 1 606 5 is_stmt 1 view .LVU224
 606:systemview/SEGGER_RTT.c **** #endif
 660              		.loc 1 606 18 is_stmt 0 view .LVU225
 661 007e 3744     		add	r7, r7, r6
 662              	.LVL75:
 611:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 663              		.loc 1 611 5 is_stmt 1 view .LVU226
 611:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 664              		.loc 1 611 23 is_stmt 0 view .LVU227
 665 0080 DAF82030 		ldr	r3, [r10, #32]
 611:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 666              		.loc 1 611 8 view .LVU228
 667 0084 BB42     		cmp	r3, r7
 668 0086 CFD1     		bne	.L30
 612:systemview/SEGGER_RTT.c ****     }
 669              		.loc 1 612 13 view .LVU229
 670 0088 0027     		movs	r7, #0
 671              	.LVL76:
 612:systemview/SEGGER_RTT.c ****     }
 672              		.loc 1 612 13 view .LVU230
 673 008a CDE7     		b	.L30
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 27


 674              	.LVL77:
 675              	.L38:
 621:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 676              		.loc 1 621 5 is_stmt 1 view .LVU231
 621:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 677              		.loc 1 621 18 is_stmt 0 view .LVU232
 678 008c 631C     		adds	r3, r4, #1
 679 008e 03EB4303 		add	r3, r3, r3, lsl #1
 680 0092 064A     		ldr	r2, .L39
 681 0094 02EBC303 		add	r3, r2, r3, lsl #3
 682 0098 5968     		ldr	r1, [r3, #4]
 683              	.LVL78:
 630:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 684              		.loc 1 630 5 is_stmt 1 view .LVU233
 685 009a 2A46     		mov	r2, r5
 686 009c 3944     		add	r1, r1, r7
 687              	.LVL79:
 630:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 688              		.loc 1 630 5 is_stmt 0 view .LVU234
 689 009e 4046     		mov	r0, r8
 690 00a0 FFF7FEFF 		bl	memcpy
 691              	.LVL80:
 631:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 692              		.loc 1 631 5 is_stmt 1 view .LVU235
 631:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 693              		.loc 1 631 18 is_stmt 0 view .LVU236
 694 00a4 2E44     		add	r6, r6, r5
 695              	.LVL81:
 632:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 696              		.loc 1 632 5 is_stmt 1 view .LVU237
 633:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 697              		.loc 1 633 5 view .LVU238
 634:systemview/SEGGER_RTT.c **** #endif
 698              		.loc 1 634 5 view .LVU239
 634:systemview/SEGGER_RTT.c **** #endif
 699              		.loc 1 634 18 is_stmt 0 view .LVU240
 700 00a6 2F44     		add	r7, r7, r5
 701              	.LVL82:
 634:systemview/SEGGER_RTT.c **** #endif
 702              		.loc 1 634 18 view .LVU241
 703 00a8 C3E7     		b	.L31
 704              	.L40:
 705 00aa 00BF     		.align	2
 706              	.L39:
 707 00ac 00000000 		.word	.LANCHOR1
 708              		.cfi_endproc
 709              	.LFE5:
 711              		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 712              		.align	1
 713              		.global	SEGGER_RTT_ReadNoLock
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	SEGGER_RTT_ReadNoLock:
 719              	.LVL83:
 720              	.LFB6:
 646:systemview/SEGGER_RTT.c **** 
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 28


 647:systemview/SEGGER_RTT.c **** /*********************************************************************
 648:systemview/SEGGER_RTT.c **** *
 649:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 650:systemview/SEGGER_RTT.c **** *
 651:systemview/SEGGER_RTT.c **** *  Function description
 652:systemview/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 653:systemview/SEGGER_RTT.c **** *    which have been previously stored by the host.
 654:systemview/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 655:systemview/SEGGER_RTT.c **** *
 656:systemview/SEGGER_RTT.c **** *  Parameters
 657:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 658:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 659:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 660:systemview/SEGGER_RTT.c **** *
 661:systemview/SEGGER_RTT.c **** *  Return value
 662:systemview/SEGGER_RTT.c **** *    Number of bytes that have been read.
 663:systemview/SEGGER_RTT.c **** */
 664:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 721              		.loc 1 664 88 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		.loc 1 664 88 is_stmt 0 view .LVU243
 726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 727              	.LCFI7:
 728              		.cfi_def_cfa_offset 32
 729              		.cfi_offset 4, -32
 730              		.cfi_offset 5, -28
 731              		.cfi_offset 6, -24
 732              		.cfi_offset 7, -20
 733              		.cfi_offset 8, -16
 734              		.cfi_offset 9, -12
 735              		.cfi_offset 10, -8
 736              		.cfi_offset 14, -4
 737 0004 0446     		mov	r4, r0
 738 0006 8846     		mov	r8, r1
 739 0008 9146     		mov	r9, r2
 665:systemview/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 740              		.loc 1 665 3 is_stmt 1 view .LVU244
 666:systemview/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 741              		.loc 1 666 3 view .LVU245
 667:systemview/SEGGER_RTT.c ****   unsigned                RdOff;
 742              		.loc 1 667 3 view .LVU246
 668:systemview/SEGGER_RTT.c ****   unsigned                WrOff;
 743              		.loc 1 668 3 view .LVU247
 669:systemview/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 744              		.loc 1 669 3 view .LVU248
 670:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 745              		.loc 1 670 3 view .LVU249
 671:systemview/SEGGER_RTT.c ****   volatile char*          pSrc;
 746              		.loc 1 671 3 view .LVU250
 672:systemview/SEGGER_RTT.c ****   //
 673:systemview/SEGGER_RTT.c ****   INIT();
 747              		.loc 1 673 3 view .LVU251
 748              	.LBB4:
 749              		.loc 1 673 3 view .LVU252
 750              		.loc 1 673 3 view .LVU253
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 29


 751              	.LVL84:
 752              		.loc 1 673 3 view .LVU254
 753 000a 254B     		ldr	r3, .L52
 754 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 000e DBB2     		uxtb	r3, r3
 756 0010 532B     		cmp	r3, #83
 757 0012 18D1     		bne	.L49
 758              	.LVL85:
 759              	.L42:
 760              		.loc 1 673 3 is_stmt 0 view .LVU255
 761              	.LBE4:
 762              		.loc 1 673 3 is_stmt 1 discriminator 3 view .LVU256
 674:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHE
 763              		.loc 1 674 3 discriminator 3 view .LVU257
 675:systemview/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 764              		.loc 1 675 3 discriminator 3 view .LVU258
 676:systemview/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 765              		.loc 1 676 3 discriminator 3 view .LVU259
 766              		.loc 1 676 9 is_stmt 0 discriminator 3 view .LVU260
 767 0014 04EB4403 		add	r3, r4, r4, lsl #1
 768 0018 214A     		ldr	r2, .L52
 769 001a 02EBC303 		add	r3, r2, r3, lsl #3
 770 001e 1F6F     		ldr	r7, [r3, #112]
 771              	.LVL86:
 677:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 772              		.loc 1 677 3 is_stmt 1 discriminator 3 view .LVU261
 773              		.loc 1 677 9 is_stmt 0 discriminator 3 view .LVU262
 774 0020 DD6E     		ldr	r5, [r3, #108]
 775              	.LVL87:
 678:systemview/SEGGER_RTT.c ****   NumBytesRead = 0u;
 776              		.loc 1 678 3 is_stmt 1 discriminator 3 view .LVU263
 679:systemview/SEGGER_RTT.c ****   //
 680:systemview/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 681:systemview/SEGGER_RTT.c ****   //
 682:systemview/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 777              		.loc 1 682 3 discriminator 3 view .LVU264
 778              		.loc 1 682 6 is_stmt 0 discriminator 3 view .LVU265
 779 0022 AF42     		cmp	r7, r5
 780 0024 12D8     		bhi	.L50
 678:systemview/SEGGER_RTT.c ****   NumBytesRead = 0u;
 781              		.loc 1 678 16 view .LVU266
 782 0026 0026     		movs	r6, #0
 783              	.LVL88:
 784              	.L43:
 683:systemview/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 684:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 685:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 686:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 687:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 688:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 689:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 690:systemview/SEGGER_RTT.c ****     while (NumBytesRem--) {
 691:systemview/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 692:systemview/SEGGER_RTT.c ****     };
 693:systemview/SEGGER_RTT.c **** #else
 694:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 695:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 30


 696:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 697:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 698:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 699:systemview/SEGGER_RTT.c **** #endif
 700:systemview/SEGGER_RTT.c ****     //
 701:systemview/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 702:systemview/SEGGER_RTT.c ****     //
 703:systemview/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 704:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 705:systemview/SEGGER_RTT.c ****     }
 706:systemview/SEGGER_RTT.c ****   }
 707:systemview/SEGGER_RTT.c ****   //
 708:systemview/SEGGER_RTT.c ****   // Read remaining items of buffer
 709:systemview/SEGGER_RTT.c ****   //
 710:systemview/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 785              		.loc 1 710 3 is_stmt 1 view .LVU267
 786              		.loc 1 710 15 is_stmt 0 view .LVU268
 787 0028 ED1B     		subs	r5, r5, r7
 788              	.LVL89:
 711:systemview/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 789              		.loc 1 711 3 is_stmt 1 view .LVU269
 790              		.loc 1 711 15 is_stmt 0 view .LVU270
 791 002a 4D45     		cmp	r5, r9
 792 002c 28BF     		it	cs
 793 002e 4D46     		movcs	r5, r9
 794              	.LVL90:
 712:systemview/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 795              		.loc 1 712 3 is_stmt 1 view .LVU271
 796              		.loc 1 712 6 is_stmt 0 view .LVU272
 797 0030 3DBB     		cbnz	r5, .L51
 798              	.LVL91:
 799              	.L44:
 713:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 714:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 715:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 716:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 717:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 718:systemview/SEGGER_RTT.c ****     while (NumBytesRem--) {
 719:systemview/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 720:systemview/SEGGER_RTT.c ****     };
 721:systemview/SEGGER_RTT.c **** #else
 722:systemview/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 723:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 724:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 725:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 726:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 727:systemview/SEGGER_RTT.c **** #endif
 728:systemview/SEGGER_RTT.c ****   }
 729:systemview/SEGGER_RTT.c ****   if (NumBytesRead) {
 800              		.loc 1 729 3 is_stmt 1 view .LVU273
 801              		.loc 1 729 6 is_stmt 0 view .LVU274
 802 0032 2EB1     		cbz	r6, .L41
 730:systemview/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 803              		.loc 1 730 5 is_stmt 1 view .LVU275
 804              		.loc 1 730 18 is_stmt 0 view .LVU276
 805 0034 04EB4404 		add	r4, r4, r4, lsl #1
 806              	.LVL92:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 31


 807              		.loc 1 730 18 view .LVU277
 808 0038 1948     		ldr	r0, .L52
 809 003a 00EBC404 		add	r4, r0, r4, lsl #3
 810 003e 2767     		str	r7, [r4, #112]
 731:systemview/SEGGER_RTT.c ****   }
 732:systemview/SEGGER_RTT.c ****   //
 733:systemview/SEGGER_RTT.c ****   return NumBytesRead;
 811              		.loc 1 733 3 is_stmt 1 view .LVU278
 812              	.L41:
 734:systemview/SEGGER_RTT.c **** }
 813              		.loc 1 734 1 is_stmt 0 view .LVU279
 814 0040 3046     		mov	r0, r6
 815 0042 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 816              	.LVL93:
 817              	.L49:
 818              	.LBB5:
 673:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHE
 819              		.loc 1 673 3 is_stmt 1 discriminator 1 view .LVU280
 820 0046 FFF7FEFF 		bl	_DoInit
 821              	.LVL94:
 673:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHE
 822              		.loc 1 673 3 is_stmt 0 discriminator 1 view .LVU281
 823 004a E3E7     		b	.L42
 824              	.LVL95:
 825              	.L50:
 673:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHE
 826              		.loc 1 673 3 discriminator 1 view .LVU282
 827              	.LBE5:
 683:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 828              		.loc 1 683 5 is_stmt 1 view .LVU283
 683:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 829              		.loc 1 683 24 is_stmt 0 view .LVU284
 830 004c 04EB440A 		add	r10, r4, r4, lsl #1
 831 0050 02EBCA0A 		add	r10, r2, r10, lsl #3
 832 0054 DAF86860 		ldr	r6, [r10, #104]
 683:systemview/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 833              		.loc 1 683 17 view .LVU285
 834 0058 F61B     		subs	r6, r6, r7
 835              	.LVL96:
 684:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 836              		.loc 1 684 5 is_stmt 1 view .LVU286
 684:systemview/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 837              		.loc 1 684 17 is_stmt 0 view .LVU287
 838 005a 4E45     		cmp	r6, r9
 839 005c 28BF     		it	cs
 840 005e 4E46     		movcs	r6, r9
 841              	.LVL97:
 685:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 842              		.loc 1 685 5 is_stmt 1 view .LVU288
 685:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 843              		.loc 1 685 18 is_stmt 0 view .LVU289
 844 0060 DAF86410 		ldr	r1, [r10, #100]
 845              	.LVL98:
 694:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 846              		.loc 1 694 5 is_stmt 1 view .LVU290
 847 0064 3246     		mov	r2, r6
 848 0066 3944     		add	r1, r1, r7
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 32


 849              	.LVL99:
 694:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 850              		.loc 1 694 5 is_stmt 0 view .LVU291
 851 0068 4046     		mov	r0, r8
 852 006a FFF7FEFF 		bl	memcpy
 853              	.LVL100:
 695:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 854              		.loc 1 695 5 is_stmt 1 view .LVU292
 696:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 855              		.loc 1 696 5 view .LVU293
 696:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 856              		.loc 1 696 18 is_stmt 0 view .LVU294
 857 006e B044     		add	r8, r8, r6
 858              	.LVL101:
 697:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 859              		.loc 1 697 5 is_stmt 1 view .LVU295
 697:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 860              		.loc 1 697 18 is_stmt 0 view .LVU296
 861 0070 A9EB0609 		sub	r9, r9, r6
 862              	.LVL102:
 698:systemview/SEGGER_RTT.c **** #endif
 863              		.loc 1 698 5 is_stmt 1 view .LVU297
 698:systemview/SEGGER_RTT.c **** #endif
 864              		.loc 1 698 18 is_stmt 0 view .LVU298
 865 0074 3744     		add	r7, r7, r6
 866              	.LVL103:
 703:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 867              		.loc 1 703 5 is_stmt 1 view .LVU299
 703:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 868              		.loc 1 703 23 is_stmt 0 view .LVU300
 869 0076 DAF86830 		ldr	r3, [r10, #104]
 703:systemview/SEGGER_RTT.c ****       RdOff = 0u;
 870              		.loc 1 703 8 view .LVU301
 871 007a BB42     		cmp	r3, r7
 872 007c D4D1     		bne	.L43
 704:systemview/SEGGER_RTT.c ****     }
 873              		.loc 1 704 13 view .LVU302
 874 007e 0027     		movs	r7, #0
 875              	.LVL104:
 704:systemview/SEGGER_RTT.c ****     }
 876              		.loc 1 704 13 view .LVU303
 877 0080 D2E7     		b	.L43
 878              	.LVL105:
 879              	.L51:
 713:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 880              		.loc 1 713 5 is_stmt 1 view .LVU304
 713:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 881              		.loc 1 713 18 is_stmt 0 view .LVU305
 882 0082 04EB4403 		add	r3, r4, r4, lsl #1
 883 0086 064A     		ldr	r2, .L52
 884 0088 02EBC303 		add	r3, r2, r3, lsl #3
 885 008c 596E     		ldr	r1, [r3, #100]
 886              	.LVL106:
 722:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 887              		.loc 1 722 5 is_stmt 1 view .LVU306
 888 008e 2A46     		mov	r2, r5
 889 0090 3944     		add	r1, r1, r7
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 33


 890              	.LVL107:
 722:systemview/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 891              		.loc 1 722 5 is_stmt 0 view .LVU307
 892 0092 4046     		mov	r0, r8
 893 0094 FFF7FEFF 		bl	memcpy
 894              	.LVL108:
 723:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 895              		.loc 1 723 5 is_stmt 1 view .LVU308
 723:systemview/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 896              		.loc 1 723 18 is_stmt 0 view .LVU309
 897 0098 2E44     		add	r6, r6, r5
 898              	.LVL109:
 724:systemview/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 899              		.loc 1 724 5 is_stmt 1 view .LVU310
 725:systemview/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 900              		.loc 1 725 5 view .LVU311
 726:systemview/SEGGER_RTT.c **** #endif
 901              		.loc 1 726 5 view .LVU312
 726:systemview/SEGGER_RTT.c **** #endif
 902              		.loc 1 726 18 is_stmt 0 view .LVU313
 903 009a 2F44     		add	r7, r7, r5
 904              	.LVL110:
 726:systemview/SEGGER_RTT.c **** #endif
 905              		.loc 1 726 18 view .LVU314
 906 009c C9E7     		b	.L44
 907              	.L53:
 908 009e 00BF     		.align	2
 909              	.L52:
 910 00a0 00000000 		.word	.LANCHOR1
 911              		.cfi_endproc
 912              	.LFE6:
 914              		.section	.text.SEGGER_RTT_ReadUpBuffer,"ax",%progbits
 915              		.align	1
 916              		.global	SEGGER_RTT_ReadUpBuffer
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 921              	SEGGER_RTT_ReadUpBuffer:
 922              	.LVL111:
 923              	.LFB7:
 735:systemview/SEGGER_RTT.c **** 
 736:systemview/SEGGER_RTT.c **** /*********************************************************************
 737:systemview/SEGGER_RTT.c **** *
 738:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBuffer
 739:systemview/SEGGER_RTT.c **** *
 740:systemview/SEGGER_RTT.c **** *  Function description
 741:systemview/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 742:systemview/SEGGER_RTT.c **** *    which have been previously stored by the application.
 743:systemview/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer
 744:systemview/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 745:systemview/SEGGER_RTT.c **** *
 746:systemview/SEGGER_RTT.c **** *  Parameters
 747:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 748:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 749:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 750:systemview/SEGGER_RTT.c **** *
 751:systemview/SEGGER_RTT.c **** *  Return value
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 34


 752:systemview/SEGGER_RTT.c **** *    Number of bytes that have been read.
 753:systemview/SEGGER_RTT.c **** *
 754:systemview/SEGGER_RTT.c **** *  Additional information
 755:systemview/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 756:systemview/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
 757:systemview/SEGGER_RTT.c **** *    the read operation, writing is also locked.
 758:systemview/SEGGER_RTT.c **** *    If only one consumer reads from the up buffer,
 759:systemview/SEGGER_RTT.c **** *    call sEGGER_RTT_ReadUpBufferNoLock() instead.
 760:systemview/SEGGER_RTT.c **** */
 761:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBuffer(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 924              		.loc 1 761 92 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              		.loc 1 761 92 is_stmt 0 view .LVU316
 929 0000 10B5     		push	{r4, lr}
 930              	.LCFI8:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 934 0002 0B46     		mov	r3, r1
 762:systemview/SEGGER_RTT.c ****   unsigned NumBytesRead;
 935              		.loc 1 762 3 is_stmt 1 view .LVU317
 936              	.LBB6:
 763:systemview/SEGGER_RTT.c **** 
 764:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 937              		.loc 1 764 3 view .LVU318
 938              		.loc 1 764 3 view .LVU319
 939              		.syntax unified
 940              	@ 764 "systemview/SEGGER_RTT.c" 1
 941 0004 EFF31184 		mrs   r4, basepri  
 942 0008 4FF02001 		mov   r1, #32       
 943 000c 81F31188 		msr   basepri, r1  
 944              		
 945              	@ 0 "" 2
 946              	.LVL112:
 947              		.loc 1 764 20 view .LVU320
 765:systemview/SEGGER_RTT.c ****   //
 766:systemview/SEGGER_RTT.c ****   // Call the non-locking read function
 767:systemview/SEGGER_RTT.c ****   //
 768:systemview/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadUpBufferNoLock(BufferIndex, pBuffer, BufferSize);
 948              		.loc 1 768 3 view .LVU321
 949              		.loc 1 768 18 is_stmt 0 view .LVU322
 950              		.thumb
 951              		.syntax unified
 952 0010 1946     		mov	r1, r3
 953 0012 FFF7FEFF 		bl	SEGGER_RTT_ReadUpBufferNoLock
 954              	.LVL113:
 769:systemview/SEGGER_RTT.c ****   //
 770:systemview/SEGGER_RTT.c ****   // Finish up.
 771:systemview/SEGGER_RTT.c ****   //
 772:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 955              		.loc 1 772 3 is_stmt 1 view .LVU323
 956              		.syntax unified
 957              	@ 772 "systemview/SEGGER_RTT.c" 1
 958 0016 84F31188 		msr   basepri, r4  
 959              		
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 35


 960              	@ 0 "" 2
 961              		.thumb
 962              		.syntax unified
 963              	.LBE6:
 964              		.loc 1 772 22 view .LVU324
 773:systemview/SEGGER_RTT.c ****   //
 774:systemview/SEGGER_RTT.c ****   return NumBytesRead;
 965              		.loc 1 774 3 view .LVU325
 775:systemview/SEGGER_RTT.c **** }
 966              		.loc 1 775 1 is_stmt 0 view .LVU326
 967 001a 10BD     		pop	{r4, pc}
 968              		.loc 1 775 1 view .LVU327
 969              		.cfi_endproc
 970              	.LFE7:
 972              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 973              		.align	1
 974              		.global	SEGGER_RTT_Read
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 979              	SEGGER_RTT_Read:
 980              	.LVL114:
 981              	.LFB8:
 776:systemview/SEGGER_RTT.c **** 
 777:systemview/SEGGER_RTT.c **** /*********************************************************************
 778:systemview/SEGGER_RTT.c **** *
 779:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 780:systemview/SEGGER_RTT.c **** *
 781:systemview/SEGGER_RTT.c **** *  Function description
 782:systemview/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 783:systemview/SEGGER_RTT.c **** *    which have been previously stored by the host.
 784:systemview/SEGGER_RTT.c **** *
 785:systemview/SEGGER_RTT.c **** *  Parameters
 786:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 787:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 788:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 789:systemview/SEGGER_RTT.c **** *
 790:systemview/SEGGER_RTT.c **** *  Return value
 791:systemview/SEGGER_RTT.c **** *    Number of bytes that have been read.
 792:systemview/SEGGER_RTT.c **** */
 793:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 982              		.loc 1 793 84 is_stmt 1 view -0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              		.loc 1 793 84 is_stmt 0 view .LVU329
 987 0000 10B5     		push	{r4, lr}
 988              	.LCFI9:
 989              		.cfi_def_cfa_offset 8
 990              		.cfi_offset 4, -8
 991              		.cfi_offset 14, -4
 992 0002 0B46     		mov	r3, r1
 794:systemview/SEGGER_RTT.c ****   unsigned NumBytesRead;
 993              		.loc 1 794 3 is_stmt 1 view .LVU330
 994              	.LBB7:
 795:systemview/SEGGER_RTT.c **** 
 796:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 36


 995              		.loc 1 796 3 view .LVU331
 996              		.loc 1 796 3 view .LVU332
 997              		.syntax unified
 998              	@ 796 "systemview/SEGGER_RTT.c" 1
 999 0004 EFF31184 		mrs   r4, basepri  
 1000 0008 4FF02001 		mov   r1, #32       
 1001 000c 81F31188 		msr   basepri, r1  
 1002              		
 1003              	@ 0 "" 2
 1004              	.LVL115:
 1005              		.loc 1 796 20 view .LVU333
 797:systemview/SEGGER_RTT.c ****   //
 798:systemview/SEGGER_RTT.c ****   // Call the non-locking read function
 799:systemview/SEGGER_RTT.c ****   //
 800:systemview/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 1006              		.loc 1 800 3 view .LVU334
 1007              		.loc 1 800 18 is_stmt 0 view .LVU335
 1008              		.thumb
 1009              		.syntax unified
 1010 0010 1946     		mov	r1, r3
 1011 0012 FFF7FEFF 		bl	SEGGER_RTT_ReadNoLock
 1012              	.LVL116:
 801:systemview/SEGGER_RTT.c ****   //
 802:systemview/SEGGER_RTT.c ****   // Finish up.
 803:systemview/SEGGER_RTT.c ****   //
 804:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1013              		.loc 1 804 3 is_stmt 1 view .LVU336
 1014              		.syntax unified
 1015              	@ 804 "systemview/SEGGER_RTT.c" 1
 1016 0016 84F31188 		msr   basepri, r4  
 1017              		
 1018              	@ 0 "" 2
 1019              		.thumb
 1020              		.syntax unified
 1021              	.LBE7:
 1022              		.loc 1 804 22 view .LVU337
 805:systemview/SEGGER_RTT.c ****   //
 806:systemview/SEGGER_RTT.c ****   return NumBytesRead;
 1023              		.loc 1 806 3 view .LVU338
 807:systemview/SEGGER_RTT.c **** }
 1024              		.loc 1 807 1 is_stmt 0 view .LVU339
 1025 001a 10BD     		pop	{r4, pc}
 1026              		.loc 1 807 1 view .LVU340
 1027              		.cfi_endproc
 1028              	.LFE8:
 1030              		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 1031              		.align	1
 1032              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1037              	SEGGER_RTT_WriteWithOverwriteNoLock:
 1038              	.LVL117:
 1039              	.LFB9:
 808:systemview/SEGGER_RTT.c **** 
 809:systemview/SEGGER_RTT.c **** /*********************************************************************
 810:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 37


 811:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 812:systemview/SEGGER_RTT.c **** *
 813:systemview/SEGGER_RTT.c **** *  Function description
 814:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 815:systemview/SEGGER_RTT.c **** *    control block.
 816:systemview/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application
 817:systemview/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 818:systemview/SEGGER_RTT.c **** *
 819:systemview/SEGGER_RTT.c **** *  Parameters
 820:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 821:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 822:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 823:systemview/SEGGER_RTT.c **** *
 824:systemview/SEGGER_RTT.c **** *  Notes
 825:systemview/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 826:systemview/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 827:systemview/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 828:systemview/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 829:systemview/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link
 830:systemview/SEGGER_RTT.c **** *        connection reads RTT data.
 831:systemview/SEGGER_RTT.c **** */
 832:systemview/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 1040              		.loc 1 832 104 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		.loc 1 832 104 is_stmt 0 view .LVU342
 1045 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1046              	.LCFI10:
 1047              		.cfi_def_cfa_offset 32
 1048              		.cfi_offset 3, -32
 1049              		.cfi_offset 4, -28
 1050              		.cfi_offset 5, -24
 1051              		.cfi_offset 6, -20
 1052              		.cfi_offset 7, -16
 1053              		.cfi_offset 8, -12
 1054              		.cfi_offset 9, -8
 1055              		.cfi_offset 14, -4
 1056 0004 0646     		mov	r6, r0
 1057 0006 8846     		mov	r8, r1
 1058 0008 1746     		mov	r7, r2
 833:systemview/SEGGER_RTT.c ****   const char*           pData;
 1059              		.loc 1 833 3 is_stmt 1 view .LVU343
 834:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1060              		.loc 1 834 3 view .LVU344
 835:systemview/SEGGER_RTT.c ****   unsigned              Avail;
 1061              		.loc 1 835 3 view .LVU345
 836:systemview/SEGGER_RTT.c ****   volatile char*        pDst;
 1062              		.loc 1 836 3 view .LVU346
 837:systemview/SEGGER_RTT.c ****   //
 838:systemview/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 839:systemview/SEGGER_RTT.c ****   //
 840:systemview/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1063              		.loc 1 840 3 view .LVU347
 1064              	.LVL118:
 841:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1065              		.loc 1 841 3 view .LVU348
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 38


 842:systemview/SEGGER_RTT.c ****   //
 843:systemview/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 844:systemview/SEGGER_RTT.c ****   //
 845:systemview/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 1066              		.loc 1 845 3 view .LVU349
 1067              		.loc 1 845 12 is_stmt 0 view .LVU350
 1068 000a 00EB4002 		add	r2, r0, r0, lsl #1
 1069              	.LVL119:
 1070              		.loc 1 845 12 view .LVU351
 1071 000e 3F4B     		ldr	r3, .L71
 1072 0010 03EBC203 		add	r3, r3, r2, lsl #3
 1073 0014 596A     		ldr	r1, [r3, #36]
 1074              	.LVL120:
 1075              		.loc 1 845 28 view .LVU352
 1076 0016 9B6A     		ldr	r3, [r3, #40]
 1077              		.loc 1 845 6 view .LVU353
 1078 0018 9942     		cmp	r1, r3
 1079 001a 0FD0     		beq	.L69
 846:systemview/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 847:systemview/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 1080              		.loc 1 847 10 is_stmt 1 view .LVU354
 1081              		.loc 1 847 35 is_stmt 0 view .LVU355
 1082 001c 00EB4003 		add	r3, r0, r0, lsl #1
 1083 0020 3A4A     		ldr	r2, .L71
 1084 0022 02EBC303 		add	r3, r2, r3, lsl #3
 1085 0026 9B6A     		ldr	r3, [r3, #40]
 1086              		.loc 1 847 13 view .LVU356
 1087 0028 9942     		cmp	r1, r3
 1088 002a 19D2     		bcs	.L61
 848:systemview/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1089              		.loc 1 848 5 is_stmt 1 view .LVU357
 1090              		.loc 1 848 18 is_stmt 0 view .LVU358
 1091 002c 00EB4003 		add	r3, r0, r0, lsl #1
 1092 0030 02EBC303 		add	r3, r2, r3, lsl #3
 1093 0034 9B6A     		ldr	r3, [r3, #40]
 1094              		.loc 1 848 26 view .LVU359
 1095 0036 5B1A     		subs	r3, r3, r1
 1096              		.loc 1 848 11 view .LVU360
 1097 0038 013B     		subs	r3, r3, #1
 1098              	.LVL121:
 1099              		.loc 1 848 11 view .LVU361
 1100 003a 05E0     		b	.L60
 1101              	.LVL122:
 1102              	.L69:
 846:systemview/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1103              		.loc 1 846 5 is_stmt 1 view .LVU362
 846:systemview/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1104              		.loc 1 846 18 is_stmt 0 view .LVU363
 1105 003c 1346     		mov	r3, r2
 1106 003e 334A     		ldr	r2, .L71
 1107 0040 02EBC303 		add	r3, r2, r3, lsl #3
 1108 0044 1B6A     		ldr	r3, [r3, #32]
 846:systemview/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1109              		.loc 1 846 11 view .LVU364
 1110 0046 013B     		subs	r3, r3, #1
 1111              	.LVL123:
 1112              	.L60:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 39


 849:systemview/SEGGER_RTT.c ****   } else {
 850:systemview/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 851:systemview/SEGGER_RTT.c ****   }
 852:systemview/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 1113              		.loc 1 852 3 is_stmt 1 view .LVU365
 1114              		.loc 1 852 6 is_stmt 0 view .LVU366
 1115 0048 BB42     		cmp	r3, r7
 1116 004a 25D2     		bcs	.L62
 853:systemview/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 1117              		.loc 1 853 5 is_stmt 1 view .LVU367
 1118              		.loc 1 853 18 is_stmt 0 view .LVU368
 1119 004c 06EB4602 		add	r2, r6, r6, lsl #1
 1120 0050 2E48     		ldr	r0, .L71
 1121              	.LVL124:
 1122              		.loc 1 853 18 view .LVU369
 1123 0052 00EBC202 		add	r2, r0, r2, lsl #3
 1124 0056 906A     		ldr	r0, [r2, #40]
 1125              		.loc 1 853 31 view .LVU370
 1126 0058 FB1A     		subs	r3, r7, r3
 1127              	.LVL125:
 1128              		.loc 1 853 18 view .LVU371
 1129 005a 0344     		add	r3, r3, r0
 1130 005c 9362     		str	r3, [r2, #40]
 854:systemview/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1131              		.loc 1 854 5 is_stmt 1 view .LVU372
 1132              		.loc 1 854 11 is_stmt 0 view .LVU373
 1133 005e 12E0     		b	.L63
 1134              	.LVL126:
 1135              	.L61:
 850:systemview/SEGGER_RTT.c ****   }
 1136              		.loc 1 850 5 is_stmt 1 view .LVU374
 850:systemview/SEGGER_RTT.c ****   }
 1137              		.loc 1 850 18 is_stmt 0 view .LVU375
 1138 0060 00EB4002 		add	r2, r0, r0, lsl #1
 1139 0064 294B     		ldr	r3, .L71
 1140 0066 03EBC202 		add	r2, r3, r2, lsl #3
 1141 006a 936A     		ldr	r3, [r2, #40]
 850:systemview/SEGGER_RTT.c ****   }
 1142              		.loc 1 850 26 view .LVU376
 1143 006c 5B1A     		subs	r3, r3, r1
 850:systemview/SEGGER_RTT.c ****   }
 1144              		.loc 1 850 53 view .LVU377
 1145 006e 126A     		ldr	r2, [r2, #32]
 850:systemview/SEGGER_RTT.c ****   }
 1146              		.loc 1 850 46 view .LVU378
 1147 0070 1344     		add	r3, r3, r2
 850:systemview/SEGGER_RTT.c ****   }
 1148              		.loc 1 850 11 view .LVU379
 1149 0072 013B     		subs	r3, r3, #1
 1150              	.LVL127:
 850:systemview/SEGGER_RTT.c ****   }
 1151              		.loc 1 850 11 view .LVU380
 1152 0074 E8E7     		b	.L60
 1153              	.LVL128:
 1154              	.L64:
 855:systemview/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 1155              		.loc 1 855 7 is_stmt 1 view .LVU381
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 40


 1156              		.loc 1 855 20 is_stmt 0 view .LVU382
 1157 0076 06EB4603 		add	r3, r6, r6, lsl #1
 1158 007a 244A     		ldr	r2, .L71
 1159 007c 02EBC303 		add	r3, r2, r3, lsl #3
 1160 0080 9A6A     		ldr	r2, [r3, #40]
 1161 0082 121A     		subs	r2, r2, r0
 1162 0084 9A62     		str	r2, [r3, #40]
 1163              	.L63:
 854:systemview/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1164              		.loc 1 854 11 is_stmt 1 view .LVU383
 854:systemview/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1165              		.loc 1 854 17 is_stmt 0 view .LVU384
 1166 0086 06EB4603 		add	r3, r6, r6, lsl #1
 1167 008a 204A     		ldr	r2, .L71
 1168 008c 02EBC303 		add	r3, r2, r3, lsl #3
 1169 0090 9A6A     		ldr	r2, [r3, #40]
 854:systemview/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1170              		.loc 1 854 33 view .LVU385
 1171 0092 186A     		ldr	r0, [r3, #32]
 854:systemview/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1172              		.loc 1 854 11 view .LVU386
 1173 0094 8242     		cmp	r2, r0
 1174 0096 EED2     		bcs	.L64
 1175              	.L62:
 856:systemview/SEGGER_RTT.c ****     }
 857:systemview/SEGGER_RTT.c ****   }
 858:systemview/SEGGER_RTT.c ****   //
 859:systemview/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 860:systemview/SEGGER_RTT.c ****   //
 861:systemview/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 1176              		.loc 1 861 3 is_stmt 1 view .LVU387
 1177              		.loc 1 861 16 is_stmt 0 view .LVU388
 1178 0098 06EB4603 		add	r3, r6, r6, lsl #1
 1179 009c 1B4A     		ldr	r2, .L71
 1180 009e 02EBC303 		add	r3, r2, r3, lsl #3
 1181 00a2 1C6A     		ldr	r4, [r3, #32]
 1182              		.loc 1 861 9 view .LVU389
 1183 00a4 641A     		subs	r4, r4, r1
 1184              	.LVL129:
 1185              	.L67:
 862:systemview/SEGGER_RTT.c ****   do {
 1186              		.loc 1 862 3 is_stmt 1 view .LVU390
 863:systemview/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 1187              		.loc 1 863 5 view .LVU391
 1188              		.loc 1 863 8 is_stmt 0 view .LVU392
 1189 00a6 A742     		cmp	r7, r4
 1190 00a8 19D3     		bcc	.L70
 864:systemview/SEGGER_RTT.c ****       //
 865:systemview/SEGGER_RTT.c ****       // Last round
 866:systemview/SEGGER_RTT.c ****       //
 867:systemview/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 868:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 869:systemview/SEGGER_RTT.c ****       Avail = NumBytes;
 870:systemview/SEGGER_RTT.c ****       while (NumBytes--) {
 871:systemview/SEGGER_RTT.c ****         *pDst++ = *pData++;
 872:systemview/SEGGER_RTT.c ****       };
 873:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 41


 874:systemview/SEGGER_RTT.c ****       pRing->WrOff += Avail;
 875:systemview/SEGGER_RTT.c **** #else
 876:systemview/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 877:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 878:systemview/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 879:systemview/SEGGER_RTT.c **** #endif
 880:systemview/SEGGER_RTT.c ****       break;
 881:systemview/SEGGER_RTT.c ****     } else {
 882:systemview/SEGGER_RTT.c ****       //
 883:systemview/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 884:systemview/SEGGER_RTT.c ****       //
 885:systemview/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 1191              		.loc 1 885 7 is_stmt 1 view .LVU393
 1192              		.loc 1 885 20 is_stmt 0 view .LVU394
 1193 00aa 184D     		ldr	r5, .L71
 1194 00ac 731C     		adds	r3, r6, #1
 1195 00ae 03EB4303 		add	r3, r3, r3, lsl #1
 1196 00b2 05EBC303 		add	r3, r5, r3, lsl #3
 1197 00b6 5868     		ldr	r0, [r3, #4]
 1198              		.loc 1 885 37 view .LVU395
 1199 00b8 06EB4603 		add	r3, r6, r6, lsl #1
 1200 00bc 05EBC305 		add	r5, r5, r3, lsl #3
 1201 00c0 6B6A     		ldr	r3, [r5, #36]
 1202              	.LVL130:
 886:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 887:systemview/SEGGER_RTT.c ****       NumBytes -= Avail;
 888:systemview/SEGGER_RTT.c ****       while (Avail--) {
 889:systemview/SEGGER_RTT.c ****         *pDst++ = *pData++;
 890:systemview/SEGGER_RTT.c ****       };
 891:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 892:systemview/SEGGER_RTT.c ****       pRing->WrOff = 0;
 893:systemview/SEGGER_RTT.c **** #else
 894:systemview/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, Avail);
 1203              		.loc 1 894 7 is_stmt 1 view .LVU396
 1204 00c2 2246     		mov	r2, r4
 1205 00c4 4146     		mov	r1, r8
 1206 00c6 1844     		add	r0, r0, r3
 1207              	.LVL131:
 1208              		.loc 1 894 7 is_stmt 0 view .LVU397
 1209 00c8 FFF7FEFF 		bl	memcpy
 1210              	.LVL132:
 895:systemview/SEGGER_RTT.c ****       pData += Avail;
 1211              		.loc 1 895 7 is_stmt 1 view .LVU398
 1212              		.loc 1 895 13 is_stmt 0 view .LVU399
 1213 00cc A044     		add	r8, r8, r4
 1214              	.LVL133:
 896:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1215              		.loc 1 896 17 is_stmt 1 view .LVU400
 897:systemview/SEGGER_RTT.c ****       pRing->WrOff = 0;
 1216              		.loc 1 897 7 view .LVU401
 1217              		.loc 1 897 20 is_stmt 0 view .LVU402
 1218 00ce 0023     		movs	r3, #0
 1219 00d0 6B62     		str	r3, [r5, #36]
 898:systemview/SEGGER_RTT.c ****       NumBytes -= Avail;
 1220              		.loc 1 898 7 is_stmt 1 view .LVU403
 1221              		.loc 1 898 16 is_stmt 0 view .LVU404
 1222 00d2 3F1B     		subs	r7, r7, r4
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 42


 1223              	.LVL134:
 899:systemview/SEGGER_RTT.c **** #endif
 900:systemview/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 1224              		.loc 1 900 7 is_stmt 1 view .LVU405
 1225              		.loc 1 900 21 is_stmt 0 view .LVU406
 1226 00d4 2C6A     		ldr	r4, [r5, #32]
 1227              	.LVL135:
 1228              		.loc 1 900 13 view .LVU407
 1229 00d6 013C     		subs	r4, r4, #1
 1230              	.LVL136:
 901:systemview/SEGGER_RTT.c ****     }
 902:systemview/SEGGER_RTT.c ****   } while (NumBytes);
 1231              		.loc 1 902 11 is_stmt 1 view .LVU408
 1232              		.loc 1 902 3 is_stmt 0 view .LVU409
 1233 00d8 002F     		cmp	r7, #0
 1234 00da E4D1     		bne	.L67
 1235 00dc 13E0     		b	.L58
 1236              	.L70:
 867:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1237              		.loc 1 867 7 is_stmt 1 view .LVU410
 867:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1238              		.loc 1 867 20 is_stmt 0 view .LVU411
 1239 00de 0B4C     		ldr	r4, .L71
 1240              	.LVL137:
 867:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1241              		.loc 1 867 20 view .LVU412
 1242 00e0 731C     		adds	r3, r6, #1
 1243 00e2 03EB4303 		add	r3, r3, r3, lsl #1
 1244 00e6 04EBC303 		add	r3, r4, r3, lsl #3
 1245 00ea 5868     		ldr	r0, [r3, #4]
 867:systemview/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1246              		.loc 1 867 37 view .LVU413
 1247 00ec 06EB4605 		add	r5, r6, r6, lsl #1
 1248 00f0 04EBC505 		add	r5, r4, r5, lsl #3
 1249 00f4 6B6A     		ldr	r3, [r5, #36]
 1250              	.LVL138:
 876:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1251              		.loc 1 876 7 is_stmt 1 view .LVU414
 1252 00f6 3A46     		mov	r2, r7
 1253 00f8 4146     		mov	r1, r8
 1254 00fa 1844     		add	r0, r0, r3
 1255              	.LVL139:
 876:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1256              		.loc 1 876 7 is_stmt 0 view .LVU415
 1257 00fc FFF7FEFF 		bl	memcpy
 1258              	.LVL140:
 877:systemview/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 1259              		.loc 1 877 17 is_stmt 1 view .LVU416
 878:systemview/SEGGER_RTT.c **** #endif
 1260              		.loc 1 878 7 view .LVU417
 878:systemview/SEGGER_RTT.c **** #endif
 1261              		.loc 1 878 20 is_stmt 0 view .LVU418
 1262 0100 6B6A     		ldr	r3, [r5, #36]
 1263 0102 1F44     		add	r7, r7, r3
 1264              	.LVL141:
 878:systemview/SEGGER_RTT.c **** #endif
 1265              		.loc 1 878 20 view .LVU419
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 43


 1266 0104 6F62     		str	r7, [r5, #36]
 880:systemview/SEGGER_RTT.c ****     } else {
 1267              		.loc 1 880 7 is_stmt 1 view .LVU420
 1268              	.L58:
 903:systemview/SEGGER_RTT.c **** }
 1269              		.loc 1 903 1 is_stmt 0 view .LVU421
 1270 0106 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1271              	.LVL142:
 1272              	.L72:
 1273              		.loc 1 903 1 view .LVU422
 1274 010a 00BF     		.align	2
 1275              	.L71:
 1276 010c 00000000 		.word	.LANCHOR1
 1277              		.cfi_endproc
 1278              	.LFE9:
 1280              		.section	.text.SEGGER_RTT_WriteDownBufferNoLock,"ax",%progbits
 1281              		.align	1
 1282              		.global	SEGGER_RTT_WriteDownBufferNoLock
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1287              	SEGGER_RTT_WriteDownBufferNoLock:
 1288              	.LVL143:
 1289              	.LFB10:
 904:systemview/SEGGER_RTT.c **** 
 905:systemview/SEGGER_RTT.c **** /*********************************************************************
 906:systemview/SEGGER_RTT.c **** *
 907:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 908:systemview/SEGGER_RTT.c **** *
 909:systemview/SEGGER_RTT.c **** *  Function description
 910:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 911:systemview/SEGGER_RTT.c **** *    control block which is then read by the host.
 912:systemview/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 913:systemview/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 914:systemview/SEGGER_RTT.c **** *
 915:systemview/SEGGER_RTT.c **** *  Parameters
 916:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 917:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 918:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 919:systemview/SEGGER_RTT.c **** *                 MUST be > 0!!!
 920:systemview/SEGGER_RTT.c **** *                 This is done for performance reasons, so no initial check has do be done.
 921:systemview/SEGGER_RTT.c **** *
 922:systemview/SEGGER_RTT.c **** *  Return value
 923:systemview/SEGGER_RTT.c **** *    1: Data has been copied
 924:systemview/SEGGER_RTT.c **** *    0: No space, data has not been copied
 925:systemview/SEGGER_RTT.c **** *
 926:systemview/SEGGER_RTT.c **** *  Notes
 927:systemview/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 928:systemview/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 929:systemview/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 930:systemview/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 931:systemview/SEGGER_RTT.c **** */
 932:systemview/SEGGER_RTT.c **** #if (RTT_USE_ASM == 0)
 933:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 934:systemview/SEGGER_RTT.c ****   const char*           pData;
 935:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 936:systemview/SEGGER_RTT.c ****   unsigned              Avail;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 44


 937:systemview/SEGGER_RTT.c ****   unsigned              RdOff;
 938:systemview/SEGGER_RTT.c ****   unsigned              WrOff;
 939:systemview/SEGGER_RTT.c ****   unsigned              Rem;
 940:systemview/SEGGER_RTT.c ****   volatile char*        pDst;
 941:systemview/SEGGER_RTT.c ****   //
 942:systemview/SEGGER_RTT.c ****   // Cases:
 943:systemview/SEGGER_RTT.c ****   //   1) RdOff <= WrOff => Space until wrap-around is sufficient
 944:systemview/SEGGER_RTT.c ****   //   2) RdOff <= WrOff => Space after wrap-around needed (copy in 2 chunks)
 945:systemview/SEGGER_RTT.c ****   //   3) RdOff <  WrOff => No space in buf
 946:systemview/SEGGER_RTT.c ****   //   4) RdOff >  WrOff => Space is sufficient
 947:systemview/SEGGER_RTT.c ****   //   5) RdOff >  WrOff => No space in buf
 948:systemview/SEGGER_RTT.c ****   //
 949:systemview/SEGGER_RTT.c ****   // 1) is the most common case for large buffers and assuming that J-Link reads the data fast enou
 950:systemview/SEGGER_RTT.c ****   //
 951:systemview/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 952:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 953:systemview/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 954:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 955:systemview/SEGGER_RTT.c ****   pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 956:systemview/SEGGER_RTT.c ****   if (RdOff <= WrOff) {                                 // Case 1), 2) or 3)
 957:systemview/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - WrOff - 1u;           // Space until wrap-around (assume 1 byte n
 958:systemview/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 1)?
 959:systemview/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, NumBytes);
 960:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 961:systemview/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 962:systemview/SEGGER_RTT.c ****       return 1;
 963:systemview/SEGGER_RTT.c ****     }
 964:systemview/SEGGER_RTT.c ****     Avail += RdOff;                                     // Space incl. wrap-around
 965:systemview/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 2? => If not, we have case 3) (does
 966:systemview/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;                // Space until end of buffer
 967:systemview/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, Rem);                  // Copy 1st chunk
 968:systemview/SEGGER_RTT.c ****       NumBytes -= Rem;
 969:systemview/SEGGER_RTT.c ****       //
 970:systemview/SEGGER_RTT.c ****       // Special case: First check that assumed RdOff == 0 calculated that last element before wrap
 971:systemview/SEGGER_RTT.c ****       // But 2nd check (considering space until wrap-around and until RdOff) revealed that RdOff is
 972:systemview/SEGGER_RTT.c ****       // In this case, we may use a copy straight until buffer end anyway without needing to copy 2
 973:systemview/SEGGER_RTT.c ****       // Therefore, check if 2nd memcpy is necessary at all
 974:systemview/SEGGER_RTT.c ****       //
 975:systemview/SEGGER_RTT.c ****       if (NumBytes) {
 976:systemview/SEGGER_RTT.c ****         pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 977:systemview/SEGGER_RTT.c ****         memcpy((void*)pDst, pData + Rem, NumBytes);
 978:systemview/SEGGER_RTT.c ****       }
 979:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 980:systemview/SEGGER_RTT.c ****       pRing->WrOff = NumBytes;
 981:systemview/SEGGER_RTT.c ****       return 1;
 982:systemview/SEGGER_RTT.c ****     }
 983:systemview/SEGGER_RTT.c ****   } else {                                             // Potential case 4)
 984:systemview/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 985:systemview/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                           // Case 4)? => If not, we have case 5) (does
 986:systemview/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, NumBytes);
 987:systemview/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 988:systemview/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 989:systemview/SEGGER_RTT.c ****       return 1;
 990:systemview/SEGGER_RTT.c ****     }
 991:systemview/SEGGER_RTT.c ****   }
 992:systemview/SEGGER_RTT.c ****   return 0;     // No space in buffer
 993:systemview/SEGGER_RTT.c **** }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 45


 994:systemview/SEGGER_RTT.c **** #endif
 995:systemview/SEGGER_RTT.c **** 
 996:systemview/SEGGER_RTT.c **** /*********************************************************************
 997:systemview/SEGGER_RTT.c **** *
 998:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBufferNoLock
 999:systemview/SEGGER_RTT.c **** *
1000:systemview/SEGGER_RTT.c **** *  Function description
1001:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1002:systemview/SEGGER_RTT.c **** *    control block inside a <Down> buffer.
1003:systemview/SEGGER_RTT.c **** *    SEGGER_RTT_WriteDownBufferNoLock does not lock the application.
1004:systemview/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer
1005:systemview/SEGGER_RTT.c **** *    RTT data from other channels, such as TCP/IP or UART.
1006:systemview/SEGGER_RTT.c **** *
1007:systemview/SEGGER_RTT.c **** *  Parameters
1008:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Down"-buffer to be used.
1009:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1010:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1011:systemview/SEGGER_RTT.c **** *
1012:systemview/SEGGER_RTT.c **** *  Return value
1013:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1014:systemview/SEGGER_RTT.c **** *
1015:systemview/SEGGER_RTT.c **** *  Notes
1016:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1017:systemview/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1018:systemview/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1019:systemview/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1020:systemview/SEGGER_RTT.c **** *
1021:systemview/SEGGER_RTT.c **** *  Additional information
1022:systemview/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1023:systemview/SEGGER_RTT.c **** */
1024:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBufferNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBy
 1290              		.loc 1 1024 105 is_stmt 1 view -0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              		.loc 1 1024 105 is_stmt 0 view .LVU424
 1295 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1296              	.LCFI11:
 1297              		.cfi_def_cfa_offset 24
 1298              		.cfi_offset 3, -24
 1299              		.cfi_offset 4, -20
 1300              		.cfi_offset 5, -16
 1301              		.cfi_offset 6, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 0E46     		mov	r6, r1
 1305 0004 1546     		mov	r5, r2
1025:systemview/SEGGER_RTT.c ****   unsigned                Status;
 1306              		.loc 1 1025 3 is_stmt 1 view .LVU425
1026:systemview/SEGGER_RTT.c ****   unsigned                Avail;
 1307              		.loc 1 1026 3 view .LVU426
1027:systemview/SEGGER_RTT.c ****   const char*             pData;
 1308              		.loc 1 1027 3 view .LVU427
1028:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 1309              		.loc 1 1028 3 view .LVU428
1029:systemview/SEGGER_RTT.c ****   //
1030:systemview/SEGGER_RTT.c ****   // Get "to-target" ring buffer.
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 46


1031:systemview/SEGGER_RTT.c ****   // It is save to cast that to a "to-host" buffer. Up and Down buffer differ in volatility of offs
1032:systemview/SEGGER_RTT.c ****   //
1033:systemview/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1310              		.loc 1 1033 3 view .LVU429
 1311              	.LVL144:
1034:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_
 1312              		.loc 1 1034 3 view .LVU430
 1313              		.loc 1 1034 9 is_stmt 0 view .LVU431
 1314 0006 00EB4000 		add	r0, r0, r0, lsl #1
 1315              	.LVL145:
 1316              		.loc 1 1034 9 view .LVU432
 1317 000a C000     		lsls	r0, r0, #3
 1318 000c 6030     		adds	r0, r0, #96
 1319 000e 144F     		ldr	r7, .L80
 1320 0010 0744     		add	r7, r7, r0
 1321              	.LVL146:
1035:systemview/SEGGER_RTT.c ****   //
1036:systemview/SEGGER_RTT.c ****   // How we output depends upon the mode...
1037:systemview/SEGGER_RTT.c ****   //
1038:systemview/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1322              		.loc 1 1038 3 is_stmt 1 view .LVU433
 1323              		.loc 1 1038 16 is_stmt 0 view .LVU434
 1324 0012 7C69     		ldr	r4, [r7, #20]
 1325              		.loc 1 1038 3 view .LVU435
 1326 0014 012C     		cmp	r4, #1
 1327 0016 11D0     		beq	.L74
 1328 0018 022C     		cmp	r4, #2
 1329 001a 1CD0     		beq	.L75
 1330 001c 14B1     		cbz	r4, .L79
 1331 001e 0024     		movs	r4, #0
 1332              	.LVL147:
1039:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1040:systemview/SEGGER_RTT.c ****     //
1041:systemview/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1042:systemview/SEGGER_RTT.c ****     // of this output, don't bother.
1043:systemview/SEGGER_RTT.c ****     //
1044:systemview/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1045:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1046:systemview/SEGGER_RTT.c ****       Status = 0u;
1047:systemview/SEGGER_RTT.c ****     } else {
1048:systemview/SEGGER_RTT.c ****       Status = NumBytes;
1049:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1050:systemview/SEGGER_RTT.c ****     }
1051:systemview/SEGGER_RTT.c ****     break;
1052:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1053:systemview/SEGGER_RTT.c ****     //
1054:systemview/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1055:systemview/SEGGER_RTT.c ****     //
1056:systemview/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1057:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1058:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1059:systemview/SEGGER_RTT.c ****     break;
1060:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1061:systemview/SEGGER_RTT.c ****     //
1062:systemview/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1063:systemview/SEGGER_RTT.c ****     //
1064:systemview/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 47


1065:systemview/SEGGER_RTT.c ****     break;
1066:systemview/SEGGER_RTT.c ****   default:
1067:systemview/SEGGER_RTT.c ****     Status = 0u;
1068:systemview/SEGGER_RTT.c ****     break;
1069:systemview/SEGGER_RTT.c ****   }
1070:systemview/SEGGER_RTT.c ****   //
1071:systemview/SEGGER_RTT.c ****   // Finish up.
1072:systemview/SEGGER_RTT.c ****   //
1073:systemview/SEGGER_RTT.c ****   return Status;
 1333              		.loc 1 1073 3 is_stmt 1 view .LVU436
 1334              	.L73:
1074:systemview/SEGGER_RTT.c **** }
 1335              		.loc 1 1074 1 is_stmt 0 view .LVU437
 1336 0020 2046     		mov	r0, r4
 1337 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1338              	.LVL148:
 1339              	.L79:
1044:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1340              		.loc 1 1044 5 is_stmt 1 view .LVU438
1044:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1341              		.loc 1 1044 13 is_stmt 0 view .LVU439
 1342 0024 3846     		mov	r0, r7
 1343 0026 FFF7FEFF 		bl	_GetAvailWriteSpace
 1344              	.LVL149:
1045:systemview/SEGGER_RTT.c ****       Status = 0u;
 1345              		.loc 1 1045 5 is_stmt 1 view .LVU440
1045:systemview/SEGGER_RTT.c ****       Status = 0u;
 1346              		.loc 1 1045 8 is_stmt 0 view .LVU441
 1347 002a 8542     		cmp	r5, r0
 1348 002c F8D8     		bhi	.L73
1048:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1349              		.loc 1 1048 7 is_stmt 1 view .LVU442
 1350              	.LVL150:
1049:systemview/SEGGER_RTT.c ****     }
 1351              		.loc 1 1049 7 view .LVU443
 1352 002e 2A46     		mov	r2, r5
 1353 0030 3146     		mov	r1, r6
 1354 0032 3846     		mov	r0, r7
 1355              	.LVL151:
1049:systemview/SEGGER_RTT.c ****     }
 1356              		.loc 1 1049 7 is_stmt 0 view .LVU444
 1357 0034 FFF7FEFF 		bl	_WriteNoCheck
 1358              	.LVL152:
1048:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1359              		.loc 1 1048 14 view .LVU445
 1360 0038 2C46     		mov	r4, r5
 1361 003a F1E7     		b	.L73
 1362              	.LVL153:
 1363              	.L74:
1056:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1364              		.loc 1 1056 5 is_stmt 1 view .LVU446
1056:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1365              		.loc 1 1056 13 is_stmt 0 view .LVU447
 1366 003c 3846     		mov	r0, r7
 1367 003e FFF7FEFF 		bl	_GetAvailWriteSpace
 1368              	.LVL154:
1057:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 48


 1369              		.loc 1 1057 5 is_stmt 1 view .LVU448
1057:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1370              		.loc 1 1057 12 is_stmt 0 view .LVU449
 1371 0042 2C46     		mov	r4, r5
 1372 0044 8542     		cmp	r5, r0
 1373 0046 28BF     		it	cs
 1374 0048 0446     		movcs	r4, r0
 1375              	.LVL155:
1058:systemview/SEGGER_RTT.c ****     break;
 1376              		.loc 1 1058 5 is_stmt 1 view .LVU450
 1377 004a 2246     		mov	r2, r4
 1378 004c 3146     		mov	r1, r6
 1379 004e 3846     		mov	r0, r7
 1380              	.LVL156:
1058:systemview/SEGGER_RTT.c ****     break;
 1381              		.loc 1 1058 5 is_stmt 0 view .LVU451
 1382 0050 FFF7FEFF 		bl	_WriteNoCheck
 1383              	.LVL157:
1059:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 1384              		.loc 1 1059 5 is_stmt 1 view .LVU452
 1385 0054 E4E7     		b	.L73
 1386              	.LVL158:
 1387              	.L75:
1064:systemview/SEGGER_RTT.c ****     break;
 1388              		.loc 1 1064 5 view .LVU453
1064:systemview/SEGGER_RTT.c ****     break;
 1389              		.loc 1 1064 14 is_stmt 0 view .LVU454
 1390 0056 3846     		mov	r0, r7
 1391 0058 FFF7FEFF 		bl	_WriteBlocking
 1392              	.LVL159:
1064:systemview/SEGGER_RTT.c ****     break;
 1393              		.loc 1 1064 14 view .LVU455
 1394 005c 0446     		mov	r4, r0
 1395              	.LVL160:
1065:systemview/SEGGER_RTT.c ****   default:
 1396              		.loc 1 1065 5 is_stmt 1 view .LVU456
 1397 005e DFE7     		b	.L73
 1398              	.L81:
 1399              		.align	2
 1400              	.L80:
 1401 0060 00000000 		.word	.LANCHOR1
 1402              		.cfi_endproc
 1403              	.LFE10:
 1405              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1406              		.align	1
 1407              		.global	SEGGER_RTT_WriteNoLock
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1412              	SEGGER_RTT_WriteNoLock:
 1413              	.LVL161:
 1414              	.LFB11:
1075:systemview/SEGGER_RTT.c **** 
1076:systemview/SEGGER_RTT.c **** /*********************************************************************
1077:systemview/SEGGER_RTT.c **** *
1078:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
1079:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 49


1080:systemview/SEGGER_RTT.c **** *  Function description
1081:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1082:systemview/SEGGER_RTT.c **** *    control block which is then read by the host.
1083:systemview/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
1084:systemview/SEGGER_RTT.c **** *
1085:systemview/SEGGER_RTT.c **** *  Parameters
1086:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1087:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1088:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1089:systemview/SEGGER_RTT.c **** *
1090:systemview/SEGGER_RTT.c **** *  Return value
1091:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1092:systemview/SEGGER_RTT.c **** *
1093:systemview/SEGGER_RTT.c **** *  Notes
1094:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1095:systemview/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1096:systemview/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1097:systemview/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1098:systemview/SEGGER_RTT.c **** */
1099:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1415              		.loc 1 1099 95 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		.loc 1 1099 95 is_stmt 0 view .LVU458
 1420 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1421              	.LCFI12:
 1422              		.cfi_def_cfa_offset 24
 1423              		.cfi_offset 3, -24
 1424              		.cfi_offset 4, -20
 1425              		.cfi_offset 5, -16
 1426              		.cfi_offset 6, -12
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 0F46     		mov	r7, r1
 1430 0004 1646     		mov	r6, r2
1100:systemview/SEGGER_RTT.c ****   unsigned              Status;
 1431              		.loc 1 1100 3 is_stmt 1 view .LVU459
1101:systemview/SEGGER_RTT.c ****   unsigned              Avail;
 1432              		.loc 1 1101 3 view .LVU460
1102:systemview/SEGGER_RTT.c ****   const char*           pData;
 1433              		.loc 1 1102 3 view .LVU461
1103:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1434              		.loc 1 1103 3 view .LVU462
1104:systemview/SEGGER_RTT.c ****   //
1105:systemview/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1106:systemview/SEGGER_RTT.c ****   //
1107:systemview/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1435              		.loc 1 1107 3 view .LVU463
 1436              	.LVL162:
1108:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1437              		.loc 1 1108 3 view .LVU464
 1438              		.loc 1 1108 9 is_stmt 0 view .LVU465
 1439 0006 184B     		ldr	r3, .L89
 1440 0008 451C     		adds	r5, r0, #1
 1441 000a 05EB4505 		add	r5, r5, r5, lsl #1
 1442 000e 03EBC505 		add	r5, r3, r5, lsl #3
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 50


 1443              	.LVL163:
1109:systemview/SEGGER_RTT.c ****   //
1110:systemview/SEGGER_RTT.c ****   // How we output depends upon the mode...
1111:systemview/SEGGER_RTT.c ****   //
1112:systemview/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1444              		.loc 1 1112 3 is_stmt 1 view .LVU466
 1445              		.loc 1 1112 16 is_stmt 0 view .LVU467
 1446 0012 00EB4000 		add	r0, r0, r0, lsl #1
 1447              	.LVL164:
 1448              		.loc 1 1112 16 view .LVU468
 1449 0016 03EBC000 		add	r0, r3, r0, lsl #3
 1450 001a C46A     		ldr	r4, [r0, #44]
 1451              		.loc 1 1112 3 view .LVU469
 1452 001c 012C     		cmp	r4, #1
 1453 001e 11D0     		beq	.L83
 1454 0020 022C     		cmp	r4, #2
 1455 0022 1CD0     		beq	.L84
 1456 0024 14B1     		cbz	r4, .L88
 1457 0026 0024     		movs	r4, #0
 1458              	.LVL165:
1113:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1114:systemview/SEGGER_RTT.c ****     //
1115:systemview/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1116:systemview/SEGGER_RTT.c ****     // of this output, don't bother.
1117:systemview/SEGGER_RTT.c ****     //
1118:systemview/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1119:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1120:systemview/SEGGER_RTT.c ****       Status = 0u;
1121:systemview/SEGGER_RTT.c ****     } else {
1122:systemview/SEGGER_RTT.c ****       Status = NumBytes;
1123:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1124:systemview/SEGGER_RTT.c ****     }
1125:systemview/SEGGER_RTT.c ****     break;
1126:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1127:systemview/SEGGER_RTT.c ****     //
1128:systemview/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1129:systemview/SEGGER_RTT.c ****     //
1130:systemview/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1131:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1132:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1133:systemview/SEGGER_RTT.c ****     break;
1134:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1135:systemview/SEGGER_RTT.c ****     //
1136:systemview/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1137:systemview/SEGGER_RTT.c ****     //
1138:systemview/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1139:systemview/SEGGER_RTT.c ****     break;
1140:systemview/SEGGER_RTT.c ****   default:
1141:systemview/SEGGER_RTT.c ****     Status = 0u;
1142:systemview/SEGGER_RTT.c ****     break;
1143:systemview/SEGGER_RTT.c ****   }
1144:systemview/SEGGER_RTT.c ****   //
1145:systemview/SEGGER_RTT.c ****   // Finish up.
1146:systemview/SEGGER_RTT.c ****   //
1147:systemview/SEGGER_RTT.c ****   return Status;
 1459              		.loc 1 1147 3 is_stmt 1 view .LVU470
 1460              	.L82:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 51


1148:systemview/SEGGER_RTT.c **** }
 1461              		.loc 1 1148 1 is_stmt 0 view .LVU471
 1462 0028 2046     		mov	r0, r4
 1463 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1464              	.LVL166:
 1465              	.L88:
1118:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1466              		.loc 1 1118 5 is_stmt 1 view .LVU472
1118:systemview/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1467              		.loc 1 1118 13 is_stmt 0 view .LVU473
 1468 002c 2846     		mov	r0, r5
 1469 002e FFF7FEFF 		bl	_GetAvailWriteSpace
 1470              	.LVL167:
1119:systemview/SEGGER_RTT.c ****       Status = 0u;
 1471              		.loc 1 1119 5 is_stmt 1 view .LVU474
1119:systemview/SEGGER_RTT.c ****       Status = 0u;
 1472              		.loc 1 1119 8 is_stmt 0 view .LVU475
 1473 0032 8642     		cmp	r6, r0
 1474 0034 F8D8     		bhi	.L82
1122:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1475              		.loc 1 1122 7 is_stmt 1 view .LVU476
 1476              	.LVL168:
1123:systemview/SEGGER_RTT.c ****     }
 1477              		.loc 1 1123 7 view .LVU477
 1478 0036 3246     		mov	r2, r6
 1479 0038 3946     		mov	r1, r7
 1480 003a 2846     		mov	r0, r5
 1481              	.LVL169:
1123:systemview/SEGGER_RTT.c ****     }
 1482              		.loc 1 1123 7 is_stmt 0 view .LVU478
 1483 003c FFF7FEFF 		bl	_WriteNoCheck
 1484              	.LVL170:
1122:systemview/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1485              		.loc 1 1122 14 view .LVU479
 1486 0040 3446     		mov	r4, r6
 1487 0042 F1E7     		b	.L82
 1488              	.LVL171:
 1489              	.L83:
1130:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1490              		.loc 1 1130 5 is_stmt 1 view .LVU480
1130:systemview/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1491              		.loc 1 1130 13 is_stmt 0 view .LVU481
 1492 0044 2846     		mov	r0, r5
 1493 0046 FFF7FEFF 		bl	_GetAvailWriteSpace
 1494              	.LVL172:
1131:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1495              		.loc 1 1131 5 is_stmt 1 view .LVU482
1131:systemview/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1496              		.loc 1 1131 12 is_stmt 0 view .LVU483
 1497 004a 3446     		mov	r4, r6
 1498 004c 8642     		cmp	r6, r0
 1499 004e 28BF     		it	cs
 1500 0050 0446     		movcs	r4, r0
 1501              	.LVL173:
1132:systemview/SEGGER_RTT.c ****     break;
 1502              		.loc 1 1132 5 is_stmt 1 view .LVU484
 1503 0052 2246     		mov	r2, r4
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 52


 1504 0054 3946     		mov	r1, r7
 1505 0056 2846     		mov	r0, r5
 1506              	.LVL174:
1132:systemview/SEGGER_RTT.c ****     break;
 1507              		.loc 1 1132 5 is_stmt 0 view .LVU485
 1508 0058 FFF7FEFF 		bl	_WriteNoCheck
 1509              	.LVL175:
1133:systemview/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 1510              		.loc 1 1133 5 is_stmt 1 view .LVU486
 1511 005c E4E7     		b	.L82
 1512              	.LVL176:
 1513              	.L84:
1138:systemview/SEGGER_RTT.c ****     break;
 1514              		.loc 1 1138 5 view .LVU487
1138:systemview/SEGGER_RTT.c ****     break;
 1515              		.loc 1 1138 14 is_stmt 0 view .LVU488
 1516 005e 2846     		mov	r0, r5
 1517 0060 FFF7FEFF 		bl	_WriteBlocking
 1518              	.LVL177:
1138:systemview/SEGGER_RTT.c ****     break;
 1519              		.loc 1 1138 14 view .LVU489
 1520 0064 0446     		mov	r4, r0
 1521              	.LVL178:
1139:systemview/SEGGER_RTT.c ****   default:
 1522              		.loc 1 1139 5 is_stmt 1 view .LVU490
 1523 0066 DFE7     		b	.L82
 1524              	.L90:
 1525              		.align	2
 1526              	.L89:
 1527 0068 00000000 		.word	.LANCHOR1
 1528              		.cfi_endproc
 1529              	.LFE11:
 1531              		.section	.text.SEGGER_RTT_WriteDownBuffer,"ax",%progbits
 1532              		.align	1
 1533              		.global	SEGGER_RTT_WriteDownBuffer
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1538              	SEGGER_RTT_WriteDownBuffer:
 1539              	.LVL179:
 1540              	.LFB12:
1149:systemview/SEGGER_RTT.c **** 
1150:systemview/SEGGER_RTT.c **** /*********************************************************************
1151:systemview/SEGGER_RTT.c **** *
1152:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBuffer
1153:systemview/SEGGER_RTT.c **** *
1154:systemview/SEGGER_RTT.c **** *  Function description
1155:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT control block in a <Down> buffer.
1156:systemview/SEGGER_RTT.c **** *
1157:systemview/SEGGER_RTT.c **** *  Parameters
1158:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1159:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1160:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1161:systemview/SEGGER_RTT.c **** *
1162:systemview/SEGGER_RTT.c **** *  Return value
1163:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1164:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 53


1165:systemview/SEGGER_RTT.c **** *  Notes
1166:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1167:systemview/SEGGER_RTT.c **** *
1168:systemview/SEGGER_RTT.c **** *  Additional information
1169:systemview/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1170:systemview/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
1171:systemview/SEGGER_RTT.c **** *    the write operation, writing from the application is also locked.
1172:systemview/SEGGER_RTT.c **** *    If only one consumer writes to the down buffer,
1173:systemview/SEGGER_RTT.c **** *    call SEGGER_RTT_WriteDownBufferNoLock() instead.
1174:systemview/SEGGER_RTT.c **** */
1175:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBuffer(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1541              		.loc 1 1175 99 view -0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		.loc 1 1175 99 is_stmt 0 view .LVU492
 1546 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1547              	.LCFI13:
 1548              		.cfi_def_cfa_offset 24
 1549              		.cfi_offset 3, -24
 1550              		.cfi_offset 4, -20
 1551              		.cfi_offset 5, -16
 1552              		.cfi_offset 6, -12
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 0446     		mov	r4, r0
 1556 0004 0D46     		mov	r5, r1
 1557 0006 1646     		mov	r6, r2
1176:systemview/SEGGER_RTT.c ****   unsigned Status;
 1558              		.loc 1 1176 3 is_stmt 1 view .LVU493
1177:systemview/SEGGER_RTT.c **** 
1178:systemview/SEGGER_RTT.c ****   INIT();
 1559              		.loc 1 1178 3 view .LVU494
 1560              	.LBB8:
 1561              		.loc 1 1178 3 view .LVU495
 1562              		.loc 1 1178 3 view .LVU496
 1563              	.LVL180:
 1564              		.loc 1 1178 3 view .LVU497
 1565 0008 0A4B     		ldr	r3, .L95
 1566 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 000c DBB2     		uxtb	r3, r3
 1568 000e 532B     		cmp	r3, #83
 1569 0010 0DD1     		bne	.L94
 1570              	.LVL181:
 1571              	.L92:
 1572              		.loc 1 1178 3 is_stmt 0 view .LVU498
 1573              	.LBE8:
 1574              		.loc 1 1178 3 is_stmt 1 discriminator 3 view .LVU499
 1575              	.LBB9:
1179:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1576              		.loc 1 1179 3 discriminator 3 view .LVU500
 1577              		.loc 1 1179 3 discriminator 3 view .LVU501
 1578              		.syntax unified
 1579              	@ 1179 "systemview/SEGGER_RTT.c" 1
 1580 0012 EFF31187 		mrs   r7, basepri  
 1581 0016 4FF02001 		mov   r1, #32       
 1582 001a 81F31188 		msr   basepri, r1  
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 54


 1583              		
 1584              	@ 0 "" 2
 1585              	.LVL182:
 1586              		.loc 1 1179 20 discriminator 3 view .LVU502
1180:systemview/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteDownBufferNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locki
 1587              		.loc 1 1180 3 discriminator 3 view .LVU503
 1588              		.loc 1 1180 12 is_stmt 0 discriminator 3 view .LVU504
 1589              		.thumb
 1590              		.syntax unified
 1591 001e 3246     		mov	r2, r6
 1592 0020 2946     		mov	r1, r5
 1593 0022 2046     		mov	r0, r4
 1594 0024 FFF7FEFF 		bl	SEGGER_RTT_WriteDownBufferNoLock
 1595              	.LVL183:
1181:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1596              		.loc 1 1181 3 is_stmt 1 discriminator 3 view .LVU505
 1597              		.syntax unified
 1598              	@ 1181 "systemview/SEGGER_RTT.c" 1
 1599 0028 87F31188 		msr   basepri, r7  
 1600              		
 1601              	@ 0 "" 2
 1602              		.thumb
 1603              		.syntax unified
 1604              	.LBE9:
 1605              		.loc 1 1181 22 discriminator 3 view .LVU506
1182:systemview/SEGGER_RTT.c ****   return Status;
 1606              		.loc 1 1182 3 discriminator 3 view .LVU507
1183:systemview/SEGGER_RTT.c **** }
 1607              		.loc 1 1183 1 is_stmt 0 discriminator 3 view .LVU508
 1608 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1609              	.LVL184:
 1610              	.L94:
 1611              	.LBB10:
1178:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1612              		.loc 1 1178 3 is_stmt 1 discriminator 1 view .LVU509
 1613 002e FFF7FEFF 		bl	_DoInit
 1614              	.LVL185:
1178:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1615              		.loc 1 1178 3 is_stmt 0 discriminator 1 view .LVU510
 1616 0032 EEE7     		b	.L92
 1617              	.L96:
 1618              		.align	2
 1619              	.L95:
 1620 0034 00000000 		.word	.LANCHOR1
 1621              	.LBE10:
 1622              		.cfi_endproc
 1623              	.LFE12:
 1625              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 1626              		.align	1
 1627              		.global	SEGGER_RTT_Write
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1632              	SEGGER_RTT_Write:
 1633              	.LVL186:
 1634              	.LFB13:
1184:systemview/SEGGER_RTT.c **** 
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 55


1185:systemview/SEGGER_RTT.c **** /*********************************************************************
1186:systemview/SEGGER_RTT.c **** *
1187:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_Write
1188:systemview/SEGGER_RTT.c **** *
1189:systemview/SEGGER_RTT.c **** *  Function description
1190:systemview/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1191:systemview/SEGGER_RTT.c **** *    control block which is then read by the host.
1192:systemview/SEGGER_RTT.c **** *
1193:systemview/SEGGER_RTT.c **** *  Parameters
1194:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1195:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1196:systemview/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1197:systemview/SEGGER_RTT.c **** *
1198:systemview/SEGGER_RTT.c **** *  Return value
1199:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1200:systemview/SEGGER_RTT.c **** *
1201:systemview/SEGGER_RTT.c **** *  Notes
1202:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1203:systemview/SEGGER_RTT.c **** */
1204:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1635              		.loc 1 1204 89 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		.loc 1 1204 89 is_stmt 0 view .LVU512
 1640 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1641              	.LCFI14:
 1642              		.cfi_def_cfa_offset 24
 1643              		.cfi_offset 3, -24
 1644              		.cfi_offset 4, -20
 1645              		.cfi_offset 5, -16
 1646              		.cfi_offset 6, -12
 1647              		.cfi_offset 7, -8
 1648              		.cfi_offset 14, -4
 1649 0002 0446     		mov	r4, r0
 1650 0004 0D46     		mov	r5, r1
 1651 0006 1646     		mov	r6, r2
1205:systemview/SEGGER_RTT.c ****   unsigned Status;
 1652              		.loc 1 1205 3 is_stmt 1 view .LVU513
1206:systemview/SEGGER_RTT.c **** 
1207:systemview/SEGGER_RTT.c ****   INIT();
 1653              		.loc 1 1207 3 view .LVU514
 1654              	.LBB11:
 1655              		.loc 1 1207 3 view .LVU515
 1656              		.loc 1 1207 3 view .LVU516
 1657              	.LVL187:
 1658              		.loc 1 1207 3 view .LVU517
 1659 0008 0A4B     		ldr	r3, .L101
 1660 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1661 000c DBB2     		uxtb	r3, r3
 1662 000e 532B     		cmp	r3, #83
 1663 0010 0DD1     		bne	.L100
 1664              	.LVL188:
 1665              	.L98:
 1666              		.loc 1 1207 3 is_stmt 0 view .LVU518
 1667              	.LBE11:
 1668              		.loc 1 1207 3 is_stmt 1 discriminator 3 view .LVU519
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 56


 1669              	.LBB12:
1208:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1670              		.loc 1 1208 3 discriminator 3 view .LVU520
 1671              		.loc 1 1208 3 discriminator 3 view .LVU521
 1672              		.syntax unified
 1673              	@ 1208 "systemview/SEGGER_RTT.c" 1
 1674 0012 EFF31187 		mrs   r7, basepri  
 1675 0016 4FF02001 		mov   r1, #32       
 1676 001a 81F31188 		msr   basepri, r1  
 1677              		
 1678              	@ 0 "" 2
 1679              	.LVL189:
 1680              		.loc 1 1208 20 discriminator 3 view .LVU522
1209:systemview/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 1681              		.loc 1 1209 3 discriminator 3 view .LVU523
 1682              		.loc 1 1209 12 is_stmt 0 discriminator 3 view .LVU524
 1683              		.thumb
 1684              		.syntax unified
 1685 001e 3246     		mov	r2, r6
 1686 0020 2946     		mov	r1, r5
 1687 0022 2046     		mov	r0, r4
 1688 0024 FFF7FEFF 		bl	SEGGER_RTT_WriteNoLock
 1689              	.LVL190:
1210:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1690              		.loc 1 1210 3 is_stmt 1 discriminator 3 view .LVU525
 1691              		.syntax unified
 1692              	@ 1210 "systemview/SEGGER_RTT.c" 1
 1693 0028 87F31188 		msr   basepri, r7  
 1694              		
 1695              	@ 0 "" 2
 1696              		.thumb
 1697              		.syntax unified
 1698              	.LBE12:
 1699              		.loc 1 1210 22 discriminator 3 view .LVU526
1211:systemview/SEGGER_RTT.c ****   return Status;
 1700              		.loc 1 1211 3 discriminator 3 view .LVU527
1212:systemview/SEGGER_RTT.c **** }
 1701              		.loc 1 1212 1 is_stmt 0 discriminator 3 view .LVU528
 1702 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1703              	.LVL191:
 1704              	.L100:
 1705              	.LBB13:
1207:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1706              		.loc 1 1207 3 is_stmt 1 discriminator 1 view .LVU529
 1707 002e FFF7FEFF 		bl	_DoInit
 1708              	.LVL192:
1207:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1709              		.loc 1 1207 3 is_stmt 0 discriminator 1 view .LVU530
 1710 0032 EEE7     		b	.L98
 1711              	.L102:
 1712              		.align	2
 1713              	.L101:
 1714 0034 00000000 		.word	.LANCHOR1
 1715              	.LBE13:
 1716              		.cfi_endproc
 1717              	.LFE13:
 1719              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 57


 1720              		.align	1
 1721              		.global	SEGGER_RTT_WriteString
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1726              	SEGGER_RTT_WriteString:
 1727              	.LVL193:
 1728              	.LFB14:
1213:systemview/SEGGER_RTT.c **** 
1214:systemview/SEGGER_RTT.c **** /*********************************************************************
1215:systemview/SEGGER_RTT.c **** *
1216:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
1217:systemview/SEGGER_RTT.c **** *
1218:systemview/SEGGER_RTT.c **** *  Function description
1219:systemview/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
1220:systemview/SEGGER_RTT.c **** *    This data is read by the host.
1221:systemview/SEGGER_RTT.c **** *
1222:systemview/SEGGER_RTT.c **** *  Parameters
1223:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1224:systemview/SEGGER_RTT.c **** *    s            Pointer to string.
1225:systemview/SEGGER_RTT.c **** *
1226:systemview/SEGGER_RTT.c **** *  Return value
1227:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1228:systemview/SEGGER_RTT.c **** *
1229:systemview/SEGGER_RTT.c **** *  Notes
1230:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1231:systemview/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
1232:systemview/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
1233:systemview/SEGGER_RTT.c **** */
1234:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1729              		.loc 1 1234 70 is_stmt 1 view -0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              		.loc 1 1234 70 is_stmt 0 view .LVU532
 1734 0000 38B5     		push	{r3, r4, r5, lr}
 1735              	.LCFI15:
 1736              		.cfi_def_cfa_offset 16
 1737              		.cfi_offset 3, -16
 1738              		.cfi_offset 4, -12
 1739              		.cfi_offset 5, -8
 1740              		.cfi_offset 14, -4
 1741 0002 0546     		mov	r5, r0
 1742 0004 0C46     		mov	r4, r1
1235:systemview/SEGGER_RTT.c ****   unsigned Len;
 1743              		.loc 1 1235 3 is_stmt 1 view .LVU533
1236:systemview/SEGGER_RTT.c **** 
1237:systemview/SEGGER_RTT.c ****   Len = STRLEN(s);
 1744              		.loc 1 1237 3 view .LVU534
 1745              		.loc 1 1237 9 is_stmt 0 view .LVU535
 1746 0006 0846     		mov	r0, r1
 1747              	.LVL194:
 1748              		.loc 1 1237 9 view .LVU536
 1749 0008 FFF7FEFF 		bl	strlen
 1750              	.LVL195:
 1751              		.loc 1 1237 9 view .LVU537
 1752 000c 0246     		mov	r2, r0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 58


 1753              	.LVL196:
1238:systemview/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1754              		.loc 1 1238 3 is_stmt 1 view .LVU538
 1755              		.loc 1 1238 10 is_stmt 0 view .LVU539
 1756 000e 2146     		mov	r1, r4
 1757 0010 2846     		mov	r0, r5
 1758              	.LVL197:
 1759              		.loc 1 1238 10 view .LVU540
 1760 0012 FFF7FEFF 		bl	SEGGER_RTT_Write
 1761              	.LVL198:
1239:systemview/SEGGER_RTT.c **** }
 1762              		.loc 1 1239 1 view .LVU541
 1763 0016 38BD     		pop	{r3, r4, r5, pc}
 1764              		.loc 1 1239 1 view .LVU542
 1765              		.cfi_endproc
 1766              	.LFE14:
 1768              		.section	.text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 1769              		.align	1
 1770              		.global	SEGGER_RTT_PutCharSkipNoLock
 1771              		.syntax unified
 1772              		.thumb
 1773              		.thumb_func
 1775              	SEGGER_RTT_PutCharSkipNoLock:
 1776              	.LVL199:
 1777              	.LFB15:
1240:systemview/SEGGER_RTT.c **** 
1241:systemview/SEGGER_RTT.c **** /*********************************************************************
1242:systemview/SEGGER_RTT.c **** *
1243:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
1244:systemview/SEGGER_RTT.c **** *
1245:systemview/SEGGER_RTT.c **** *  Function description
1246:systemview/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1247:systemview/SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
1248:systemview/SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
1249:systemview/SEGGER_RTT.c **** *
1250:systemview/SEGGER_RTT.c **** *  Parameters
1251:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1252:systemview/SEGGER_RTT.c **** *    c            Byte to be stored.
1253:systemview/SEGGER_RTT.c **** *
1254:systemview/SEGGER_RTT.c **** *  Return value
1255:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1256:systemview/SEGGER_RTT.c **** *
1257:systemview/SEGGER_RTT.c **** *  Notes
1258:systemview/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1259:systemview/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1260:systemview/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1261:systemview/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1262:systemview/SEGGER_RTT.c **** */
1263:systemview/SEGGER_RTT.c **** 
1264:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 1778              		.loc 1 1264 69 is_stmt 1 view -0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782              		@ link register save eliminated.
 1783              		.loc 1 1264 69 is_stmt 0 view .LVU544
 1784 0000 30B4     		push	{r4, r5}
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 59


 1785              	.LCFI16:
 1786              		.cfi_def_cfa_offset 8
 1787              		.cfi_offset 4, -8
 1788              		.cfi_offset 5, -4
1265:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1789              		.loc 1 1265 3 is_stmt 1 view .LVU545
1266:systemview/SEGGER_RTT.c ****   unsigned              WrOff;
 1790              		.loc 1 1266 3 view .LVU546
1267:systemview/SEGGER_RTT.c ****   unsigned              Status;
 1791              		.loc 1 1267 3 view .LVU547
1268:systemview/SEGGER_RTT.c ****   volatile char*        pDst;
 1792              		.loc 1 1268 3 view .LVU548
1269:systemview/SEGGER_RTT.c ****   //
1270:systemview/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1271:systemview/SEGGER_RTT.c ****   //
1272:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1793              		.loc 1 1272 3 view .LVU549
 1794              	.LVL200:
1273:systemview/SEGGER_RTT.c ****   //
1274:systemview/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1275:systemview/SEGGER_RTT.c ****   //
1276:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1795              		.loc 1 1276 3 view .LVU550
 1796              		.loc 1 1276 16 is_stmt 0 view .LVU551
 1797 0002 00EB4002 		add	r2, r0, r0, lsl #1
 1798 0006 114B     		ldr	r3, .L112
 1799 0008 03EBC203 		add	r3, r3, r2, lsl #3
 1800 000c 5D6A     		ldr	r5, [r3, #36]
 1801              		.loc 1 1276 9 view .LVU552
 1802 000e 6A1C     		adds	r2, r5, #1
 1803              	.LVL201:
1277:systemview/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1804              		.loc 1 1277 3 is_stmt 1 view .LVU553
 1805              		.loc 1 1277 21 is_stmt 0 view .LVU554
 1806 0010 1B6A     		ldr	r3, [r3, #32]
 1807              		.loc 1 1277 6 view .LVU555
 1808 0012 9342     		cmp	r3, r2
 1809 0014 16D0     		beq	.L111
 1810              	.LVL202:
 1811              	.L106:
1278:systemview/SEGGER_RTT.c ****     WrOff = 0;
1279:systemview/SEGGER_RTT.c ****   }
1280:systemview/SEGGER_RTT.c ****   //
1281:systemview/SEGGER_RTT.c ****   // Output byte if free space is available
1282:systemview/SEGGER_RTT.c ****   //
1283:systemview/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1812              		.loc 1 1283 3 is_stmt 1 view .LVU556
 1813              		.loc 1 1283 21 is_stmt 0 view .LVU557
 1814 0016 00EB4003 		add	r3, r0, r0, lsl #1
 1815 001a 0C4C     		ldr	r4, .L112
 1816 001c 04EBC303 		add	r3, r4, r3, lsl #3
 1817 0020 9B6A     		ldr	r3, [r3, #40]
 1818              		.loc 1 1283 6 view .LVU558
 1819 0022 9342     		cmp	r3, r2
 1820 0024 10D0     		beq	.L109
1284:systemview/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 1821              		.loc 1 1284 5 is_stmt 1 view .LVU559
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 60


 1822              		.loc 1 1284 18 is_stmt 0 view .LVU560
 1823 0026 431C     		adds	r3, r0, #1
 1824 0028 03EB4303 		add	r3, r3, r3, lsl #1
 1825 002c 04EBC303 		add	r3, r4, r3, lsl #3
 1826 0030 5B68     		ldr	r3, [r3, #4]
 1827              	.LVL203:
1285:systemview/SEGGER_RTT.c ****     *pDst = c;
 1828              		.loc 1 1285 5 is_stmt 1 view .LVU561
 1829              		.loc 1 1285 11 is_stmt 0 view .LVU562
 1830 0032 5955     		strb	r1, [r3, r5]
1286:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 1831              		.loc 1 1286 15 is_stmt 1 view .LVU563
1287:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1832              		.loc 1 1287 5 view .LVU564
 1833              		.loc 1 1287 18 is_stmt 0 view .LVU565
 1834 0034 00EB4000 		add	r0, r0, r0, lsl #1
 1835              	.LVL204:
 1836              		.loc 1 1287 18 view .LVU566
 1837 0038 04EBC000 		add	r0, r4, r0, lsl #3
 1838 003c 4262     		str	r2, [r0, #36]
1288:systemview/SEGGER_RTT.c ****     Status = 1;
 1839              		.loc 1 1288 5 is_stmt 1 view .LVU567
 1840              	.LVL205:
 1841              		.loc 1 1288 12 is_stmt 0 view .LVU568
 1842 003e 0120     		movs	r0, #1
 1843              	.LVL206:
 1844              	.L105:
1289:systemview/SEGGER_RTT.c ****   } else {
1290:systemview/SEGGER_RTT.c ****     Status = 0;
1291:systemview/SEGGER_RTT.c ****   }
1292:systemview/SEGGER_RTT.c ****   //
1293:systemview/SEGGER_RTT.c ****   return Status;
1294:systemview/SEGGER_RTT.c **** }
 1845              		.loc 1 1294 1 view .LVU569
 1846 0040 30BC     		pop	{r4, r5}
 1847              	.LCFI17:
 1848              		.cfi_remember_state
 1849              		.cfi_restore 5
 1850              		.cfi_restore 4
 1851              		.cfi_def_cfa_offset 0
 1852 0042 7047     		bx	lr
 1853              	.LVL207:
 1854              	.L111:
 1855              	.LCFI18:
 1856              		.cfi_restore_state
1278:systemview/SEGGER_RTT.c ****   }
 1857              		.loc 1 1278 11 view .LVU570
 1858 0044 0022     		movs	r2, #0
 1859              	.LVL208:
1278:systemview/SEGGER_RTT.c ****   }
 1860              		.loc 1 1278 11 view .LVU571
 1861 0046 E6E7     		b	.L106
 1862              	.LVL209:
 1863              	.L109:
1290:systemview/SEGGER_RTT.c ****   }
 1864              		.loc 1 1290 12 view .LVU572
 1865 0048 0020     		movs	r0, #0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 61


 1866              	.LVL210:
1293:systemview/SEGGER_RTT.c **** }
 1867              		.loc 1 1293 3 is_stmt 1 view .LVU573
1293:systemview/SEGGER_RTT.c **** }
 1868              		.loc 1 1293 10 is_stmt 0 view .LVU574
 1869 004a F9E7     		b	.L105
 1870              	.L113:
 1871              		.align	2
 1872              	.L112:
 1873 004c 00000000 		.word	.LANCHOR1
 1874              		.cfi_endproc
 1875              	.LFE15:
 1877              		.section	.text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 1878              		.align	1
 1879              		.global	SEGGER_RTT_PutCharSkip
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1884              	SEGGER_RTT_PutCharSkip:
 1885              	.LVL211:
 1886              	.LFB16:
1295:systemview/SEGGER_RTT.c **** 
1296:systemview/SEGGER_RTT.c **** /*********************************************************************
1297:systemview/SEGGER_RTT.c **** *
1298:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1299:systemview/SEGGER_RTT.c **** *
1300:systemview/SEGGER_RTT.c **** *  Function description
1301:systemview/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1302:systemview/SEGGER_RTT.c **** *
1303:systemview/SEGGER_RTT.c **** *  Parameters
1304:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1305:systemview/SEGGER_RTT.c **** *    c            Byte to be stored.
1306:systemview/SEGGER_RTT.c **** *
1307:systemview/SEGGER_RTT.c **** *  Return value
1308:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1309:systemview/SEGGER_RTT.c **** *
1310:systemview/SEGGER_RTT.c **** *  Notes
1311:systemview/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1312:systemview/SEGGER_RTT.c **** */
1313:systemview/SEGGER_RTT.c **** 
1314:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 1887              		.loc 1 1314 63 is_stmt 1 view -0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		.loc 1 1314 63 is_stmt 0 view .LVU576
 1892 0000 38B5     		push	{r3, r4, r5, lr}
 1893              	.LCFI19:
 1894              		.cfi_def_cfa_offset 16
 1895              		.cfi_offset 3, -16
 1896              		.cfi_offset 4, -12
 1897              		.cfi_offset 5, -8
 1898              		.cfi_offset 14, -4
 1899 0002 0446     		mov	r4, r0
 1900 0004 0D46     		mov	r5, r1
1315:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1901              		.loc 1 1315 3 is_stmt 1 view .LVU577
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 62


1316:systemview/SEGGER_RTT.c ****   unsigned              WrOff;
 1902              		.loc 1 1316 3 view .LVU578
1317:systemview/SEGGER_RTT.c ****   unsigned              Status;
 1903              		.loc 1 1317 3 view .LVU579
1318:systemview/SEGGER_RTT.c ****   volatile char*        pDst;
 1904              		.loc 1 1318 3 view .LVU580
1319:systemview/SEGGER_RTT.c ****   //
1320:systemview/SEGGER_RTT.c ****   // Prepare
1321:systemview/SEGGER_RTT.c ****   //
1322:systemview/SEGGER_RTT.c ****   INIT();
 1905              		.loc 1 1322 3 view .LVU581
 1906              	.LBB14:
 1907              		.loc 1 1322 3 view .LVU582
 1908              		.loc 1 1322 3 view .LVU583
 1909              	.LVL212:
 1910              		.loc 1 1322 3 view .LVU584
 1911 0006 1A4B     		ldr	r3, .L123
 1912 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 000a DBB2     		uxtb	r3, r3
 1914 000c 532B     		cmp	r3, #83
 1915 000e 27D1     		bne	.L121
 1916              	.LVL213:
 1917              	.L115:
 1918              		.loc 1 1322 3 is_stmt 0 view .LVU585
 1919              	.LBE14:
 1920              		.loc 1 1322 3 is_stmt 1 discriminator 3 view .LVU586
 1921              	.LBB15:
1323:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1922              		.loc 1 1323 3 discriminator 3 view .LVU587
 1923              		.loc 1 1323 3 discriminator 3 view .LVU588
 1924              		.syntax unified
 1925              	@ 1323 "systemview/SEGGER_RTT.c" 1
 1926 0010 EFF3118C 		mrs   ip, basepri  
 1927 0014 4FF02001 		mov   r1, #32       
 1928 0018 81F31188 		msr   basepri, r1  
 1929              		
 1930              	@ 0 "" 2
 1931              	.LVL214:
 1932              		.loc 1 1323 20 discriminator 3 view .LVU589
1324:systemview/SEGGER_RTT.c ****   //
1325:systemview/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1326:systemview/SEGGER_RTT.c ****   //
1327:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1933              		.loc 1 1327 3 discriminator 3 view .LVU590
1328:systemview/SEGGER_RTT.c ****   //
1329:systemview/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1330:systemview/SEGGER_RTT.c ****   //
1331:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1934              		.loc 1 1331 3 discriminator 3 view .LVU591
 1935              		.loc 1 1331 16 is_stmt 0 discriminator 3 view .LVU592
 1936              		.thumb
 1937              		.syntax unified
 1938 001c 04EB4403 		add	r3, r4, r4, lsl #1
 1939 0020 134A     		ldr	r2, .L123
 1940 0022 02EBC303 		add	r3, r2, r3, lsl #3
 1941 0026 586A     		ldr	r0, [r3, #36]
 1942              		.loc 1 1331 9 discriminator 3 view .LVU593
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 63


 1943 0028 421C     		adds	r2, r0, #1
 1944              	.LVL215:
1332:systemview/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1945              		.loc 1 1332 3 is_stmt 1 discriminator 3 view .LVU594
 1946              		.loc 1 1332 21 is_stmt 0 discriminator 3 view .LVU595
 1947 002a 1B6A     		ldr	r3, [r3, #32]
 1948              		.loc 1 1332 6 discriminator 3 view .LVU596
 1949 002c 9342     		cmp	r3, r2
 1950 002e 1AD0     		beq	.L122
 1951              	.LVL216:
 1952              	.L116:
1333:systemview/SEGGER_RTT.c ****     WrOff = 0;
1334:systemview/SEGGER_RTT.c ****   }
1335:systemview/SEGGER_RTT.c ****   //
1336:systemview/SEGGER_RTT.c ****   // Output byte if free space is available
1337:systemview/SEGGER_RTT.c ****   //
1338:systemview/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1953              		.loc 1 1338 3 is_stmt 1 view .LVU597
 1954              		.loc 1 1338 21 is_stmt 0 view .LVU598
 1955 0030 04EB4403 		add	r3, r4, r4, lsl #1
 1956 0034 0E49     		ldr	r1, .L123
 1957 0036 01EBC303 		add	r3, r1, r3, lsl #3
 1958 003a 9B6A     		ldr	r3, [r3, #40]
 1959              		.loc 1 1338 6 view .LVU599
 1960 003c 9342     		cmp	r3, r2
 1961 003e 14D0     		beq	.L119
1339:systemview/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 1962              		.loc 1 1339 5 is_stmt 1 view .LVU600
 1963              		.loc 1 1339 19 is_stmt 0 view .LVU601
 1964 0040 631C     		adds	r3, r4, #1
 1965 0042 03EB4303 		add	r3, r3, r3, lsl #1
 1966 0046 01EBC303 		add	r3, r1, r3, lsl #3
 1967 004a 5B68     		ldr	r3, [r3, #4]
 1968              	.LVL217:
1340:systemview/SEGGER_RTT.c ****     *pDst = c;
 1969              		.loc 1 1340 5 is_stmt 1 view .LVU602
 1970              		.loc 1 1340 11 is_stmt 0 view .LVU603
 1971 004c 1D54     		strb	r5, [r3, r0]
1341:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 1972              		.loc 1 1341 15 is_stmt 1 view .LVU604
1342:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1973              		.loc 1 1342 5 view .LVU605
 1974              		.loc 1 1342 18 is_stmt 0 view .LVU606
 1975 004e 04EB4404 		add	r4, r4, r4, lsl #1
 1976              	.LVL218:
 1977              		.loc 1 1342 18 view .LVU607
 1978 0052 01EBC404 		add	r4, r1, r4, lsl #3
 1979 0056 6262     		str	r2, [r4, #36]
1343:systemview/SEGGER_RTT.c ****     Status = 1;
 1980              		.loc 1 1343 5 is_stmt 1 view .LVU608
 1981              	.LVL219:
 1982              		.loc 1 1343 12 is_stmt 0 view .LVU609
 1983 0058 0120     		movs	r0, #1
 1984              	.LVL220:
 1985              	.L117:
1344:systemview/SEGGER_RTT.c ****   } else {
1345:systemview/SEGGER_RTT.c ****     Status = 0;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 64


1346:systemview/SEGGER_RTT.c ****   }
1347:systemview/SEGGER_RTT.c ****   //
1348:systemview/SEGGER_RTT.c ****   // Finish up.
1349:systemview/SEGGER_RTT.c ****   //
1350:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1986              		.loc 1 1350 3 is_stmt 1 view .LVU610
 1987              		.syntax unified
 1988              	@ 1350 "systemview/SEGGER_RTT.c" 1
 1989 005a 8CF31188 		msr   basepri, ip  
 1990              		
 1991              	@ 0 "" 2
 1992              		.thumb
 1993              		.syntax unified
 1994              	.LBE15:
 1995              		.loc 1 1350 22 view .LVU611
1351:systemview/SEGGER_RTT.c ****   //
1352:systemview/SEGGER_RTT.c ****   return Status;
 1996              		.loc 1 1352 3 view .LVU612
1353:systemview/SEGGER_RTT.c **** }
 1997              		.loc 1 1353 1 is_stmt 0 view .LVU613
 1998 005e 38BD     		pop	{r3, r4, r5, pc}
 1999              	.LVL221:
 2000              	.L121:
 2001              	.LBB16:
1322:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2002              		.loc 1 1322 3 is_stmt 1 discriminator 1 view .LVU614
 2003 0060 FFF7FEFF 		bl	_DoInit
 2004              	.LVL222:
1322:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2005              		.loc 1 1322 3 is_stmt 0 discriminator 1 view .LVU615
 2006 0064 D4E7     		b	.L115
 2007              	.LVL223:
 2008              	.L122:
1322:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2009              		.loc 1 1322 3 discriminator 1 view .LVU616
 2010              	.LBE16:
 2011              	.LBB17:
1333:systemview/SEGGER_RTT.c ****   }
 2012              		.loc 1 1333 11 view .LVU617
 2013 0066 0022     		movs	r2, #0
 2014              	.LVL224:
1333:systemview/SEGGER_RTT.c ****   }
 2015              		.loc 1 1333 11 view .LVU618
 2016 0068 E2E7     		b	.L116
 2017              	.LVL225:
 2018              	.L119:
1345:systemview/SEGGER_RTT.c ****   }
 2019              		.loc 1 1345 12 view .LVU619
 2020 006a 0020     		movs	r0, #0
 2021 006c F5E7     		b	.L117
 2022              	.L124:
 2023 006e 00BF     		.align	2
 2024              	.L123:
 2025 0070 00000000 		.word	.LANCHOR1
 2026              	.LBE17:
 2027              		.cfi_endproc
 2028              	.LFE16:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 65


 2030              		.section	.text.SEGGER_RTT_PutChar,"ax",%progbits
 2031              		.align	1
 2032              		.global	SEGGER_RTT_PutChar
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2037              	SEGGER_RTT_PutChar:
 2038              	.LVL226:
 2039              	.LFB17:
1354:systemview/SEGGER_RTT.c **** 
1355:systemview/SEGGER_RTT.c ****  /*********************************************************************
1356:systemview/SEGGER_RTT.c **** *
1357:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
1358:systemview/SEGGER_RTT.c **** *
1359:systemview/SEGGER_RTT.c **** *  Function description
1360:systemview/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1361:systemview/SEGGER_RTT.c **** *
1362:systemview/SEGGER_RTT.c **** *  Parameters
1363:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1364:systemview/SEGGER_RTT.c **** *    c            Byte to be stored.
1365:systemview/SEGGER_RTT.c **** *
1366:systemview/SEGGER_RTT.c **** *  Return value
1367:systemview/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1368:systemview/SEGGER_RTT.c **** *
1369:systemview/SEGGER_RTT.c **** *  Notes
1370:systemview/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1371:systemview/SEGGER_RTT.c **** */
1372:systemview/SEGGER_RTT.c **** 
1373:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 2040              		.loc 1 1373 59 is_stmt 1 view -0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              		.loc 1 1373 59 is_stmt 0 view .LVU621
 2045 0000 38B5     		push	{r3, r4, r5, lr}
 2046              	.LCFI20:
 2047              		.cfi_def_cfa_offset 16
 2048              		.cfi_offset 3, -16
 2049              		.cfi_offset 4, -12
 2050              		.cfi_offset 5, -8
 2051              		.cfi_offset 14, -4
 2052 0002 0446     		mov	r4, r0
 2053 0004 0D46     		mov	r5, r1
1374:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2054              		.loc 1 1374 3 is_stmt 1 view .LVU622
1375:systemview/SEGGER_RTT.c ****   unsigned              WrOff;
 2055              		.loc 1 1375 3 view .LVU623
1376:systemview/SEGGER_RTT.c ****   unsigned              Status;
 2056              		.loc 1 1376 3 view .LVU624
1377:systemview/SEGGER_RTT.c ****   volatile char*        pDst;
 2057              		.loc 1 1377 3 view .LVU625
1378:systemview/SEGGER_RTT.c ****   //
1379:systemview/SEGGER_RTT.c ****   // Prepare
1380:systemview/SEGGER_RTT.c ****   //
1381:systemview/SEGGER_RTT.c ****   INIT();
 2058              		.loc 1 1381 3 view .LVU626
 2059              	.LBB18:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 66


 2060              		.loc 1 1381 3 view .LVU627
 2061              		.loc 1 1381 3 view .LVU628
 2062              	.LVL227:
 2063              		.loc 1 1381 3 view .LVU629
 2064 0006 224B     		ldr	r3, .L136
 2065 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 000a DBB2     		uxtb	r3, r3
 2067 000c 532B     		cmp	r3, #83
 2068 000e 2FD1     		bne	.L134
 2069              	.LVL228:
 2070              	.L126:
 2071              		.loc 1 1381 3 is_stmt 0 view .LVU630
 2072              	.LBE18:
 2073              		.loc 1 1381 3 is_stmt 1 discriminator 3 view .LVU631
 2074              	.LBB19:
1382:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2075              		.loc 1 1382 3 discriminator 3 view .LVU632
 2076              		.loc 1 1382 3 discriminator 3 view .LVU633
 2077              		.syntax unified
 2078              	@ 1382 "systemview/SEGGER_RTT.c" 1
 2079 0010 EFF3118C 		mrs   ip, basepri  
 2080 0014 4FF02001 		mov   r1, #32       
 2081 0018 81F31188 		msr   basepri, r1  
 2082              		
 2083              	@ 0 "" 2
 2084              	.LVL229:
 2085              		.loc 1 1382 20 discriminator 3 view .LVU634
1383:systemview/SEGGER_RTT.c ****   //
1384:systemview/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1385:systemview/SEGGER_RTT.c ****   //
1386:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 2086              		.loc 1 1386 3 discriminator 3 view .LVU635
1387:systemview/SEGGER_RTT.c ****   //
1388:systemview/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1389:systemview/SEGGER_RTT.c ****   //
1390:systemview/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 2087              		.loc 1 1390 3 discriminator 3 view .LVU636
 2088              		.loc 1 1390 16 is_stmt 0 discriminator 3 view .LVU637
 2089              		.thumb
 2090              		.syntax unified
 2091 001c 04EB4403 		add	r3, r4, r4, lsl #1
 2092 0020 1B4A     		ldr	r2, .L136
 2093 0022 02EBC303 		add	r3, r2, r3, lsl #3
 2094 0026 596A     		ldr	r1, [r3, #36]
 2095              		.loc 1 1390 9 discriminator 3 view .LVU638
 2096 0028 481C     		adds	r0, r1, #1
 2097              	.LVL230:
1391:systemview/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 2098              		.loc 1 1391 3 is_stmt 1 discriminator 3 view .LVU639
 2099              		.loc 1 1391 21 is_stmt 0 discriminator 3 view .LVU640
 2100 002a 1B6A     		ldr	r3, [r3, #32]
 2101              		.loc 1 1391 6 discriminator 3 view .LVU641
 2102 002c 8342     		cmp	r3, r0
 2103 002e 22D0     		beq	.L135
 2104              	.LVL231:
 2105              	.L127:
1392:systemview/SEGGER_RTT.c ****     WrOff = 0;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 67


1393:systemview/SEGGER_RTT.c ****   }
1394:systemview/SEGGER_RTT.c ****   //
1395:systemview/SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1396:systemview/SEGGER_RTT.c ****   //
1397:systemview/SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 2106              		.loc 1 1397 3 is_stmt 1 view .LVU642
 2107              		.loc 1 1397 12 is_stmt 0 view .LVU643
 2108 0030 04EB4403 		add	r3, r4, r4, lsl #1
 2109 0034 164A     		ldr	r2, .L136
 2110 0036 02EBC303 		add	r3, r2, r3, lsl #3
 2111 003a DB6A     		ldr	r3, [r3, #44]
 2112              		.loc 1 1397 6 view .LVU644
 2113 003c 022B     		cmp	r3, #2
 2114 003e 1CD0     		beq	.L129
 2115              	.L128:
1398:systemview/SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
1399:systemview/SEGGER_RTT.c ****       ;
1400:systemview/SEGGER_RTT.c ****     }
1401:systemview/SEGGER_RTT.c ****   }
1402:systemview/SEGGER_RTT.c ****   //
1403:systemview/SEGGER_RTT.c ****   // Output byte if free space is available
1404:systemview/SEGGER_RTT.c ****   //
1405:systemview/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 2116              		.loc 1 1405 3 is_stmt 1 view .LVU645
 2117              		.loc 1 1405 21 is_stmt 0 view .LVU646
 2118 0040 04EB4403 		add	r3, r4, r4, lsl #1
 2119 0044 124A     		ldr	r2, .L136
 2120 0046 02EBC303 		add	r3, r2, r3, lsl #3
 2121 004a 9B6A     		ldr	r3, [r3, #40]
 2122              		.loc 1 1405 6 view .LVU647
 2123 004c 8342     		cmp	r3, r0
 2124 004e 1DD0     		beq	.L132
1406:systemview/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2125              		.loc 1 1406 5 is_stmt 1 view .LVU648
 2126              		.loc 1 1406 19 is_stmt 0 view .LVU649
 2127 0050 631C     		adds	r3, r4, #1
 2128 0052 03EB4303 		add	r3, r3, r3, lsl #1
 2129 0056 02EBC303 		add	r3, r2, r3, lsl #3
 2130 005a 5B68     		ldr	r3, [r3, #4]
 2131              	.LVL232:
1407:systemview/SEGGER_RTT.c ****     *pDst = c;
 2132              		.loc 1 1407 5 is_stmt 1 view .LVU650
 2133              		.loc 1 1407 11 is_stmt 0 view .LVU651
 2134 005c 5D54     		strb	r5, [r3, r1]
1408:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2135              		.loc 1 1408 15 is_stmt 1 view .LVU652
1409:systemview/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2136              		.loc 1 1409 5 view .LVU653
 2137              		.loc 1 1409 18 is_stmt 0 view .LVU654
 2138 005e 04EB4404 		add	r4, r4, r4, lsl #1
 2139              	.LVL233:
 2140              		.loc 1 1409 18 view .LVU655
 2141 0062 02EBC404 		add	r4, r2, r4, lsl #3
 2142 0066 6062     		str	r0, [r4, #36]
1410:systemview/SEGGER_RTT.c ****     Status = 1;
 2143              		.loc 1 1410 5 is_stmt 1 view .LVU656
 2144              	.LVL234:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 68


 2145              		.loc 1 1410 12 is_stmt 0 view .LVU657
 2146 0068 0120     		movs	r0, #1
 2147              	.LVL235:
 2148              	.L130:
1411:systemview/SEGGER_RTT.c ****   } else {
1412:systemview/SEGGER_RTT.c ****     Status = 0;
1413:systemview/SEGGER_RTT.c ****   }
1414:systemview/SEGGER_RTT.c ****   //
1415:systemview/SEGGER_RTT.c ****   // Finish up.
1416:systemview/SEGGER_RTT.c ****   //
1417:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2149              		.loc 1 1417 3 is_stmt 1 view .LVU658
 2150              		.syntax unified
 2151              	@ 1417 "systemview/SEGGER_RTT.c" 1
 2152 006a 8CF31188 		msr   basepri, ip  
 2153              		
 2154              	@ 0 "" 2
 2155              		.thumb
 2156              		.syntax unified
 2157              	.LBE19:
 2158              		.loc 1 1417 22 view .LVU659
1418:systemview/SEGGER_RTT.c ****   return Status;
 2159              		.loc 1 1418 3 view .LVU660
1419:systemview/SEGGER_RTT.c **** }
 2160              		.loc 1 1419 1 is_stmt 0 view .LVU661
 2161 006e 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL236:
 2163              	.L134:
 2164              	.LBB20:
1381:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2165              		.loc 1 1381 3 is_stmt 1 discriminator 1 view .LVU662
 2166 0070 FFF7FEFF 		bl	_DoInit
 2167              	.LVL237:
1381:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2168              		.loc 1 1381 3 is_stmt 0 discriminator 1 view .LVU663
 2169 0074 CCE7     		b	.L126
 2170              	.LVL238:
 2171              	.L135:
1381:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2172              		.loc 1 1381 3 discriminator 1 view .LVU664
 2173              	.LBE20:
 2174              	.LBB21:
1392:systemview/SEGGER_RTT.c ****   }
 2175              		.loc 1 1392 11 view .LVU665
 2176 0076 0020     		movs	r0, #0
 2177              	.LVL239:
1392:systemview/SEGGER_RTT.c ****   }
 2178              		.loc 1 1392 11 view .LVU666
 2179 0078 DAE7     		b	.L127
 2180              	.LVL240:
 2181              	.L129:
1399:systemview/SEGGER_RTT.c ****     }
 2182              		.loc 1 1399 7 is_stmt 1 discriminator 1 view .LVU667
1398:systemview/SEGGER_RTT.c ****       ;
 2183              		.loc 1 1398 11 discriminator 1 view .LVU668
1398:systemview/SEGGER_RTT.c ****       ;
 2184              		.loc 1 1398 26 is_stmt 0 discriminator 1 view .LVU669
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 69


 2185 007a 04EB4403 		add	r3, r4, r4, lsl #1
 2186 007e 044A     		ldr	r2, .L136
 2187 0080 02EBC303 		add	r3, r2, r3, lsl #3
 2188 0084 9B6A     		ldr	r3, [r3, #40]
1398:systemview/SEGGER_RTT.c ****       ;
 2189              		.loc 1 1398 11 discriminator 1 view .LVU670
 2190 0086 8342     		cmp	r3, r0
 2191 0088 F7D0     		beq	.L129
 2192 008a D9E7     		b	.L128
 2193              	.L132:
1412:systemview/SEGGER_RTT.c ****   }
 2194              		.loc 1 1412 12 view .LVU671
 2195 008c 0020     		movs	r0, #0
 2196              	.LVL241:
1412:systemview/SEGGER_RTT.c ****   }
 2197              		.loc 1 1412 12 view .LVU672
 2198 008e ECE7     		b	.L130
 2199              	.L137:
 2200              		.align	2
 2201              	.L136:
 2202 0090 00000000 		.word	.LANCHOR1
 2203              	.LBE21:
 2204              		.cfi_endproc
 2205              	.LFE17:
 2207              		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 2208              		.align	1
 2209              		.global	SEGGER_RTT_GetKey
 2210              		.syntax unified
 2211              		.thumb
 2212              		.thumb_func
 2214              	SEGGER_RTT_GetKey:
 2215              	.LFB18:
1420:systemview/SEGGER_RTT.c **** 
1421:systemview/SEGGER_RTT.c **** /*********************************************************************
1422:systemview/SEGGER_RTT.c **** *
1423:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1424:systemview/SEGGER_RTT.c **** *
1425:systemview/SEGGER_RTT.c **** *  Function description
1426:systemview/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1427:systemview/SEGGER_RTT.c **** *    Host has previously stored data there.
1428:systemview/SEGGER_RTT.c **** *
1429:systemview/SEGGER_RTT.c **** *  Return value
1430:systemview/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1431:systemview/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1432:systemview/SEGGER_RTT.c **** *
1433:systemview/SEGGER_RTT.c **** *  Notes
1434:systemview/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1435:systemview/SEGGER_RTT.c **** */
1436:systemview/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 2216              		.loc 1 1436 29 is_stmt 1 view -0
 2217              		.cfi_startproc
 2218              		@ args = 0, pretend = 0, frame = 8
 2219              		@ frame_needed = 0, uses_anonymous_args = 0
 2220 0000 00B5     		push	{lr}
 2221              	.LCFI21:
 2222              		.cfi_def_cfa_offset 4
 2223              		.cfi_offset 14, -4
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 70


 2224 0002 83B0     		sub	sp, sp, #12
 2225              	.LCFI22:
 2226              		.cfi_def_cfa_offset 16
1437:systemview/SEGGER_RTT.c ****   char c;
 2227              		.loc 1 1437 3 view .LVU674
1438:systemview/SEGGER_RTT.c ****   int r;
 2228              		.loc 1 1438 3 view .LVU675
1439:systemview/SEGGER_RTT.c **** 
1440:systemview/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 2229              		.loc 1 1440 3 view .LVU676
 2230              		.loc 1 1440 12 is_stmt 0 view .LVU677
 2231 0004 0122     		movs	r2, #1
 2232 0006 0DF10701 		add	r1, sp, #7
 2233 000a 0020     		movs	r0, #0
 2234 000c FFF7FEFF 		bl	SEGGER_RTT_Read
 2235              	.LVL242:
1441:systemview/SEGGER_RTT.c ****   if (r == 1) {
 2236              		.loc 1 1441 3 is_stmt 1 view .LVU678
 2237              		.loc 1 1441 6 is_stmt 0 view .LVU679
 2238 0010 0128     		cmp	r0, #1
 2239 0012 04D1     		bne	.L140
1442:systemview/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 2240              		.loc 1 1442 5 is_stmt 1 view .LVU680
 2241              		.loc 1 1442 9 is_stmt 0 view .LVU681
 2242 0014 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2243              	.LVL243:
 2244              	.L138:
1443:systemview/SEGGER_RTT.c ****   } else {
1444:systemview/SEGGER_RTT.c ****     r = -1;
1445:systemview/SEGGER_RTT.c ****   }
1446:systemview/SEGGER_RTT.c ****   return r;
1447:systemview/SEGGER_RTT.c **** }
 2245              		.loc 1 1447 1 view .LVU682
 2246 0018 03B0     		add	sp, sp, #12
 2247              	.LCFI23:
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 4
 2250              		@ sp needed
 2251 001a 5DF804FB 		ldr	pc, [sp], #4
 2252              	.LVL244:
 2253              	.L140:
 2254              	.LCFI24:
 2255              		.cfi_restore_state
1444:systemview/SEGGER_RTT.c ****   }
 2256              		.loc 1 1444 7 view .LVU683
 2257 001e 4FF0FF30 		mov	r0, #-1
 2258              	.LVL245:
1446:systemview/SEGGER_RTT.c **** }
 2259              		.loc 1 1446 3 is_stmt 1 view .LVU684
1446:systemview/SEGGER_RTT.c **** }
 2260              		.loc 1 1446 10 is_stmt 0 view .LVU685
 2261 0022 F9E7     		b	.L138
 2262              		.cfi_endproc
 2263              	.LFE18:
 2265              		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 2266              		.align	1
 2267              		.global	SEGGER_RTT_WaitKey
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 71


 2268              		.syntax unified
 2269              		.thumb
 2270              		.thumb_func
 2272              	SEGGER_RTT_WaitKey:
 2273              	.LFB19:
1448:systemview/SEGGER_RTT.c **** 
1449:systemview/SEGGER_RTT.c **** /*********************************************************************
1450:systemview/SEGGER_RTT.c **** *
1451:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1452:systemview/SEGGER_RTT.c **** *
1453:systemview/SEGGER_RTT.c **** *  Function description
1454:systemview/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1455:systemview/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
1456:systemview/SEGGER_RTT.c **** *
1457:systemview/SEGGER_RTT.c **** *  Return value
1458:systemview/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1459:systemview/SEGGER_RTT.c **** *
1460:systemview/SEGGER_RTT.c **** *  Notes
1461:systemview/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1462:systemview/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1463:systemview/SEGGER_RTT.c **** */
1464:systemview/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 2274              		.loc 1 1464 30 is_stmt 1 view -0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
 2278 0000 08B5     		push	{r3, lr}
 2279              	.LCFI25:
 2280              		.cfi_def_cfa_offset 8
 2281              		.cfi_offset 3, -8
 2282              		.cfi_offset 14, -4
 2283              	.L143:
1465:systemview/SEGGER_RTT.c ****   int r;
 2284              		.loc 1 1465 3 discriminator 1 view .LVU687
1466:systemview/SEGGER_RTT.c **** 
1467:systemview/SEGGER_RTT.c ****   do {
 2285              		.loc 1 1467 3 discriminator 1 view .LVU688
1468:systemview/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 2286              		.loc 1 1468 5 discriminator 1 view .LVU689
 2287              		.loc 1 1468 9 is_stmt 0 discriminator 1 view .LVU690
 2288 0002 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 2289              	.LVL246:
1469:systemview/SEGGER_RTT.c ****   } while (r < 0);
 2290              		.loc 1 1469 11 is_stmt 1 discriminator 1 view .LVU691
 2291              		.loc 1 1469 3 is_stmt 0 discriminator 1 view .LVU692
 2292 0006 0028     		cmp	r0, #0
 2293              		.loc 1 1469 3 discriminator 1 view .LVU693
 2294 0008 FBDB     		blt	.L143
1470:systemview/SEGGER_RTT.c ****   return r;
 2295              		.loc 1 1470 3 is_stmt 1 view .LVU694
1471:systemview/SEGGER_RTT.c **** }
 2296              		.loc 1 1471 1 is_stmt 0 view .LVU695
 2297 000a 08BD     		pop	{r3, pc}
 2298              		.cfi_endproc
 2299              	.LFE19:
 2301              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 2302              		.align	1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 72


 2303              		.global	SEGGER_RTT_HasKey
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2308              	SEGGER_RTT_HasKey:
 2309              	.LFB20:
1472:systemview/SEGGER_RTT.c **** 
1473:systemview/SEGGER_RTT.c **** /*********************************************************************
1474:systemview/SEGGER_RTT.c **** *
1475:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1476:systemview/SEGGER_RTT.c **** *
1477:systemview/SEGGER_RTT.c **** *  Function description
1478:systemview/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1479:systemview/SEGGER_RTT.c **** *
1480:systemview/SEGGER_RTT.c **** *  Return value
1481:systemview/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
1482:systemview/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1483:systemview/SEGGER_RTT.c **** *
1484:systemview/SEGGER_RTT.c **** *  Notes
1485:systemview/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1486:systemview/SEGGER_RTT.c **** */
1487:systemview/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 2310              		.loc 1 1487 29 is_stmt 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
 2314 0000 08B5     		push	{r3, lr}
 2315              	.LCFI26:
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 3, -8
 2318              		.cfi_offset 14, -4
1488:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 2319              		.loc 1 1488 3 view .LVU697
1489:systemview/SEGGER_RTT.c ****   unsigned RdOff;
 2320              		.loc 1 1489 3 view .LVU698
1490:systemview/SEGGER_RTT.c ****   int r;
 2321              		.loc 1 1490 3 view .LVU699
1491:systemview/SEGGER_RTT.c **** 
1492:systemview/SEGGER_RTT.c ****   INIT();
 2322              		.loc 1 1492 3 view .LVU700
 2323              	.LBB22:
 2324              		.loc 1 1492 3 view .LVU701
 2325              		.loc 1 1492 3 view .LVU702
 2326              	.LVL247:
 2327              		.loc 1 1492 3 view .LVU703
 2328 0002 084B     		ldr	r3, .L151
 2329 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2330 0006 DBB2     		uxtb	r3, r3
 2331 0008 532B     		cmp	r3, #83
 2332 000a 06D1     		bne	.L150
 2333              	.L146:
 2334              	.LBE22:
 2335              		.loc 1 1492 3 discriminator 3 view .LVU704
1493:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  /
 2336              		.loc 1 1493 3 discriminator 3 view .LVU705
 2337              	.LVL248:
1494:systemview/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 73


 2338              		.loc 1 1494 3 discriminator 3 view .LVU706
 2339              		.loc 1 1494 9 is_stmt 0 discriminator 3 view .LVU707
 2340 000c 054B     		ldr	r3, .L151
 2341 000e 1A6F     		ldr	r2, [r3, #112]
 2342              	.LVL249:
1495:systemview/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 2343              		.loc 1 1495 3 is_stmt 1 discriminator 3 view .LVU708
 2344              		.loc 1 1495 21 is_stmt 0 discriminator 3 view .LVU709
 2345 0010 DB6E     		ldr	r3, [r3, #108]
 2346              		.loc 1 1495 6 discriminator 3 view .LVU710
 2347 0012 9342     		cmp	r3, r2
 2348 0014 04D0     		beq	.L148
1496:systemview/SEGGER_RTT.c ****     r = 1;
 2349              		.loc 1 1496 7 view .LVU711
 2350 0016 0120     		movs	r0, #1
 2351              	.L145:
1497:systemview/SEGGER_RTT.c ****   } else {
1498:systemview/SEGGER_RTT.c ****     r = 0;
1499:systemview/SEGGER_RTT.c ****   }
1500:systemview/SEGGER_RTT.c ****   return r;
1501:systemview/SEGGER_RTT.c **** }
 2352              		.loc 1 1501 1 view .LVU712
 2353 0018 08BD     		pop	{r3, pc}
 2354              	.LVL250:
 2355              	.L150:
 2356              	.LBB23:
1492:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  /
 2357              		.loc 1 1492 3 is_stmt 1 discriminator 1 view .LVU713
 2358 001a FFF7FEFF 		bl	_DoInit
 2359              	.LVL251:
 2360 001e F5E7     		b	.L146
 2361              	.LVL252:
 2362              	.L148:
1492:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  /
 2363              		.loc 1 1492 3 is_stmt 0 discriminator 1 view .LVU714
 2364              	.LBE23:
1498:systemview/SEGGER_RTT.c ****   }
 2365              		.loc 1 1498 7 view .LVU715
 2366 0020 0020     		movs	r0, #0
 2367              	.LVL253:
1500:systemview/SEGGER_RTT.c **** }
 2368              		.loc 1 1500 3 is_stmt 1 view .LVU716
1500:systemview/SEGGER_RTT.c **** }
 2369              		.loc 1 1500 10 is_stmt 0 view .LVU717
 2370 0022 F9E7     		b	.L145
 2371              	.L152:
 2372              		.align	2
 2373              	.L151:
 2374 0024 00000000 		.word	.LANCHOR1
 2375              		.cfi_endproc
 2376              	.LFE20:
 2378              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 2379              		.align	1
 2380              		.global	SEGGER_RTT_HasData
 2381              		.syntax unified
 2382              		.thumb
 2383              		.thumb_func
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 74


 2385              	SEGGER_RTT_HasData:
 2386              	.LVL254:
 2387              	.LFB21:
1502:systemview/SEGGER_RTT.c **** 
1503:systemview/SEGGER_RTT.c **** /*********************************************************************
1504:systemview/SEGGER_RTT.c **** *
1505:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1506:systemview/SEGGER_RTT.c **** *
1507:systemview/SEGGER_RTT.c **** *  Function description
1508:systemview/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1509:systemview/SEGGER_RTT.c **** *
1510:systemview/SEGGER_RTT.c **** *  Return value:
1511:systemview/SEGGER_RTT.c **** *  ==0:  No data
1512:systemview/SEGGER_RTT.c **** *  !=0:  Data in buffer
1513:systemview/SEGGER_RTT.c **** *
1514:systemview/SEGGER_RTT.c **** */
1515:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 2388              		.loc 1 1515 51 is_stmt 1 view -0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 0, uses_anonymous_args = 0
 2392              		@ link register save eliminated.
1516:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 2393              		.loc 1 1516 3 view .LVU719
1517:systemview/SEGGER_RTT.c ****   unsigned                v;
 2394              		.loc 1 1517 3 view .LVU720
1518:systemview/SEGGER_RTT.c **** 
1519:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((uintptr_t)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHE
 2395              		.loc 1 1519 3 view .LVU721
1520:systemview/SEGGER_RTT.c ****   v = pRing->WrOff;
 2396              		.loc 1 1520 3 view .LVU722
 2397              		.loc 1 1520 5 is_stmt 0 view .LVU723
 2398 0000 064B     		ldr	r3, .L154
 2399 0002 00EB4002 		add	r2, r0, r0, lsl #1
 2400 0006 03EBC202 		add	r2, r3, r2, lsl #3
 2401 000a D26E     		ldr	r2, [r2, #108]
 2402              	.LVL255:
1521:systemview/SEGGER_RTT.c ****   return v - pRing->RdOff;
 2403              		.loc 1 1521 3 is_stmt 1 view .LVU724
 2404              		.loc 1 1521 19 is_stmt 0 view .LVU725
 2405 000c 00EB4000 		add	r0, r0, r0, lsl #1
 2406              	.LVL256:
 2407              		.loc 1 1521 19 view .LVU726
 2408 0010 03EBC000 		add	r0, r3, r0, lsl #3
 2409 0014 006F     		ldr	r0, [r0, #112]
1522:systemview/SEGGER_RTT.c **** }
 2410              		.loc 1 1522 1 view .LVU727
 2411 0016 101A     		subs	r0, r2, r0
 2412 0018 7047     		bx	lr
 2413              	.L155:
 2414 001a 00BF     		.align	2
 2415              	.L154:
 2416 001c 00000000 		.word	.LANCHOR1
 2417              		.cfi_endproc
 2418              	.LFE21:
 2420              		.section	.text.SEGGER_RTT_HasDataUp,"ax",%progbits
 2421              		.align	1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 75


 2422              		.global	SEGGER_RTT_HasDataUp
 2423              		.syntax unified
 2424              		.thumb
 2425              		.thumb_func
 2427              	SEGGER_RTT_HasDataUp:
 2428              	.LVL257:
 2429              	.LFB22:
1523:systemview/SEGGER_RTT.c **** 
1524:systemview/SEGGER_RTT.c **** /*********************************************************************
1525:systemview/SEGGER_RTT.c **** *
1526:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1527:systemview/SEGGER_RTT.c **** *
1528:systemview/SEGGER_RTT.c **** *  Function description
1529:systemview/SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1530:systemview/SEGGER_RTT.c **** *
1531:systemview/SEGGER_RTT.c **** *  Return value:
1532:systemview/SEGGER_RTT.c **** *  ==0:  No data
1533:systemview/SEGGER_RTT.c **** *  !=0:  Data in buffer
1534:systemview/SEGGER_RTT.c **** *
1535:systemview/SEGGER_RTT.c **** */
1536:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 2430              		.loc 1 1536 53 is_stmt 1 view -0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
1537:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2435              		.loc 1 1537 3 view .LVU729
1538:systemview/SEGGER_RTT.c ****   unsigned                v;
 2436              		.loc 1 1538 3 view .LVU730
1539:systemview/SEGGER_RTT.c **** 
1540:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 2437              		.loc 1 1540 3 view .LVU731
1541:systemview/SEGGER_RTT.c ****   v = pRing->RdOff;
 2438              		.loc 1 1541 3 view .LVU732
 2439              		.loc 1 1541 5 is_stmt 0 view .LVU733
 2440 0000 064B     		ldr	r3, .L157
 2441 0002 00EB4002 		add	r2, r0, r0, lsl #1
 2442 0006 03EBC202 		add	r2, r3, r2, lsl #3
 2443 000a 926A     		ldr	r2, [r2, #40]
 2444              	.LVL258:
1542:systemview/SEGGER_RTT.c ****   return pRing->WrOff - v;
 2445              		.loc 1 1542 3 is_stmt 1 view .LVU734
 2446              		.loc 1 1542 15 is_stmt 0 view .LVU735
 2447 000c 00EB4000 		add	r0, r0, r0, lsl #1
 2448              	.LVL259:
 2449              		.loc 1 1542 15 view .LVU736
 2450 0010 03EBC000 		add	r0, r3, r0, lsl #3
 2451 0014 406A     		ldr	r0, [r0, #36]
1543:systemview/SEGGER_RTT.c **** }
 2452              		.loc 1 1543 1 view .LVU737
 2453 0016 801A     		subs	r0, r0, r2
 2454 0018 7047     		bx	lr
 2455              	.L158:
 2456 001a 00BF     		.align	2
 2457              	.L157:
 2458 001c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 76


 2459              		.cfi_endproc
 2460              	.LFE22:
 2462              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 2463              		.align	1
 2464              		.global	SEGGER_RTT_AllocDownBuffer
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2469              	SEGGER_RTT_AllocDownBuffer:
 2470              	.LVL260:
 2471              	.LFB23:
1544:systemview/SEGGER_RTT.c **** 
1545:systemview/SEGGER_RTT.c **** /*********************************************************************
1546:systemview/SEGGER_RTT.c **** *
1547:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1548:systemview/SEGGER_RTT.c **** *
1549:systemview/SEGGER_RTT.c **** *  Function description
1550:systemview/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1551:systemview/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1552:systemview/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1553:systemview/SEGGER_RTT.c **** *
1554:systemview/SEGGER_RTT.c **** *  Parameters
1555:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1556:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1557:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1558:systemview/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1559:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1560:systemview/SEGGER_RTT.c **** *
1561:systemview/SEGGER_RTT.c **** *  Return value
1562:systemview/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1563:systemview/SEGGER_RTT.c **** *     < 0 - Error
1564:systemview/SEGGER_RTT.c **** */
1565:systemview/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 2472              		.loc 1 1565 103 is_stmt 1 view -0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              		.loc 1 1565 103 is_stmt 0 view .LVU739
 2477 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2478              	.LCFI27:
 2479              		.cfi_def_cfa_offset 24
 2480              		.cfi_offset 4, -24
 2481              		.cfi_offset 5, -20
 2482              		.cfi_offset 6, -16
 2483              		.cfi_offset 7, -12
 2484              		.cfi_offset 8, -8
 2485              		.cfi_offset 14, -4
 2486 0004 8046     		mov	r8, r0
 2487 0006 0F46     		mov	r7, r1
 2488 0008 1646     		mov	r6, r2
 2489 000a 1D46     		mov	r5, r3
1566:systemview/SEGGER_RTT.c ****   int BufferIndex;
 2490              		.loc 1 1566 3 is_stmt 1 view .LVU740
1567:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2491              		.loc 1 1567 3 view .LVU741
1568:systemview/SEGGER_RTT.c **** 
1569:systemview/SEGGER_RTT.c ****   INIT();
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 77


 2492              		.loc 1 1569 3 view .LVU742
 2493              	.LBB24:
 2494              		.loc 1 1569 3 view .LVU743
 2495              		.loc 1 1569 3 view .LVU744
 2496              	.LVL261:
 2497              		.loc 1 1569 3 view .LVU745
 2498 000c 194B     		ldr	r3, .L167
 2499              	.LVL262:
 2500              		.loc 1 1569 3 is_stmt 0 view .LVU746
 2501 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2502 0010 DBB2     		uxtb	r3, r3
 2503 0012 532B     		cmp	r3, #83
 2504 0014 27D1     		bne	.L166
 2505              	.LVL263:
 2506              	.L160:
 2507              		.loc 1 1569 3 view .LVU747
 2508              	.LBE24:
 2509              		.loc 1 1569 3 is_stmt 1 discriminator 3 view .LVU748
 2510              	.LBB25:
1570:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2511              		.loc 1 1570 3 discriminator 3 view .LVU749
 2512              		.loc 1 1570 3 discriminator 3 view .LVU750
 2513              		.syntax unified
 2514              	@ 1570 "systemview/SEGGER_RTT.c" 1
 2515 0016 EFF31182 		mrs   r2, basepri  
 2516 001a 4FF02001 		mov   r1, #32       
 2517 001e 81F31188 		msr   basepri, r1  
 2518              		
 2519              	@ 0 "" 2
 2520              	.LVL264:
 2521              		.loc 1 1570 20 discriminator 3 view .LVU751
1571:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2522              		.loc 1 1571 3 discriminator 3 view .LVU752
1572:systemview/SEGGER_RTT.c ****   BufferIndex = 0;
 2523              		.loc 1 1572 3 discriminator 3 view .LVU753
 2524              		.loc 1 1572 15 is_stmt 0 discriminator 3 view .LVU754
 2525              		.thumb
 2526              		.syntax unified
 2527 0022 0020     		movs	r0, #0
 2528              	.LVL265:
 2529              	.L162:
1573:systemview/SEGGER_RTT.c ****   do {
 2530              		.loc 1 1573 3 is_stmt 1 view .LVU755
1574:systemview/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 2531              		.loc 1 1574 5 view .LVU756
 2532              		.loc 1 1574 35 is_stmt 0 view .LVU757
 2533 0024 00EB400C 		add	ip, r0, r0, lsl #1
 2534 0028 124C     		ldr	r4, .L167
 2535 002a 04EBCC0C 		add	ip, r4, ip, lsl #3
 2536 002e DCF86430 		ldr	r3, [ip, #100]
 2537              		.loc 1 1574 8 view .LVU758
 2538 0032 1BB1     		cbz	r3, .L161
1575:systemview/SEGGER_RTT.c ****       break;
1576:systemview/SEGGER_RTT.c ****     }
1577:systemview/SEGGER_RTT.c ****     BufferIndex++;
 2539              		.loc 1 1577 5 is_stmt 1 view .LVU759
 2540              		.loc 1 1577 16 is_stmt 0 view .LVU760
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 78


 2541 0034 0130     		adds	r0, r0, #1
 2542              	.LVL266:
1578:systemview/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 2543              		.loc 1 1578 11 is_stmt 1 view .LVU761
 2544              		.loc 1 1578 32 is_stmt 0 view .LVU762
 2545 0036 6369     		ldr	r3, [r4, #20]
 2546              		.loc 1 1578 3 view .LVU763
 2547 0038 8342     		cmp	r3, r0
 2548 003a F3DC     		bgt	.L162
 2549              	.L161:
1579:systemview/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumDownBuffers) {
 2550              		.loc 1 1579 3 is_stmt 1 view .LVU764
 2551              		.loc 1 1579 27 is_stmt 0 view .LVU765
 2552 003c 0D4B     		ldr	r3, .L167
 2553 003e 5B69     		ldr	r3, [r3, #20]
 2554              		.loc 1 1579 6 view .LVU766
 2555 0040 8342     		cmp	r3, r0
 2556 0042 13DD     		ble	.L164
1580:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 2557              		.loc 1 1580 5 is_stmt 1 view .LVU767
 2558              		.loc 1 1580 45 is_stmt 0 view .LVU768
 2559 0044 00EB4003 		add	r3, r0, r0, lsl #1
 2560 0048 0A49     		ldr	r1, .L167
 2561 004a 01EBC303 		add	r3, r1, r3, lsl #3
 2562 004e C3F86080 		str	r8, [r3, #96]
1581:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2563              		.loc 1 1581 5 is_stmt 1 view .LVU769
 2564              		.loc 1 1581 45 is_stmt 0 view .LVU770
 2565 0052 5F66     		str	r7, [r3, #100]
1582:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2566              		.loc 1 1582 5 is_stmt 1 view .LVU771
 2567              		.loc 1 1582 45 is_stmt 0 view .LVU772
 2568 0054 9E66     		str	r6, [r3, #104]
1583:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 2569              		.loc 1 1583 5 is_stmt 1 view .LVU773
 2570              		.loc 1 1583 45 is_stmt 0 view .LVU774
 2571 0056 0021     		movs	r1, #0
 2572 0058 1967     		str	r1, [r3, #112]
1584:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].WrOff        = 0u;
 2573              		.loc 1 1584 5 is_stmt 1 view .LVU775
 2574              		.loc 1 1584 45 is_stmt 0 view .LVU776
 2575 005a D966     		str	r1, [r3, #108]
1585:systemview/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].Flags        = Flags;
 2576              		.loc 1 1585 5 is_stmt 1 view .LVU777
 2577              		.loc 1 1585 45 is_stmt 0 view .LVU778
 2578 005c 5D67     		str	r5, [r3, #116]
1586:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2579              		.loc 1 1586 15 is_stmt 1 view .LVU779
 2580              	.LVL267:
 2581              	.L163:
1587:systemview/SEGGER_RTT.c ****   } else {
1588:systemview/SEGGER_RTT.c ****     BufferIndex = -1;
1589:systemview/SEGGER_RTT.c ****   }
1590:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2582              		.loc 1 1590 3 view .LVU780
 2583              		.syntax unified
 2584              	@ 1590 "systemview/SEGGER_RTT.c" 1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 79


 2585 005e 82F31188 		msr   basepri, r2  
 2586              		
 2587              	@ 0 "" 2
 2588              		.thumb
 2589              		.syntax unified
 2590              	.LBE25:
 2591              		.loc 1 1590 22 view .LVU781
1591:systemview/SEGGER_RTT.c ****   return BufferIndex;
 2592              		.loc 1 1591 3 view .LVU782
1592:systemview/SEGGER_RTT.c **** }
 2593              		.loc 1 1592 1 is_stmt 0 view .LVU783
 2594 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2595              	.LVL268:
 2596              	.L166:
 2597              	.LBB26:
1569:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2598              		.loc 1 1569 3 is_stmt 1 discriminator 1 view .LVU784
 2599 0066 FFF7FEFF 		bl	_DoInit
 2600              	.LVL269:
1569:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2601              		.loc 1 1569 3 is_stmt 0 discriminator 1 view .LVU785
 2602 006a D4E7     		b	.L160
 2603              	.LVL270:
 2604              	.L164:
1569:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2605              		.loc 1 1569 3 discriminator 1 view .LVU786
 2606              	.LBE26:
 2607              	.LBB27:
1588:systemview/SEGGER_RTT.c ****   }
 2608              		.loc 1 1588 17 view .LVU787
 2609 006c 4FF0FF30 		mov	r0, #-1
 2610              	.LVL271:
1588:systemview/SEGGER_RTT.c ****   }
 2611              		.loc 1 1588 17 view .LVU788
 2612 0070 F5E7     		b	.L163
 2613              	.L168:
 2614 0072 00BF     		.align	2
 2615              	.L167:
 2616 0074 00000000 		.word	.LANCHOR1
 2617              	.LBE27:
 2618              		.cfi_endproc
 2619              	.LFE23:
 2621              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 2622              		.align	1
 2623              		.global	SEGGER_RTT_AllocUpBuffer
 2624              		.syntax unified
 2625              		.thumb
 2626              		.thumb_func
 2628              	SEGGER_RTT_AllocUpBuffer:
 2629              	.LVL272:
 2630              	.LFB24:
1593:systemview/SEGGER_RTT.c **** 
1594:systemview/SEGGER_RTT.c **** /*********************************************************************
1595:systemview/SEGGER_RTT.c **** *
1596:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1597:systemview/SEGGER_RTT.c **** *
1598:systemview/SEGGER_RTT.c **** *  Function description
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 80


1599:systemview/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1600:systemview/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1601:systemview/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1602:systemview/SEGGER_RTT.c **** *
1603:systemview/SEGGER_RTT.c **** *  Parameters
1604:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1605:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1606:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1607:systemview/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1608:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1609:systemview/SEGGER_RTT.c **** *
1610:systemview/SEGGER_RTT.c **** *  Return value
1611:systemview/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1612:systemview/SEGGER_RTT.c **** *     < 0 - Error
1613:systemview/SEGGER_RTT.c **** */
1614:systemview/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 2631              		.loc 1 1614 101 is_stmt 1 view -0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 0
 2634              		@ frame_needed = 0, uses_anonymous_args = 0
 2635              		.loc 1 1614 101 is_stmt 0 view .LVU790
 2636 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2637              	.LCFI28:
 2638              		.cfi_def_cfa_offset 24
 2639              		.cfi_offset 3, -24
 2640              		.cfi_offset 4, -20
 2641              		.cfi_offset 5, -16
 2642              		.cfi_offset 6, -12
 2643              		.cfi_offset 7, -8
 2644              		.cfi_offset 14, -4
 2645 0002 0746     		mov	r7, r0
 2646 0004 0E46     		mov	r6, r1
 2647 0006 1546     		mov	r5, r2
 2648 0008 1C46     		mov	r4, r3
1615:systemview/SEGGER_RTT.c ****   int BufferIndex;
 2649              		.loc 1 1615 3 is_stmt 1 view .LVU791
1616:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2650              		.loc 1 1616 3 view .LVU792
1617:systemview/SEGGER_RTT.c **** 
1618:systemview/SEGGER_RTT.c ****   INIT();
 2651              		.loc 1 1618 3 view .LVU793
 2652              	.LBB28:
 2653              		.loc 1 1618 3 view .LVU794
 2654              		.loc 1 1618 3 view .LVU795
 2655              	.LVL273:
 2656              		.loc 1 1618 3 view .LVU796
 2657 000a 1F4B     		ldr	r3, .L177
 2658              	.LVL274:
 2659              		.loc 1 1618 3 is_stmt 0 view .LVU797
 2660 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2661 000e DBB2     		uxtb	r3, r3
 2662 0010 532B     		cmp	r3, #83
 2663 0012 32D1     		bne	.L176
 2664              	.LVL275:
 2665              	.L170:
 2666              		.loc 1 1618 3 view .LVU798
 2667              	.LBE28:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 81


 2668              		.loc 1 1618 3 is_stmt 1 discriminator 3 view .LVU799
 2669              	.LBB29:
1619:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2670              		.loc 1 1619 3 discriminator 3 view .LVU800
 2671              		.loc 1 1619 3 discriminator 3 view .LVU801
 2672              		.syntax unified
 2673              	@ 1619 "systemview/SEGGER_RTT.c" 1
 2674 0014 EFF31182 		mrs   r2, basepri  
 2675 0018 4FF02001 		mov   r1, #32       
 2676 001c 81F31188 		msr   basepri, r1  
 2677              		
 2678              	@ 0 "" 2
 2679              	.LVL276:
 2680              		.loc 1 1619 20 discriminator 3 view .LVU802
1620:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2681              		.loc 1 1620 3 discriminator 3 view .LVU803
1621:systemview/SEGGER_RTT.c ****   BufferIndex = 0;
 2682              		.loc 1 1621 3 discriminator 3 view .LVU804
 2683              		.loc 1 1621 15 is_stmt 0 discriminator 3 view .LVU805
 2684              		.thumb
 2685              		.syntax unified
 2686 0020 0020     		movs	r0, #0
 2687              	.LVL277:
 2688              	.L172:
1622:systemview/SEGGER_RTT.c ****   do {
 2689              		.loc 1 1622 3 is_stmt 1 view .LVU806
1623:systemview/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 2690              		.loc 1 1623 5 view .LVU807
 2691              		.loc 1 1623 33 is_stmt 0 view .LVU808
 2692 0022 00F1010C 		add	ip, r0, #1
 2693 0026 0CEB4C0C 		add	ip, ip, ip, lsl #1
 2694 002a 174B     		ldr	r3, .L177
 2695 002c 03EBCC0C 		add	ip, r3, ip, lsl #3
 2696 0030 DCF80430 		ldr	r3, [ip, #4]
 2697              		.loc 1 1623 8 view .LVU809
 2698 0034 23B1     		cbz	r3, .L171
1624:systemview/SEGGER_RTT.c ****       break;
1625:systemview/SEGGER_RTT.c ****     }
1626:systemview/SEGGER_RTT.c ****     BufferIndex++;
 2699              		.loc 1 1626 5 is_stmt 1 view .LVU810
 2700              		.loc 1 1626 16 is_stmt 0 view .LVU811
 2701 0036 0130     		adds	r0, r0, #1
 2702              	.LVL278:
1627:systemview/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 2703              		.loc 1 1627 11 is_stmt 1 view .LVU812
 2704              		.loc 1 1627 32 is_stmt 0 view .LVU813
 2705 0038 134B     		ldr	r3, .L177
 2706 003a 1B69     		ldr	r3, [r3, #16]
 2707              		.loc 1 1627 3 view .LVU814
 2708 003c 8342     		cmp	r3, r0
 2709 003e F0DC     		bgt	.L172
 2710              	.L171:
1628:systemview/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumUpBuffers) {
 2711              		.loc 1 1628 3 is_stmt 1 view .LVU815
 2712              		.loc 1 1628 27 is_stmt 0 view .LVU816
 2713 0040 114B     		ldr	r3, .L177
 2714 0042 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 82


 2715              		.loc 1 1628 6 view .LVU817
 2716 0044 8342     		cmp	r3, r0
 2717 0046 1BDD     		ble	.L174
1629:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 2718              		.loc 1 1629 5 is_stmt 1 view .LVU818
 2719              		.loc 1 1629 43 is_stmt 0 view .LVU819
 2720 0048 0F4B     		ldr	r3, .L177
 2721 004a 411C     		adds	r1, r0, #1
 2722 004c 01EB410C 		add	ip, r1, r1, lsl #1
 2723 0050 4FEACC0C 		lsl	ip, ip, #3
 2724 0054 43F80C70 		str	r7, [r3, ip]
1630:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2725              		.loc 1 1630 5 is_stmt 1 view .LVU820
 2726              		.loc 1 1630 43 is_stmt 0 view .LVU821
 2727 0058 01EB4101 		add	r1, r1, r1, lsl #1
 2728 005c 03EBC101 		add	r1, r3, r1, lsl #3
 2729 0060 4E60     		str	r6, [r1, #4]
1631:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2730              		.loc 1 1631 5 is_stmt 1 view .LVU822
 2731              		.loc 1 1631 43 is_stmt 0 view .LVU823
 2732 0062 00EB4001 		add	r1, r0, r0, lsl #1
 2733 0066 03EBC103 		add	r3, r3, r1, lsl #3
 2734 006a 1D62     		str	r5, [r3, #32]
1632:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 2735              		.loc 1 1632 5 is_stmt 1 view .LVU824
 2736              		.loc 1 1632 43 is_stmt 0 view .LVU825
 2737 006c 0021     		movs	r1, #0
 2738 006e 9962     		str	r1, [r3, #40]
1633:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].WrOff        = 0u;
 2739              		.loc 1 1633 5 is_stmt 1 view .LVU826
 2740              		.loc 1 1633 43 is_stmt 0 view .LVU827
 2741 0070 5962     		str	r1, [r3, #36]
1634:systemview/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].Flags        = Flags;
 2742              		.loc 1 1634 5 is_stmt 1 view .LVU828
 2743              		.loc 1 1634 43 is_stmt 0 view .LVU829
 2744 0072 DC62     		str	r4, [r3, #44]
1635:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2745              		.loc 1 1635 15 is_stmt 1 view .LVU830
 2746              	.LVL279:
 2747              	.L173:
1636:systemview/SEGGER_RTT.c ****   } else {
1637:systemview/SEGGER_RTT.c ****     BufferIndex = -1;
1638:systemview/SEGGER_RTT.c ****   }
1639:systemview/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2748              		.loc 1 1639 3 view .LVU831
 2749              		.syntax unified
 2750              	@ 1639 "systemview/SEGGER_RTT.c" 1
 2751 0074 82F31188 		msr   basepri, r2  
 2752              		
 2753              	@ 0 "" 2
 2754              		.thumb
 2755              		.syntax unified
 2756              	.LBE29:
 2757              		.loc 1 1639 22 view .LVU832
1640:systemview/SEGGER_RTT.c ****   return BufferIndex;
 2758              		.loc 1 1640 3 view .LVU833
1641:systemview/SEGGER_RTT.c **** }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 83


 2759              		.loc 1 1641 1 is_stmt 0 view .LVU834
 2760 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2761              	.LVL280:
 2762              	.L176:
 2763              	.LBB30:
1618:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2764              		.loc 1 1618 3 is_stmt 1 discriminator 1 view .LVU835
 2765 007a FFF7FEFF 		bl	_DoInit
 2766              	.LVL281:
1618:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2767              		.loc 1 1618 3 is_stmt 0 discriminator 1 view .LVU836
 2768 007e C9E7     		b	.L170
 2769              	.LVL282:
 2770              	.L174:
1618:systemview/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2771              		.loc 1 1618 3 discriminator 1 view .LVU837
 2772              	.LBE30:
 2773              	.LBB31:
1637:systemview/SEGGER_RTT.c ****   }
 2774              		.loc 1 1637 17 view .LVU838
 2775 0080 4FF0FF30 		mov	r0, #-1
 2776              	.LVL283:
1637:systemview/SEGGER_RTT.c ****   }
 2777              		.loc 1 1637 17 view .LVU839
 2778 0084 F6E7     		b	.L173
 2779              	.L178:
 2780 0086 00BF     		.align	2
 2781              	.L177:
 2782 0088 00000000 		.word	.LANCHOR1
 2783              	.LBE31:
 2784              		.cfi_endproc
 2785              	.LFE24:
 2787              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 2788              		.align	1
 2789              		.global	SEGGER_RTT_ConfigUpBuffer
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2794              	SEGGER_RTT_ConfigUpBuffer:
 2795              	.LVL284:
 2796              	.LFB25:
1642:systemview/SEGGER_RTT.c **** 
1643:systemview/SEGGER_RTT.c **** /*********************************************************************
1644:systemview/SEGGER_RTT.c **** *
1645:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1646:systemview/SEGGER_RTT.c **** *
1647:systemview/SEGGER_RTT.c **** *  Function description
1648:systemview/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1649:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1650:systemview/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1651:systemview/SEGGER_RTT.c **** *
1652:systemview/SEGGER_RTT.c **** *  Parameters
1653:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1654:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1655:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1656:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1657:systemview/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 84


1658:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1659:systemview/SEGGER_RTT.c **** *
1660:systemview/SEGGER_RTT.c **** *  Return value
1661:systemview/SEGGER_RTT.c **** *    >= 0 - O.K.
1662:systemview/SEGGER_RTT.c **** *     < 0 - Error
1663:systemview/SEGGER_RTT.c **** *
1664:systemview/SEGGER_RTT.c **** *  Additional information
1665:systemview/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1666:systemview/SEGGER_RTT.c **** *    May only be called once per buffer.
1667:systemview/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1668:systemview/SEGGER_RTT.c **** */
1669:systemview/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2797              		.loc 1 1669 124 is_stmt 1 view -0
 2798              		.cfi_startproc
 2799              		@ args = 4, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801              		.loc 1 1669 124 is_stmt 0 view .LVU841
 2802 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2803              	.LCFI29:
 2804              		.cfi_def_cfa_offset 24
 2805              		.cfi_offset 3, -24
 2806              		.cfi_offset 4, -20
 2807              		.cfi_offset 5, -16
 2808              		.cfi_offset 6, -12
 2809              		.cfi_offset 7, -8
 2810              		.cfi_offset 14, -4
 2811 0002 0446     		mov	r4, r0
 2812 0004 0F46     		mov	r7, r1
 2813 0006 1646     		mov	r6, r2
 2814 0008 1D46     		mov	r5, r3
1670:systemview/SEGGER_RTT.c ****   int r;
 2815              		.loc 1 1670 3 is_stmt 1 view .LVU842
1671:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2816              		.loc 1 1671 3 view .LVU843
1672:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 2817              		.loc 1 1672 3 view .LVU844
1673:systemview/SEGGER_RTT.c **** 
1674:systemview/SEGGER_RTT.c ****   INIT();
 2818              		.loc 1 1674 3 view .LVU845
 2819              	.LBB32:
 2820              		.loc 1 1674 3 view .LVU846
 2821              		.loc 1 1674 3 view .LVU847
 2822              	.LVL285:
 2823              		.loc 1 1674 3 view .LVU848
 2824 000a 194B     		ldr	r3, .L186
 2825              	.LVL286:
 2826              		.loc 1 1674 3 is_stmt 0 view .LVU849
 2827 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2828              	.LVL287:
 2829              		.loc 1 1674 3 view .LVU850
 2830 000e C0B2     		uxtb	r0, r0
 2831 0010 5328     		cmp	r0, #83
 2832 0012 26D1     		bne	.L185
 2833              	.LVL288:
 2834              	.L180:
 2835              		.loc 1 1674 3 view .LVU851
 2836              	.LBE32:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 85


 2837              		.loc 1 1674 3 is_stmt 1 discriminator 3 view .LVU852
1675:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2838              		.loc 1 1675 3 discriminator 3 view .LVU853
1676:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 2839              		.loc 1 1676 3 discriminator 3 view .LVU854
 2840              		.loc 1 1676 6 is_stmt 0 discriminator 3 view .LVU855
 2841 0014 022C     		cmp	r4, #2
 2842 0016 27D8     		bhi	.L183
 2843              	.LBB33:
1677:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2844              		.loc 1 1677 5 is_stmt 1 view .LVU856
 2845              		.loc 1 1677 5 view .LVU857
 2846              		.syntax unified
 2847              	@ 1677 "systemview/SEGGER_RTT.c" 1
 2848 0018 EFF31183 		mrs   r3, basepri  
 2849 001c 4FF02001 		mov   r1, #32       
 2850 0020 81F31188 		msr   basepri, r1  
 2851              		
 2852              	@ 0 "" 2
 2853              	.LVL289:
 2854              		.loc 1 1677 22 view .LVU858
1678:systemview/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 2855              		.loc 1 1678 5 view .LVU859
1679:systemview/SEGGER_RTT.c ****     if (BufferIndex) {
 2856              		.loc 1 1679 5 view .LVU860
 2857              		.loc 1 1679 8 is_stmt 0 view .LVU861
 2858              		.thumb
 2859              		.syntax unified
 2860 0024 94B1     		cbz	r4, .L182
1680:systemview/SEGGER_RTT.c ****       pUp->sName        = sName;
 2861              		.loc 1 1680 7 is_stmt 1 view .LVU862
 2862              		.loc 1 1680 25 is_stmt 0 view .LVU863
 2863 0026 124A     		ldr	r2, .L186
 2864 0028 601C     		adds	r0, r4, #1
 2865 002a 00EB4001 		add	r1, r0, r0, lsl #1
 2866 002e C900     		lsls	r1, r1, #3
 2867 0030 5750     		str	r7, [r2, r1]
1681:systemview/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 2868              		.loc 1 1681 7 is_stmt 1 view .LVU864
 2869              		.loc 1 1681 25 is_stmt 0 view .LVU865
 2870 0032 00EB4000 		add	r0, r0, r0, lsl #1
 2871 0036 02EBC000 		add	r0, r2, r0, lsl #3
 2872 003a 4660     		str	r6, [r0, #4]
1682:systemview/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 2873              		.loc 1 1682 7 is_stmt 1 view .LVU866
 2874              		.loc 1 1682 25 is_stmt 0 view .LVU867
 2875 003c 04EB4401 		add	r1, r4, r4, lsl #1
 2876 0040 02EBC102 		add	r2, r2, r1, lsl #3
 2877 0044 1562     		str	r5, [r2, #32]
1683:systemview/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 2878              		.loc 1 1683 7 is_stmt 1 view .LVU868
 2879              		.loc 1 1683 25 is_stmt 0 view .LVU869
 2880 0046 0021     		movs	r1, #0
 2881 0048 9162     		str	r1, [r2, #40]
1684:systemview/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 2882              		.loc 1 1684 7 is_stmt 1 view .LVU870
 2883              		.loc 1 1684 25 is_stmt 0 view .LVU871
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 86


 2884 004a 5162     		str	r1, [r2, #36]
 2885              	.L182:
1685:systemview/SEGGER_RTT.c ****     }
1686:systemview/SEGGER_RTT.c ****     pUp->Flags          = Flags;
 2886              		.loc 1 1686 5 is_stmt 1 view .LVU872
 2887              		.loc 1 1686 25 is_stmt 0 view .LVU873
 2888 004c 04EB4404 		add	r4, r4, r4, lsl #1
 2889              	.LVL290:
 2890              		.loc 1 1686 25 view .LVU874
 2891 0050 0748     		ldr	r0, .L186
 2892 0052 00EBC404 		add	r4, r0, r4, lsl #3
 2893 0056 069A     		ldr	r2, [sp, #24]
 2894 0058 E262     		str	r2, [r4, #44]
1687:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2895              		.loc 1 1687 5 is_stmt 1 view .LVU875
 2896              		.syntax unified
 2897              	@ 1687 "systemview/SEGGER_RTT.c" 1
 2898 005a 83F31188 		msr   basepri, r3  
 2899              		
 2900              	@ 0 "" 2
 2901              		.thumb
 2902              		.syntax unified
 2903              	.LBE33:
 2904              		.loc 1 1687 24 view .LVU876
1688:systemview/SEGGER_RTT.c ****     r =  0;
 2905              		.loc 1 1688 5 view .LVU877
 2906              	.LVL291:
 2907              		.loc 1 1688 7 is_stmt 0 view .LVU878
 2908 005e 0020     		movs	r0, #0
 2909              	.LVL292:
 2910              	.L179:
1689:systemview/SEGGER_RTT.c ****   } else {
1690:systemview/SEGGER_RTT.c ****     r = -1;
1691:systemview/SEGGER_RTT.c ****   }
1692:systemview/SEGGER_RTT.c ****   return r;
1693:systemview/SEGGER_RTT.c **** }
 2911              		.loc 1 1693 1 view .LVU879
 2912 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2913              	.LVL293:
 2914              	.L185:
 2915              	.LBB34:
1674:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2916              		.loc 1 1674 3 is_stmt 1 discriminator 1 view .LVU880
 2917 0062 FFF7FEFF 		bl	_DoInit
 2918              	.LVL294:
1674:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2919              		.loc 1 1674 3 is_stmt 0 discriminator 1 view .LVU881
 2920 0066 D5E7     		b	.L180
 2921              	.LVL295:
 2922              	.L183:
1674:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2923              		.loc 1 1674 3 discriminator 1 view .LVU882
 2924              	.LBE34:
1690:systemview/SEGGER_RTT.c ****   }
 2925              		.loc 1 1690 7 view .LVU883
 2926 0068 4FF0FF30 		mov	r0, #-1
 2927              	.LVL296:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 87


1692:systemview/SEGGER_RTT.c **** }
 2928              		.loc 1 1692 3 is_stmt 1 view .LVU884
1692:systemview/SEGGER_RTT.c **** }
 2929              		.loc 1 1692 10 is_stmt 0 view .LVU885
 2930 006c F8E7     		b	.L179
 2931              	.L187:
 2932 006e 00BF     		.align	2
 2933              	.L186:
 2934 0070 00000000 		.word	.LANCHOR1
 2935              		.cfi_endproc
 2936              	.LFE25:
 2938              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 2939              		.align	1
 2940              		.global	SEGGER_RTT_ConfigDownBuffer
 2941              		.syntax unified
 2942              		.thumb
 2943              		.thumb_func
 2945              	SEGGER_RTT_ConfigDownBuffer:
 2946              	.LVL297:
 2947              	.LFB26:
1694:systemview/SEGGER_RTT.c **** 
1695:systemview/SEGGER_RTT.c **** /*********************************************************************
1696:systemview/SEGGER_RTT.c **** *
1697:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1698:systemview/SEGGER_RTT.c **** *
1699:systemview/SEGGER_RTT.c **** *  Function description
1700:systemview/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1701:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1702:systemview/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1703:systemview/SEGGER_RTT.c **** *
1704:systemview/SEGGER_RTT.c **** *  Parameters
1705:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1706:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1707:systemview/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1708:systemview/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1709:systemview/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1710:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1711:systemview/SEGGER_RTT.c **** *
1712:systemview/SEGGER_RTT.c **** *  Return value
1713:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1714:systemview/SEGGER_RTT.c **** *     < 0  Error
1715:systemview/SEGGER_RTT.c **** *
1716:systemview/SEGGER_RTT.c **** *  Additional information
1717:systemview/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1718:systemview/SEGGER_RTT.c **** *    May only be called once per buffer.
1719:systemview/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1720:systemview/SEGGER_RTT.c **** */
1721:systemview/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 2948              		.loc 1 1721 126 is_stmt 1 view -0
 2949              		.cfi_startproc
 2950              		@ args = 4, pretend = 0, frame = 0
 2951              		@ frame_needed = 0, uses_anonymous_args = 0
 2952              		.loc 1 1721 126 is_stmt 0 view .LVU887
 2953 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2954              	.LCFI30:
 2955              		.cfi_def_cfa_offset 24
 2956              		.cfi_offset 4, -24
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 88


 2957              		.cfi_offset 5, -20
 2958              		.cfi_offset 6, -16
 2959              		.cfi_offset 7, -12
 2960              		.cfi_offset 8, -8
 2961              		.cfi_offset 14, -4
 2962 0004 0446     		mov	r4, r0
 2963 0006 8846     		mov	r8, r1
 2964 0008 1746     		mov	r7, r2
 2965 000a 1E46     		mov	r6, r3
1722:systemview/SEGGER_RTT.c ****   int r;
 2966              		.loc 1 1722 3 is_stmt 1 view .LVU888
1723:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2967              		.loc 1 1723 3 view .LVU889
1724:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 2968              		.loc 1 1724 3 view .LVU890
1725:systemview/SEGGER_RTT.c **** 
1726:systemview/SEGGER_RTT.c ****   INIT();
 2969              		.loc 1 1726 3 view .LVU891
 2970              	.LBB35:
 2971              		.loc 1 1726 3 view .LVU892
 2972              		.loc 1 1726 3 view .LVU893
 2973              	.LVL298:
 2974              		.loc 1 1726 3 view .LVU894
 2975 000c 154B     		ldr	r3, .L195
 2976              	.LVL299:
 2977              		.loc 1 1726 3 is_stmt 0 view .LVU895
 2978 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2979              	.LVL300:
 2980              		.loc 1 1726 3 view .LVU896
 2981 0010 C0B2     		uxtb	r0, r0
 2982 0012 5328     		cmp	r0, #83
 2983 0014 20D1     		bne	.L194
 2984              	.LVL301:
 2985              	.L189:
 2986              		.loc 1 1726 3 view .LVU897
 2987              	.LBE35:
 2988              		.loc 1 1726 3 is_stmt 1 discriminator 3 view .LVU898
1727:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 2989              		.loc 1 1727 3 discriminator 3 view .LVU899
1728:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 2990              		.loc 1 1728 3 discriminator 3 view .LVU900
 2991              		.loc 1 1728 6 is_stmt 0 discriminator 3 view .LVU901
 2992 0016 022C     		cmp	r4, #2
 2993 0018 21D8     		bhi	.L192
 2994              	.LBB36:
1729:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2995              		.loc 1 1729 5 is_stmt 1 view .LVU902
 2996              		.loc 1 1729 5 view .LVU903
 2997              		.syntax unified
 2998              	@ 1729 "systemview/SEGGER_RTT.c" 1
 2999 001a EFF31183 		mrs   r3, basepri  
 3000 001e 4FF02001 		mov   r1, #32       
 3001 0022 81F31188 		msr   basepri, r1  
 3002              		
 3003              	@ 0 "" 2
 3004              	.LVL302:
 3005              		.loc 1 1729 22 view .LVU904
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 89


1730:systemview/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3006              		.loc 1 1730 5 view .LVU905
1731:systemview/SEGGER_RTT.c ****     if (BufferIndex) {
 3007              		.loc 1 1731 5 view .LVU906
 3008              		.loc 1 1731 8 is_stmt 0 view .LVU907
 3009              		.thumb
 3010              		.syntax unified
 3011 0026 5CB1     		cbz	r4, .L191
1732:systemview/SEGGER_RTT.c ****       pDown->sName        = sName;
 3012              		.loc 1 1732 7 is_stmt 1 view .LVU908
 3013              		.loc 1 1732 27 is_stmt 0 view .LVU909
 3014 0028 04EB4400 		add	r0, r4, r4, lsl #1
 3015 002c 0D4D     		ldr	r5, .L195
 3016 002e 05EBC000 		add	r0, r5, r0, lsl #3
 3017 0032 C0F86080 		str	r8, [r0, #96]
1733:systemview/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 3018              		.loc 1 1733 7 is_stmt 1 view .LVU910
 3019              		.loc 1 1733 27 is_stmt 0 view .LVU911
 3020 0036 4766     		str	r7, [r0, #100]
1734:systemview/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 3021              		.loc 1 1734 7 is_stmt 1 view .LVU912
 3022              		.loc 1 1734 27 is_stmt 0 view .LVU913
 3023 0038 8666     		str	r6, [r0, #104]
1735:systemview/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 3024              		.loc 1 1735 7 is_stmt 1 view .LVU914
 3025              		.loc 1 1735 27 is_stmt 0 view .LVU915
 3026 003a 0022     		movs	r2, #0
 3027 003c 0267     		str	r2, [r0, #112]
1736:systemview/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 3028              		.loc 1 1736 7 is_stmt 1 view .LVU916
 3029              		.loc 1 1736 27 is_stmt 0 view .LVU917
 3030 003e C266     		str	r2, [r0, #108]
 3031              	.L191:
1737:systemview/SEGGER_RTT.c ****     }
1738:systemview/SEGGER_RTT.c ****     pDown->Flags          = Flags;
 3032              		.loc 1 1738 5 is_stmt 1 view .LVU918
 3033              		.loc 1 1738 27 is_stmt 0 view .LVU919
 3034 0040 04EB4404 		add	r4, r4, r4, lsl #1
 3035              	.LVL303:
 3036              		.loc 1 1738 27 view .LVU920
 3037 0044 0748     		ldr	r0, .L195
 3038 0046 00EBC404 		add	r4, r0, r4, lsl #3
 3039 004a 069A     		ldr	r2, [sp, #24]
 3040 004c 6267     		str	r2, [r4, #116]
1739:systemview/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3041              		.loc 1 1739 15 is_stmt 1 view .LVU921
1740:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3042              		.loc 1 1740 5 view .LVU922
 3043              		.syntax unified
 3044              	@ 1740 "systemview/SEGGER_RTT.c" 1
 3045 004e 83F31188 		msr   basepri, r3  
 3046              		
 3047              	@ 0 "" 2
 3048              		.thumb
 3049              		.syntax unified
 3050              	.LBE36:
 3051              		.loc 1 1740 24 view .LVU923
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 90


1741:systemview/SEGGER_RTT.c ****     r =  0;
 3052              		.loc 1 1741 5 view .LVU924
 3053              	.LVL304:
 3054              		.loc 1 1741 7 is_stmt 0 view .LVU925
 3055 0052 0020     		movs	r0, #0
 3056              	.LVL305:
 3057              	.L188:
1742:systemview/SEGGER_RTT.c ****   } else {
1743:systemview/SEGGER_RTT.c ****     r = -1;
1744:systemview/SEGGER_RTT.c ****   }
1745:systemview/SEGGER_RTT.c ****   return r;
1746:systemview/SEGGER_RTT.c **** }
 3058              		.loc 1 1746 1 view .LVU926
 3059 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3060              	.LVL306:
 3061              	.L194:
 3062              	.LBB37:
1726:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3063              		.loc 1 1726 3 is_stmt 1 discriminator 1 view .LVU927
 3064 0058 FFF7FEFF 		bl	_DoInit
 3065              	.LVL307:
1726:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3066              		.loc 1 1726 3 is_stmt 0 discriminator 1 view .LVU928
 3067 005c DBE7     		b	.L189
 3068              	.LVL308:
 3069              	.L192:
1726:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3070              		.loc 1 1726 3 discriminator 1 view .LVU929
 3071              	.LBE37:
1743:systemview/SEGGER_RTT.c ****   }
 3072              		.loc 1 1743 7 view .LVU930
 3073 005e 4FF0FF30 		mov	r0, #-1
 3074              	.LVL309:
1745:systemview/SEGGER_RTT.c **** }
 3075              		.loc 1 1745 3 is_stmt 1 view .LVU931
1745:systemview/SEGGER_RTT.c **** }
 3076              		.loc 1 1745 10 is_stmt 0 view .LVU932
 3077 0062 F7E7     		b	.L188
 3078              	.L196:
 3079              		.align	2
 3080              	.L195:
 3081 0064 00000000 		.word	.LANCHOR1
 3082              		.cfi_endproc
 3083              	.LFE26:
 3085              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 3086              		.align	1
 3087              		.global	SEGGER_RTT_SetNameUpBuffer
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3092              	SEGGER_RTT_SetNameUpBuffer:
 3093              	.LVL310:
 3094              	.LFB27:
1747:systemview/SEGGER_RTT.c **** 
1748:systemview/SEGGER_RTT.c **** /*********************************************************************
1749:systemview/SEGGER_RTT.c **** *
1750:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 91


1751:systemview/SEGGER_RTT.c **** *
1752:systemview/SEGGER_RTT.c **** *  Function description
1753:systemview/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1754:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1755:systemview/SEGGER_RTT.c **** *
1756:systemview/SEGGER_RTT.c **** *  Parameters
1757:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1758:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1759:systemview/SEGGER_RTT.c **** *
1760:systemview/SEGGER_RTT.c **** *  Return value
1761:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1762:systemview/SEGGER_RTT.c **** *     < 0  Error
1763:systemview/SEGGER_RTT.c **** */
1764:systemview/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 3095              		.loc 1 1764 73 is_stmt 1 view -0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              		.loc 1 1764 73 is_stmt 0 view .LVU934
 3100 0000 38B5     		push	{r3, r4, r5, lr}
 3101              	.LCFI31:
 3102              		.cfi_def_cfa_offset 16
 3103              		.cfi_offset 3, -16
 3104              		.cfi_offset 4, -12
 3105              		.cfi_offset 5, -8
 3106              		.cfi_offset 14, -4
 3107 0002 0446     		mov	r4, r0
 3108 0004 0D46     		mov	r5, r1
1765:systemview/SEGGER_RTT.c ****   int r;
 3109              		.loc 1 1765 3 is_stmt 1 view .LVU935
1766:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3110              		.loc 1 1766 3 view .LVU936
1767:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 3111              		.loc 1 1767 3 view .LVU937
1768:systemview/SEGGER_RTT.c **** 
1769:systemview/SEGGER_RTT.c ****   INIT();
 3112              		.loc 1 1769 3 view .LVU938
 3113              	.LBB38:
 3114              		.loc 1 1769 3 view .LVU939
 3115              		.loc 1 1769 3 view .LVU940
 3116              	.LVL311:
 3117              		.loc 1 1769 3 view .LVU941
 3118 0006 0E4B     		ldr	r3, .L203
 3119 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3120 000a DBB2     		uxtb	r3, r3
 3121 000c 532B     		cmp	r3, #83
 3122 000e 11D1     		bne	.L202
 3123              	.LVL312:
 3124              	.L198:
 3125              		.loc 1 1769 3 is_stmt 0 view .LVU942
 3126              	.LBE38:
 3127              		.loc 1 1769 3 is_stmt 1 discriminator 3 view .LVU943
1770:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3128              		.loc 1 1770 3 discriminator 3 view .LVU944
1771:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 3129              		.loc 1 1771 3 discriminator 3 view .LVU945
 3130              		.loc 1 1771 6 is_stmt 0 discriminator 3 view .LVU946
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 92


 3131 0010 022C     		cmp	r4, #2
 3132 0012 12D8     		bhi	.L200
 3133              	.LBB39:
1772:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3134              		.loc 1 1772 5 is_stmt 1 view .LVU947
 3135              		.loc 1 1772 5 view .LVU948
 3136              		.syntax unified
 3137              	@ 1772 "systemview/SEGGER_RTT.c" 1
 3138 0014 EFF31183 		mrs   r3, basepri  
 3139 0018 4FF02001 		mov   r1, #32       
 3140 001c 81F31188 		msr   basepri, r1  
 3141              		
 3142              	@ 0 "" 2
 3143              	.LVL313:
 3144              		.loc 1 1772 22 view .LVU949
1773:systemview/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 3145              		.loc 1 1773 5 view .LVU950
1774:systemview/SEGGER_RTT.c ****     pUp->sName = sName;
 3146              		.loc 1 1774 5 view .LVU951
 3147              		.loc 1 1774 16 is_stmt 0 view .LVU952
 3148              		.thumb
 3149              		.syntax unified
 3150 0020 0134     		adds	r4, r4, #1
 3151              	.LVL314:
 3152              		.loc 1 1774 16 view .LVU953
 3153 0022 04EB4404 		add	r4, r4, r4, lsl #1
 3154              	.LVL315:
 3155              		.loc 1 1774 16 view .LVU954
 3156 0026 E400     		lsls	r4, r4, #3
 3157 0028 054A     		ldr	r2, .L203
 3158 002a 1551     		str	r5, [r2, r4]
1775:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3159              		.loc 1 1775 5 is_stmt 1 view .LVU955
 3160              		.syntax unified
 3161              	@ 1775 "systemview/SEGGER_RTT.c" 1
 3162 002c 83F31188 		msr   basepri, r3  
 3163              		
 3164              	@ 0 "" 2
 3165              		.thumb
 3166              		.syntax unified
 3167              	.LBE39:
 3168              		.loc 1 1775 24 view .LVU956
1776:systemview/SEGGER_RTT.c ****     r =  0;
 3169              		.loc 1 1776 5 view .LVU957
 3170              	.LVL316:
 3171              		.loc 1 1776 7 is_stmt 0 view .LVU958
 3172 0030 0020     		movs	r0, #0
 3173              	.LVL317:
 3174              	.L197:
1777:systemview/SEGGER_RTT.c ****   } else {
1778:systemview/SEGGER_RTT.c ****     r = -1;
1779:systemview/SEGGER_RTT.c ****   }
1780:systemview/SEGGER_RTT.c ****   return r;
1781:systemview/SEGGER_RTT.c **** }
 3175              		.loc 1 1781 1 view .LVU959
 3176 0032 38BD     		pop	{r3, r4, r5, pc}
 3177              	.LVL318:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 93


 3178              	.L202:
 3179              	.LBB40:
1769:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3180              		.loc 1 1769 3 is_stmt 1 discriminator 1 view .LVU960
 3181 0034 FFF7FEFF 		bl	_DoInit
 3182              	.LVL319:
1769:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3183              		.loc 1 1769 3 is_stmt 0 discriminator 1 view .LVU961
 3184 0038 EAE7     		b	.L198
 3185              	.LVL320:
 3186              	.L200:
1769:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3187              		.loc 1 1769 3 discriminator 1 view .LVU962
 3188              	.LBE40:
1778:systemview/SEGGER_RTT.c ****   }
 3189              		.loc 1 1778 7 view .LVU963
 3190 003a 4FF0FF30 		mov	r0, #-1
 3191              	.LVL321:
1780:systemview/SEGGER_RTT.c **** }
 3192              		.loc 1 1780 3 is_stmt 1 view .LVU964
1780:systemview/SEGGER_RTT.c **** }
 3193              		.loc 1 1780 10 is_stmt 0 view .LVU965
 3194 003e F8E7     		b	.L197
 3195              	.L204:
 3196              		.align	2
 3197              	.L203:
 3198 0040 00000000 		.word	.LANCHOR1
 3199              		.cfi_endproc
 3200              	.LFE27:
 3202              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 3203              		.align	1
 3204              		.global	SEGGER_RTT_SetNameDownBuffer
 3205              		.syntax unified
 3206              		.thumb
 3207              		.thumb_func
 3209              	SEGGER_RTT_SetNameDownBuffer:
 3210              	.LVL322:
 3211              	.LFB28:
1782:systemview/SEGGER_RTT.c **** 
1783:systemview/SEGGER_RTT.c **** /*********************************************************************
1784:systemview/SEGGER_RTT.c **** *
1785:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1786:systemview/SEGGER_RTT.c **** *
1787:systemview/SEGGER_RTT.c **** *  Function description
1788:systemview/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1789:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1790:systemview/SEGGER_RTT.c **** *
1791:systemview/SEGGER_RTT.c **** *  Parameters
1792:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1793:systemview/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1794:systemview/SEGGER_RTT.c **** *
1795:systemview/SEGGER_RTT.c **** *  Return value
1796:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1797:systemview/SEGGER_RTT.c **** *     < 0  Error
1798:systemview/SEGGER_RTT.c **** */
1799:systemview/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 3212              		.loc 1 1799 75 is_stmt 1 view -0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 94


 3213              		.cfi_startproc
 3214              		@ args = 0, pretend = 0, frame = 0
 3215              		@ frame_needed = 0, uses_anonymous_args = 0
 3216              		.loc 1 1799 75 is_stmt 0 view .LVU967
 3217 0000 38B5     		push	{r3, r4, r5, lr}
 3218              	.LCFI32:
 3219              		.cfi_def_cfa_offset 16
 3220              		.cfi_offset 3, -16
 3221              		.cfi_offset 4, -12
 3222              		.cfi_offset 5, -8
 3223              		.cfi_offset 14, -4
 3224 0002 0446     		mov	r4, r0
 3225 0004 0D46     		mov	r5, r1
1800:systemview/SEGGER_RTT.c ****   int r;
 3226              		.loc 1 1800 3 is_stmt 1 view .LVU968
1801:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3227              		.loc 1 1801 3 view .LVU969
1802:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 3228              		.loc 1 1802 3 view .LVU970
1803:systemview/SEGGER_RTT.c **** 
1804:systemview/SEGGER_RTT.c ****   INIT();
 3229              		.loc 1 1804 3 view .LVU971
 3230              	.LBB41:
 3231              		.loc 1 1804 3 view .LVU972
 3232              		.loc 1 1804 3 view .LVU973
 3233              	.LVL323:
 3234              		.loc 1 1804 3 view .LVU974
 3235 0006 0E4B     		ldr	r3, .L211
 3236 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 000a DBB2     		uxtb	r3, r3
 3238 000c 532B     		cmp	r3, #83
 3239 000e 11D1     		bne	.L210
 3240              	.LVL324:
 3241              	.L206:
 3242              		.loc 1 1804 3 is_stmt 0 view .LVU975
 3243              	.LBE41:
 3244              		.loc 1 1804 3 is_stmt 1 discriminator 3 view .LVU976
1805:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3245              		.loc 1 1805 3 discriminator 3 view .LVU977
1806:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 3246              		.loc 1 1806 3 discriminator 3 view .LVU978
 3247              		.loc 1 1806 6 is_stmt 0 discriminator 3 view .LVU979
 3248 0010 022C     		cmp	r4, #2
 3249 0012 12D8     		bhi	.L208
 3250              	.LBB42:
1807:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3251              		.loc 1 1807 5 is_stmt 1 view .LVU980
 3252              		.loc 1 1807 5 view .LVU981
 3253              		.syntax unified
 3254              	@ 1807 "systemview/SEGGER_RTT.c" 1
 3255 0014 EFF31183 		mrs   r3, basepri  
 3256 0018 4FF02001 		mov   r1, #32       
 3257 001c 81F31188 		msr   basepri, r1  
 3258              		
 3259              	@ 0 "" 2
 3260              	.LVL325:
 3261              		.loc 1 1807 22 view .LVU982
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 95


1808:systemview/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3262              		.loc 1 1808 5 view .LVU983
1809:systemview/SEGGER_RTT.c ****     pDown->sName = sName;
 3263              		.loc 1 1809 5 view .LVU984
 3264              		.loc 1 1809 18 is_stmt 0 view .LVU985
 3265              		.thumb
 3266              		.syntax unified
 3267 0020 04EB4404 		add	r4, r4, r4, lsl #1
 3268              	.LVL326:
 3269              		.loc 1 1809 18 view .LVU986
 3270 0024 0648     		ldr	r0, .L211
 3271 0026 00EBC404 		add	r4, r0, r4, lsl #3
 3272 002a 2566     		str	r5, [r4, #96]
1810:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3273              		.loc 1 1810 5 is_stmt 1 view .LVU987
 3274              		.syntax unified
 3275              	@ 1810 "systemview/SEGGER_RTT.c" 1
 3276 002c 83F31188 		msr   basepri, r3  
 3277              		
 3278              	@ 0 "" 2
 3279              		.thumb
 3280              		.syntax unified
 3281              	.LBE42:
 3282              		.loc 1 1810 24 view .LVU988
1811:systemview/SEGGER_RTT.c ****     r =  0;
 3283              		.loc 1 1811 5 view .LVU989
 3284              	.LVL327:
 3285              		.loc 1 1811 7 is_stmt 0 view .LVU990
 3286 0030 0020     		movs	r0, #0
 3287              	.LVL328:
 3288              	.L205:
1812:systemview/SEGGER_RTT.c ****   } else {
1813:systemview/SEGGER_RTT.c ****     r = -1;
1814:systemview/SEGGER_RTT.c ****   }
1815:systemview/SEGGER_RTT.c ****   return r;
1816:systemview/SEGGER_RTT.c **** }
 3289              		.loc 1 1816 1 view .LVU991
 3290 0032 38BD     		pop	{r3, r4, r5, pc}
 3291              	.LVL329:
 3292              	.L210:
 3293              	.LBB43:
1804:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3294              		.loc 1 1804 3 is_stmt 1 discriminator 1 view .LVU992
 3295 0034 FFF7FEFF 		bl	_DoInit
 3296              	.LVL330:
1804:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3297              		.loc 1 1804 3 is_stmt 0 discriminator 1 view .LVU993
 3298 0038 EAE7     		b	.L206
 3299              	.LVL331:
 3300              	.L208:
1804:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3301              		.loc 1 1804 3 discriminator 1 view .LVU994
 3302              	.LBE43:
1813:systemview/SEGGER_RTT.c ****   }
 3303              		.loc 1 1813 7 view .LVU995
 3304 003a 4FF0FF30 		mov	r0, #-1
 3305              	.LVL332:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 96


1815:systemview/SEGGER_RTT.c **** }
 3306              		.loc 1 1815 3 is_stmt 1 view .LVU996
1815:systemview/SEGGER_RTT.c **** }
 3307              		.loc 1 1815 10 is_stmt 0 view .LVU997
 3308 003e F8E7     		b	.L205
 3309              	.L212:
 3310              		.align	2
 3311              	.L211:
 3312 0040 00000000 		.word	.LANCHOR1
 3313              		.cfi_endproc
 3314              	.LFE28:
 3316              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 3317              		.align	1
 3318              		.global	SEGGER_RTT_SetFlagsUpBuffer
 3319              		.syntax unified
 3320              		.thumb
 3321              		.thumb_func
 3323              	SEGGER_RTT_SetFlagsUpBuffer:
 3324              	.LVL333:
 3325              	.LFB29:
1817:systemview/SEGGER_RTT.c **** 
1818:systemview/SEGGER_RTT.c **** /*********************************************************************
1819:systemview/SEGGER_RTT.c **** *
1820:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1821:systemview/SEGGER_RTT.c **** *
1822:systemview/SEGGER_RTT.c **** *  Function description
1823:systemview/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1824:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1825:systemview/SEGGER_RTT.c **** *
1826:systemview/SEGGER_RTT.c **** *  Parameters
1827:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1828:systemview/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1829:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1830:systemview/SEGGER_RTT.c **** *
1831:systemview/SEGGER_RTT.c **** *  Return value
1832:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1833:systemview/SEGGER_RTT.c **** *     < 0  Error
1834:systemview/SEGGER_RTT.c **** */
1835:systemview/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 3326              		.loc 1 1835 71 is_stmt 1 view -0
 3327              		.cfi_startproc
 3328              		@ args = 0, pretend = 0, frame = 0
 3329              		@ frame_needed = 0, uses_anonymous_args = 0
 3330              		.loc 1 1835 71 is_stmt 0 view .LVU999
 3331 0000 38B5     		push	{r3, r4, r5, lr}
 3332              	.LCFI33:
 3333              		.cfi_def_cfa_offset 16
 3334              		.cfi_offset 3, -16
 3335              		.cfi_offset 4, -12
 3336              		.cfi_offset 5, -8
 3337              		.cfi_offset 14, -4
 3338 0002 0446     		mov	r4, r0
 3339 0004 0D46     		mov	r5, r1
1836:systemview/SEGGER_RTT.c ****   int r;
 3340              		.loc 1 1836 3 is_stmt 1 view .LVU1000
1837:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3341              		.loc 1 1837 3 view .LVU1001
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 97


1838:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 3342              		.loc 1 1838 3 view .LVU1002
1839:systemview/SEGGER_RTT.c **** 
1840:systemview/SEGGER_RTT.c ****   INIT();
 3343              		.loc 1 1840 3 view .LVU1003
 3344              	.LBB44:
 3345              		.loc 1 1840 3 view .LVU1004
 3346              		.loc 1 1840 3 view .LVU1005
 3347              	.LVL334:
 3348              		.loc 1 1840 3 view .LVU1006
 3349 0006 0E4B     		ldr	r3, .L219
 3350 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3351 000a DBB2     		uxtb	r3, r3
 3352 000c 532B     		cmp	r3, #83
 3353 000e 11D1     		bne	.L218
 3354              	.LVL335:
 3355              	.L214:
 3356              		.loc 1 1840 3 is_stmt 0 view .LVU1007
 3357              	.LBE44:
 3358              		.loc 1 1840 3 is_stmt 1 discriminator 3 view .LVU1008
1841:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3359              		.loc 1 1841 3 discriminator 3 view .LVU1009
1842:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 3360              		.loc 1 1842 3 discriminator 3 view .LVU1010
 3361              		.loc 1 1842 6 is_stmt 0 discriminator 3 view .LVU1011
 3362 0010 022C     		cmp	r4, #2
 3363 0012 12D8     		bhi	.L216
 3364              	.LBB45:
1843:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3365              		.loc 1 1843 5 is_stmt 1 view .LVU1012
 3366              		.loc 1 1843 5 view .LVU1013
 3367              		.syntax unified
 3368              	@ 1843 "systemview/SEGGER_RTT.c" 1
 3369 0014 EFF31183 		mrs   r3, basepri  
 3370 0018 4FF02001 		mov   r1, #32       
 3371 001c 81F31188 		msr   basepri, r1  
 3372              		
 3373              	@ 0 "" 2
 3374              	.LVL336:
 3375              		.loc 1 1843 22 view .LVU1014
1844:systemview/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 3376              		.loc 1 1844 5 view .LVU1015
1845:systemview/SEGGER_RTT.c ****     pUp->Flags = Flags;
 3377              		.loc 1 1845 5 view .LVU1016
 3378              		.loc 1 1845 16 is_stmt 0 view .LVU1017
 3379              		.thumb
 3380              		.syntax unified
 3381 0020 04EB4404 		add	r4, r4, r4, lsl #1
 3382              	.LVL337:
 3383              		.loc 1 1845 16 view .LVU1018
 3384 0024 0648     		ldr	r0, .L219
 3385 0026 00EBC404 		add	r4, r0, r4, lsl #3
 3386 002a E562     		str	r5, [r4, #44]
1846:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3387              		.loc 1 1846 5 is_stmt 1 view .LVU1019
 3388              		.syntax unified
 3389              	@ 1846 "systemview/SEGGER_RTT.c" 1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 98


 3390 002c 83F31188 		msr   basepri, r3  
 3391              		
 3392              	@ 0 "" 2
 3393              		.thumb
 3394              		.syntax unified
 3395              	.LBE45:
 3396              		.loc 1 1846 24 view .LVU1020
1847:systemview/SEGGER_RTT.c ****     r =  0;
 3397              		.loc 1 1847 5 view .LVU1021
 3398              	.LVL338:
 3399              		.loc 1 1847 7 is_stmt 0 view .LVU1022
 3400 0030 0020     		movs	r0, #0
 3401              	.LVL339:
 3402              	.L213:
1848:systemview/SEGGER_RTT.c ****   } else {
1849:systemview/SEGGER_RTT.c ****     r = -1;
1850:systemview/SEGGER_RTT.c ****   }
1851:systemview/SEGGER_RTT.c ****   return r;
1852:systemview/SEGGER_RTT.c **** }
 3403              		.loc 1 1852 1 view .LVU1023
 3404 0032 38BD     		pop	{r3, r4, r5, pc}
 3405              	.LVL340:
 3406              	.L218:
 3407              	.LBB46:
1840:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3408              		.loc 1 1840 3 is_stmt 1 discriminator 1 view .LVU1024
 3409 0034 FFF7FEFF 		bl	_DoInit
 3410              	.LVL341:
1840:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3411              		.loc 1 1840 3 is_stmt 0 discriminator 1 view .LVU1025
 3412 0038 EAE7     		b	.L214
 3413              	.LVL342:
 3414              	.L216:
1840:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3415              		.loc 1 1840 3 discriminator 1 view .LVU1026
 3416              	.LBE46:
1849:systemview/SEGGER_RTT.c ****   }
 3417              		.loc 1 1849 7 view .LVU1027
 3418 003a 4FF0FF30 		mov	r0, #-1
 3419              	.LVL343:
1851:systemview/SEGGER_RTT.c **** }
 3420              		.loc 1 1851 3 is_stmt 1 view .LVU1028
1851:systemview/SEGGER_RTT.c **** }
 3421              		.loc 1 1851 10 is_stmt 0 view .LVU1029
 3422 003e F8E7     		b	.L213
 3423              	.L220:
 3424              		.align	2
 3425              	.L219:
 3426 0040 00000000 		.word	.LANCHOR1
 3427              		.cfi_endproc
 3428              	.LFE29:
 3430              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 3431              		.align	1
 3432              		.global	SEGGER_RTT_SetFlagsDownBuffer
 3433              		.syntax unified
 3434              		.thumb
 3435              		.thumb_func
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 99


 3437              	SEGGER_RTT_SetFlagsDownBuffer:
 3438              	.LVL344:
 3439              	.LFB30:
1853:systemview/SEGGER_RTT.c **** 
1854:systemview/SEGGER_RTT.c **** /*********************************************************************
1855:systemview/SEGGER_RTT.c **** *
1856:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1857:systemview/SEGGER_RTT.c **** *
1858:systemview/SEGGER_RTT.c **** *  Function description
1859:systemview/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1860:systemview/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1861:systemview/SEGGER_RTT.c **** *
1862:systemview/SEGGER_RTT.c **** *  Parameters
1863:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1864:systemview/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1865:systemview/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1866:systemview/SEGGER_RTT.c **** *
1867:systemview/SEGGER_RTT.c **** *  Return value
1868:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1869:systemview/SEGGER_RTT.c **** *     < 0  Error
1870:systemview/SEGGER_RTT.c **** */
1871:systemview/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 3440              		.loc 1 1871 73 is_stmt 1 view -0
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 0
 3443              		@ frame_needed = 0, uses_anonymous_args = 0
 3444              		.loc 1 1871 73 is_stmt 0 view .LVU1031
 3445 0000 38B5     		push	{r3, r4, r5, lr}
 3446              	.LCFI34:
 3447              		.cfi_def_cfa_offset 16
 3448              		.cfi_offset 3, -16
 3449              		.cfi_offset 4, -12
 3450              		.cfi_offset 5, -8
 3451              		.cfi_offset 14, -4
 3452 0002 0446     		mov	r4, r0
 3453 0004 0D46     		mov	r5, r1
1872:systemview/SEGGER_RTT.c ****   int r;
 3454              		.loc 1 1872 3 is_stmt 1 view .LVU1032
1873:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3455              		.loc 1 1873 3 view .LVU1033
1874:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 3456              		.loc 1 1874 3 view .LVU1034
1875:systemview/SEGGER_RTT.c **** 
1876:systemview/SEGGER_RTT.c ****   INIT();
 3457              		.loc 1 1876 3 view .LVU1035
 3458              	.LBB47:
 3459              		.loc 1 1876 3 view .LVU1036
 3460              		.loc 1 1876 3 view .LVU1037
 3461              	.LVL345:
 3462              		.loc 1 1876 3 view .LVU1038
 3463 0006 0E4B     		ldr	r3, .L227
 3464 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3465 000a DBB2     		uxtb	r3, r3
 3466 000c 532B     		cmp	r3, #83
 3467 000e 11D1     		bne	.L226
 3468              	.LVL346:
 3469              	.L222:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 100


 3470              		.loc 1 1876 3 is_stmt 0 view .LVU1039
 3471              	.LBE47:
 3472              		.loc 1 1876 3 is_stmt 1 discriminator 3 view .LVU1040
1877:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3473              		.loc 1 1877 3 discriminator 3 view .LVU1041
1878:systemview/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 3474              		.loc 1 1878 3 discriminator 3 view .LVU1042
 3475              		.loc 1 1878 6 is_stmt 0 discriminator 3 view .LVU1043
 3476 0010 022C     		cmp	r4, #2
 3477 0012 12D8     		bhi	.L224
 3478              	.LBB48:
1879:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3479              		.loc 1 1879 5 is_stmt 1 view .LVU1044
 3480              		.loc 1 1879 5 view .LVU1045
 3481              		.syntax unified
 3482              	@ 1879 "systemview/SEGGER_RTT.c" 1
 3483 0014 EFF31183 		mrs   r3, basepri  
 3484 0018 4FF02001 		mov   r1, #32       
 3485 001c 81F31188 		msr   basepri, r1  
 3486              		
 3487              	@ 0 "" 2
 3488              	.LVL347:
 3489              		.loc 1 1879 22 view .LVU1046
1880:systemview/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3490              		.loc 1 1880 5 view .LVU1047
1881:systemview/SEGGER_RTT.c ****     pDown->Flags = Flags;
 3491              		.loc 1 1881 5 view .LVU1048
 3492              		.loc 1 1881 18 is_stmt 0 view .LVU1049
 3493              		.thumb
 3494              		.syntax unified
 3495 0020 04EB4404 		add	r4, r4, r4, lsl #1
 3496              	.LVL348:
 3497              		.loc 1 1881 18 view .LVU1050
 3498 0024 0648     		ldr	r0, .L227
 3499 0026 00EBC404 		add	r4, r0, r4, lsl #3
 3500 002a 6567     		str	r5, [r4, #116]
1882:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3501              		.loc 1 1882 5 is_stmt 1 view .LVU1051
 3502              		.syntax unified
 3503              	@ 1882 "systemview/SEGGER_RTT.c" 1
 3504 002c 83F31188 		msr   basepri, r3  
 3505              		
 3506              	@ 0 "" 2
 3507              		.thumb
 3508              		.syntax unified
 3509              	.LBE48:
 3510              		.loc 1 1882 24 view .LVU1052
1883:systemview/SEGGER_RTT.c ****     r =  0;
 3511              		.loc 1 1883 5 view .LVU1053
 3512              	.LVL349:
 3513              		.loc 1 1883 7 is_stmt 0 view .LVU1054
 3514 0030 0020     		movs	r0, #0
 3515              	.LVL350:
 3516              	.L221:
1884:systemview/SEGGER_RTT.c ****   } else {
1885:systemview/SEGGER_RTT.c ****     r = -1;
1886:systemview/SEGGER_RTT.c ****   }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 101


1887:systemview/SEGGER_RTT.c ****   return r;
1888:systemview/SEGGER_RTT.c **** }
 3517              		.loc 1 1888 1 view .LVU1055
 3518 0032 38BD     		pop	{r3, r4, r5, pc}
 3519              	.LVL351:
 3520              	.L226:
 3521              	.LBB49:
1876:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3522              		.loc 1 1876 3 is_stmt 1 discriminator 1 view .LVU1056
 3523 0034 FFF7FEFF 		bl	_DoInit
 3524              	.LVL352:
1876:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3525              		.loc 1 1876 3 is_stmt 0 discriminator 1 view .LVU1057
 3526 0038 EAE7     		b	.L222
 3527              	.LVL353:
 3528              	.L224:
1876:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 3529              		.loc 1 1876 3 discriminator 1 view .LVU1058
 3530              	.LBE49:
1885:systemview/SEGGER_RTT.c ****   }
 3531              		.loc 1 1885 7 view .LVU1059
 3532 003a 4FF0FF30 		mov	r0, #-1
 3533              	.LVL354:
1887:systemview/SEGGER_RTT.c **** }
 3534              		.loc 1 1887 3 is_stmt 1 view .LVU1060
1887:systemview/SEGGER_RTT.c **** }
 3535              		.loc 1 1887 10 is_stmt 0 view .LVU1061
 3536 003e F8E7     		b	.L221
 3537              	.L228:
 3538              		.align	2
 3539              	.L227:
 3540 0040 00000000 		.word	.LANCHOR1
 3541              		.cfi_endproc
 3542              	.LFE30:
 3544              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 3545              		.align	1
 3546              		.global	SEGGER_RTT_Init
 3547              		.syntax unified
 3548              		.thumb
 3549              		.thumb_func
 3551              	SEGGER_RTT_Init:
 3552              	.LFB31:
1889:systemview/SEGGER_RTT.c **** 
1890:systemview/SEGGER_RTT.c **** /*********************************************************************
1891:systemview/SEGGER_RTT.c **** *
1892:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1893:systemview/SEGGER_RTT.c **** *
1894:systemview/SEGGER_RTT.c **** *  Function description
1895:systemview/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1896:systemview/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1897:systemview/SEGGER_RTT.c **** *
1898:systemview/SEGGER_RTT.c **** */
1899:systemview/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 3553              		.loc 1 1899 29 is_stmt 1 view -0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 0
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 102


 3557 0000 08B5     		push	{r3, lr}
 3558              	.LCFI35:
 3559              		.cfi_def_cfa_offset 8
 3560              		.cfi_offset 3, -8
 3561              		.cfi_offset 14, -4
1900:systemview/SEGGER_RTT.c ****   _DoInit();
 3562              		.loc 1 1900 3 view .LVU1063
 3563 0002 FFF7FEFF 		bl	_DoInit
 3564              	.LVL355:
1901:systemview/SEGGER_RTT.c **** }
 3565              		.loc 1 1901 1 is_stmt 0 view .LVU1064
 3566 0006 08BD     		pop	{r3, pc}
 3567              		.cfi_endproc
 3568              	.LFE31:
 3570              		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 3571              		.align	1
 3572              		.global	SEGGER_RTT_SetTerminal
 3573              		.syntax unified
 3574              		.thumb
 3575              		.thumb_func
 3577              	SEGGER_RTT_SetTerminal:
 3578              	.LVL356:
 3579              	.LFB32:
1902:systemview/SEGGER_RTT.c **** 
1903:systemview/SEGGER_RTT.c **** /*********************************************************************
1904:systemview/SEGGER_RTT.c **** *
1905:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1906:systemview/SEGGER_RTT.c **** *
1907:systemview/SEGGER_RTT.c **** *  Function description
1908:systemview/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1909:systemview/SEGGER_RTT.c **** *
1910:systemview/SEGGER_RTT.c **** *  Parameters
1911:systemview/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1912:systemview/SEGGER_RTT.c **** *
1913:systemview/SEGGER_RTT.c **** *  Return value
1914:systemview/SEGGER_RTT.c **** *    >= 0  O.K.
1915:systemview/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1916:systemview/SEGGER_RTT.c **** *
1917:systemview/SEGGER_RTT.c **** *  Notes
1918:systemview/SEGGER_RTT.c **** *    (1) Buffer 0 is always reserved for terminal I/O, so we can use index 0 here, fixed
1919:systemview/SEGGER_RTT.c **** */
1920:systemview/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (unsigned char TerminalId) {
 3580              		.loc 1 1920 55 is_stmt 1 view -0
 3581              		.cfi_startproc
 3582              		@ args = 0, pretend = 0, frame = 8
 3583              		@ frame_needed = 0, uses_anonymous_args = 0
 3584              		.loc 1 1920 55 is_stmt 0 view .LVU1066
 3585 0000 30B5     		push	{r4, r5, lr}
 3586              	.LCFI36:
 3587              		.cfi_def_cfa_offset 12
 3588              		.cfi_offset 4, -12
 3589              		.cfi_offset 5, -8
 3590              		.cfi_offset 14, -4
 3591 0002 83B0     		sub	sp, sp, #12
 3592              	.LCFI37:
 3593              		.cfi_def_cfa_offset 24
 3594 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 103


1921:systemview/SEGGER_RTT.c ****   unsigned char         ac[2];
 3595              		.loc 1 1921 3 is_stmt 1 view .LVU1067
1922:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 3596              		.loc 1 1922 3 view .LVU1068
1923:systemview/SEGGER_RTT.c ****   unsigned Avail;
 3597              		.loc 1 1923 3 view .LVU1069
1924:systemview/SEGGER_RTT.c ****   int r;
 3598              		.loc 1 1924 3 view .LVU1070
1925:systemview/SEGGER_RTT.c **** 
1926:systemview/SEGGER_RTT.c ****   INIT();
 3599              		.loc 1 1926 3 view .LVU1071
 3600              	.LBB50:
 3601              		.loc 1 1926 3 view .LVU1072
 3602              		.loc 1 1926 3 view .LVU1073
 3603              	.LVL357:
 3604              		.loc 1 1926 3 view .LVU1074
 3605 0006 1E4B     		ldr	r3, .L242
 3606 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 000a DBB2     		uxtb	r3, r3
 3608 000c 532B     		cmp	r3, #83
 3609 000e 1FD1     		bne	.L239
 3610              	.LVL358:
 3611              	.L232:
 3612              		.loc 1 1926 3 is_stmt 0 view .LVU1075
 3613              	.LBE50:
 3614              		.loc 1 1926 3 is_stmt 1 discriminator 3 view .LVU1076
1927:systemview/SEGGER_RTT.c ****   r = 0;
 3615              		.loc 1 1927 3 discriminator 3 view .LVU1077
1928:systemview/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3616              		.loc 1 1928 3 discriminator 3 view .LVU1078
 3617              		.loc 1 1928 9 is_stmt 0 discriminator 3 view .LVU1079
 3618 0010 FF23     		movs	r3, #255
 3619 0012 8DF80430 		strb	r3, [sp, #4]
1929:systemview/SEGGER_RTT.c ****   if (TerminalId < sizeof(_aTerminalId)) { // We only support a certain number of channels
 3620              		.loc 1 1929 3 is_stmt 1 discriminator 3 view .LVU1080
 3621              		.loc 1 1929 6 is_stmt 0 discriminator 3 view .LVU1081
 3622 0016 0F2C     		cmp	r4, #15
 3623 0018 2FD8     		bhi	.L236
1930:systemview/SEGGER_RTT.c ****     ac[1] = _aTerminalId[TerminalId];
 3624              		.loc 1 1930 5 is_stmt 1 view .LVU1082
 3625              		.loc 1 1930 25 is_stmt 0 view .LVU1083
 3626 001a 1A4B     		ldr	r3, .L242+4
 3627 001c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3628              		.loc 1 1930 11 view .LVU1084
 3629 001e 8DF80530 		strb	r3, [sp, #5]
1931:systemview/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // 
 3630              		.loc 1 1931 5 is_stmt 1 view .LVU1085
 3631              	.LVL359:
 3632              	.LBB51:
1932:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();                     // Lock to make sure that no other task is writing into 
 3633              		.loc 1 1932 5 view .LVU1086
 3634              		.loc 1 1932 5 view .LVU1087
 3635              		.syntax unified
 3636              	@ 1932 "systemview/SEGGER_RTT.c" 1
 3637 0022 EFF31185 		mrs   r5, basepri  
 3638 0026 4FF02001 		mov   r1, #32       
 3639 002a 81F31188 		msr   basepri, r1  
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 104


 3640              		
 3641              	@ 0 "" 2
 3642              	.LVL360:
 3643              		.loc 1 1932 22 view .LVU1088
1933:systemview/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 3644              		.loc 1 1933 5 view .LVU1089
 3645              		.loc 1 1933 15 is_stmt 0 view .LVU1090
 3646              		.thumb
 3647              		.syntax unified
 3648 002e 144B     		ldr	r3, .L242
 3649 0030 DB6A     		ldr	r3, [r3, #44]
 3650              		.loc 1 1933 23 view .LVU1091
 3651 0032 03F00303 		and	r3, r3, #3
 3652              		.loc 1 1933 8 view .LVU1092
 3653 0036 022B     		cmp	r3, #2
 3654 0038 0DD0     		beq	.L240
1934:systemview/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
1935:systemview/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
1936:systemview/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1937:systemview/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 3655              		.loc 1 1937 7 is_stmt 1 view .LVU1093
 3656              		.loc 1 1937 15 is_stmt 0 view .LVU1094
 3657 003a 1348     		ldr	r0, .L242+8
 3658 003c FFF7FEFF 		bl	_GetAvailWriteSpace
 3659              	.LVL361:
1938:systemview/SEGGER_RTT.c ****       if (Avail >= 2) {
 3660              		.loc 1 1938 7 is_stmt 1 view .LVU1095
 3661              		.loc 1 1938 10 is_stmt 0 view .LVU1096
 3662 0040 0128     		cmp	r0, #1
 3663 0042 11D8     		bhi	.L241
1939:systemview/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
1940:systemview/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
1941:systemview/SEGGER_RTT.c ****       } else {
1942:systemview/SEGGER_RTT.c ****         r = -1;
 3664              		.loc 1 1942 11 view .LVU1097
 3665 0044 4FF0FF30 		mov	r0, #-1
 3666              	.LVL362:
 3667              	.L235:
1943:systemview/SEGGER_RTT.c ****       }
1944:systemview/SEGGER_RTT.c ****     }
1945:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3668              		.loc 1 1945 5 is_stmt 1 view .LVU1098
 3669              		.syntax unified
 3670              	@ 1945 "systemview/SEGGER_RTT.c" 1
 3671 0048 85F31188 		msr   basepri, r5  
 3672              		
 3673              	@ 0 "" 2
 3674              		.thumb
 3675              		.syntax unified
 3676              	.LBE51:
 3677              		.loc 1 1945 24 view .LVU1099
 3678              	.LVL363:
 3679              	.L231:
1946:systemview/SEGGER_RTT.c ****   } else {
1947:systemview/SEGGER_RTT.c ****     r = -1;
1948:systemview/SEGGER_RTT.c ****   }
1949:systemview/SEGGER_RTT.c ****   return r;
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 105


1950:systemview/SEGGER_RTT.c **** }
 3680              		.loc 1 1950 1 is_stmt 0 view .LVU1100
 3681 004c 03B0     		add	sp, sp, #12
 3682              	.LCFI38:
 3683              		.cfi_remember_state
 3684              		.cfi_def_cfa_offset 12
 3685              		@ sp needed
 3686 004e 30BD     		pop	{r4, r5, pc}
 3687              	.LVL364:
 3688              	.L239:
 3689              	.LCFI39:
 3690              		.cfi_restore_state
 3691              	.LBB52:
1926:systemview/SEGGER_RTT.c ****   r = 0;
 3692              		.loc 1 1926 3 is_stmt 1 discriminator 1 view .LVU1101
 3693 0050 FFF7FEFF 		bl	_DoInit
 3694              	.LVL365:
1926:systemview/SEGGER_RTT.c ****   r = 0;
 3695              		.loc 1 1926 3 is_stmt 0 discriminator 1 view .LVU1102
 3696 0054 DCE7     		b	.L232
 3697              	.LVL366:
 3698              	.L240:
1926:systemview/SEGGER_RTT.c ****   r = 0;
 3699              		.loc 1 1926 3 discriminator 1 view .LVU1103
 3700              	.LBE52:
 3701              	.LBB53:
1934:systemview/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3702              		.loc 1 1934 7 is_stmt 1 view .LVU1104
1934:systemview/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3703              		.loc 1 1934 23 is_stmt 0 view .LVU1105
 3704 0056 0D4B     		ldr	r3, .L242+12
 3705 0058 1C70     		strb	r4, [r3]
1935:systemview/SEGGER_RTT.c ****     } else {                                                                            // Skipping
 3706              		.loc 1 1935 7 is_stmt 1 view .LVU1106
 3707 005a 0222     		movs	r2, #2
 3708 005c 01A9     		add	r1, sp, #4
 3709 005e 0A48     		ldr	r0, .L242+8
 3710 0060 FFF7FEFF 		bl	_WriteBlocking
 3711              	.LVL367:
 3712              	.LBE53:
1927:systemview/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3713              		.loc 1 1927 5 is_stmt 0 view .LVU1107
 3714 0064 0020     		movs	r0, #0
 3715              	.LBB54:
 3716 0066 EFE7     		b	.L235
 3717              	.LVL368:
 3718              	.L241:
1939:systemview/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3719              		.loc 1 1939 9 is_stmt 1 view .LVU1108
1939:systemview/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3720              		.loc 1 1939 25 is_stmt 0 view .LVU1109
 3721 0068 084B     		ldr	r3, .L242+12
 3722 006a 1C70     		strb	r4, [r3]
1940:systemview/SEGGER_RTT.c ****       } else {
 3723              		.loc 1 1940 9 is_stmt 1 view .LVU1110
 3724 006c 0222     		movs	r2, #2
 3725 006e 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 106


 3726 0070 0548     		ldr	r0, .L242+8
 3727              	.LVL369:
1940:systemview/SEGGER_RTT.c ****       } else {
 3728              		.loc 1 1940 9 is_stmt 0 view .LVU1111
 3729 0072 FFF7FEFF 		bl	_WriteNoCheck
 3730              	.LVL370:
 3731              	.LBE54:
1927:systemview/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3732              		.loc 1 1927 5 view .LVU1112
 3733 0076 0020     		movs	r0, #0
 3734              	.LBB55:
 3735 0078 E6E7     		b	.L235
 3736              	.LVL371:
 3737              	.L236:
1927:systemview/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3738              		.loc 1 1927 5 view .LVU1113
 3739              	.LBE55:
1947:systemview/SEGGER_RTT.c ****   }
 3740              		.loc 1 1947 7 view .LVU1114
 3741 007a 4FF0FF30 		mov	r0, #-1
 3742              	.LVL372:
1949:systemview/SEGGER_RTT.c **** }
 3743              		.loc 1 1949 3 is_stmt 1 view .LVU1115
1949:systemview/SEGGER_RTT.c **** }
 3744              		.loc 1 1949 10 is_stmt 0 view .LVU1116
 3745 007e E5E7     		b	.L231
 3746              	.L243:
 3747              		.align	2
 3748              	.L242:
 3749 0080 00000000 		.word	.LANCHOR1
 3750 0084 00000000 		.word	.LANCHOR0
 3751 0088 18000000 		.word	.LANCHOR1+24
 3752 008c 00000000 		.word	.LANCHOR5
 3753              		.cfi_endproc
 3754              	.LFE32:
 3756              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 3757              		.align	1
 3758              		.global	SEGGER_RTT_TerminalOut
 3759              		.syntax unified
 3760              		.thumb
 3761              		.thumb_func
 3763              	SEGGER_RTT_TerminalOut:
 3764              	.LVL373:
 3765              	.LFB33:
1951:systemview/SEGGER_RTT.c **** 
1952:systemview/SEGGER_RTT.c **** /*********************************************************************
1953:systemview/SEGGER_RTT.c **** *
1954:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1955:systemview/SEGGER_RTT.c **** *
1956:systemview/SEGGER_RTT.c **** *  Function description
1957:systemview/SEGGER_RTT.c **** *    Writes a string to the given terminal
1958:systemview/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1959:systemview/SEGGER_RTT.c **** *
1960:systemview/SEGGER_RTT.c **** *  Parameters
1961:systemview/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1962:systemview/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1963:systemview/SEGGER_RTT.c **** *
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 107


1964:systemview/SEGGER_RTT.c **** *  Return value
1965:systemview/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1966:systemview/SEGGER_RTT.c **** *     < 0 - Error.
1967:systemview/SEGGER_RTT.c **** *
1968:systemview/SEGGER_RTT.c **** */
1969:systemview/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (unsigned char TerminalId, const char* s) {
 3766              		.loc 1 1969 70 is_stmt 1 view -0
 3767              		.cfi_startproc
 3768              		@ args = 0, pretend = 0, frame = 0
 3769              		@ frame_needed = 0, uses_anonymous_args = 0
 3770              		.loc 1 1969 70 is_stmt 0 view .LVU1118
 3771 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3772              	.LCFI40:
 3773              		.cfi_def_cfa_offset 32
 3774              		.cfi_offset 3, -32
 3775              		.cfi_offset 4, -28
 3776              		.cfi_offset 5, -24
 3777              		.cfi_offset 6, -20
 3778              		.cfi_offset 7, -16
 3779              		.cfi_offset 8, -12
 3780              		.cfi_offset 9, -8
 3781              		.cfi_offset 14, -4
 3782 0004 0446     		mov	r4, r0
 3783 0006 0D46     		mov	r5, r1
1970:systemview/SEGGER_RTT.c ****   int                   Status;
 3784              		.loc 1 1970 3 is_stmt 1 view .LVU1119
1971:systemview/SEGGER_RTT.c ****   unsigned              FragLen;
 3785              		.loc 1 1971 3 view .LVU1120
1972:systemview/SEGGER_RTT.c ****   unsigned              Avail;
 3786              		.loc 1 1972 3 view .LVU1121
1973:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 3787              		.loc 1 1973 3 view .LVU1122
1974:systemview/SEGGER_RTT.c ****   //
1975:systemview/SEGGER_RTT.c ****   INIT();
 3788              		.loc 1 1975 3 view .LVU1123
 3789              	.LBB56:
 3790              		.loc 1 1975 3 view .LVU1124
 3791              		.loc 1 1975 3 view .LVU1125
 3792              	.LVL374:
 3793              		.loc 1 1975 3 view .LVU1126
 3794 0008 364B     		ldr	r3, .L259
 3795 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3796 000c DBB2     		uxtb	r3, r3
 3797 000e 532B     		cmp	r3, #83
 3798 0010 20D1     		bne	.L255
 3799              	.LVL375:
 3800              	.L245:
 3801              		.loc 1 1975 3 is_stmt 0 view .LVU1127
 3802              	.LBE56:
 3803              		.loc 1 1975 3 is_stmt 1 discriminator 3 view .LVU1128
1976:systemview/SEGGER_RTT.c ****   //
1977:systemview/SEGGER_RTT.c ****   // Validate terminal ID.
1978:systemview/SEGGER_RTT.c ****   //
1979:systemview/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3804              		.loc 1 1979 3 discriminator 3 view .LVU1129
 3805              		.loc 1 1979 6 is_stmt 0 discriminator 3 view .LVU1130
 3806 0012 0F2C     		cmp	r4, #15
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 108


 3807 0014 63D8     		bhi	.L250
1980:systemview/SEGGER_RTT.c ****     //
1981:systemview/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1982:systemview/SEGGER_RTT.c ****     //
1983:systemview/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // 
 3808              		.loc 1 1983 5 is_stmt 1 view .LVU1131
 3809              	.LVL376:
1984:systemview/SEGGER_RTT.c ****     //
1985:systemview/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1986:systemview/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1987:systemview/SEGGER_RTT.c ****     //
1988:systemview/SEGGER_RTT.c ****     FragLen = STRLEN(s);
 3810              		.loc 1 1988 5 view .LVU1132
 3811              		.loc 1 1988 15 is_stmt 0 view .LVU1133
 3812 0016 2846     		mov	r0, r5
 3813 0018 FFF7FEFF 		bl	strlen
 3814              	.LVL377:
 3815 001c 8046     		mov	r8, r0
 3816              	.LVL378:
 3817              	.LBB57:
1989:systemview/SEGGER_RTT.c ****     //
1990:systemview/SEGGER_RTT.c ****     // How we output depends upon the mode...
1991:systemview/SEGGER_RTT.c ****     //
1992:systemview/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3818              		.loc 1 1992 5 is_stmt 1 view .LVU1134
 3819              		.loc 1 1992 5 view .LVU1135
 3820              		.syntax unified
 3821              	@ 1992 "systemview/SEGGER_RTT.c" 1
 3822 001e EFF31186 		mrs   r6, basepri  
 3823 0022 4FF02001 		mov   r1, #32       
 3824 0026 81F31188 		msr   basepri, r1  
 3825              		
 3826              	@ 0 "" 2
 3827              	.LVL379:
 3828              		.loc 1 1992 22 view .LVU1136
1993:systemview/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3829              		.loc 1 1993 5 view .LVU1137
 3830              		.loc 1 1993 13 is_stmt 0 view .LVU1138
 3831              		.thumb
 3832              		.syntax unified
 3833 002a 2E4F     		ldr	r7, .L259
 3834 002c 07F11800 		add	r0, r7, #24
 3835              	.LVL380:
 3836              		.loc 1 1993 13 view .LVU1139
 3837 0030 FFF7FEFF 		bl	_GetAvailWriteSpace
 3838              	.LVL381:
 3839 0034 8146     		mov	r9, r0
 3840              	.LVL382:
1994:systemview/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3841              		.loc 1 1994 5 is_stmt 1 view .LVU1140
 3842              		.loc 1 1994 18 is_stmt 0 view .LVU1141
 3843 0036 FB6A     		ldr	r3, [r7, #44]
 3844              		.loc 1 1994 26 view .LVU1142
 3845 0038 03F00303 		and	r3, r3, #3
 3846              		.loc 1 1994 5 view .LVU1143
 3847 003c 012B     		cmp	r3, #1
 3848 003e 23D0     		beq	.L247
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 109


 3849 0040 022B     		cmp	r3, #2
 3850 0042 3BD0     		beq	.L248
 3851 0044 4BB1     		cbz	r3, .L256
 3852 0046 4FF0FF34 		mov	r4, #-1
 3853              	.LVL383:
 3854              	.L249:
1995:systemview/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1996:systemview/SEGGER_RTT.c ****       //
1997:systemview/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1998:systemview/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1999:systemview/SEGGER_RTT.c ****       //
2000:systemview/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
2001:systemview/SEGGER_RTT.c ****         Status = 0;
2002:systemview/SEGGER_RTT.c ****       } else {
2003:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2004:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
2005:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2006:systemview/SEGGER_RTT.c ****       }
2007:systemview/SEGGER_RTT.c ****       break;
2008:systemview/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
2009:systemview/SEGGER_RTT.c ****       //
2010:systemview/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
2011:systemview/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
2012:systemview/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
2013:systemview/SEGGER_RTT.c ****       //
2014:systemview/SEGGER_RTT.c ****       if (Avail < 4u) {
2015:systemview/SEGGER_RTT.c ****         Status = -1;
2016:systemview/SEGGER_RTT.c ****       } else {
2017:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2018:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
2019:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2020:systemview/SEGGER_RTT.c ****       }
2021:systemview/SEGGER_RTT.c ****       break;
2022:systemview/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
2023:systemview/SEGGER_RTT.c ****       //
2024:systemview/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
2025:systemview/SEGGER_RTT.c ****       //
2026:systemview/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
2027:systemview/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
2028:systemview/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
2029:systemview/SEGGER_RTT.c ****       break;
2030:systemview/SEGGER_RTT.c ****     default:
2031:systemview/SEGGER_RTT.c ****       Status = -1;
2032:systemview/SEGGER_RTT.c ****       break;
2033:systemview/SEGGER_RTT.c ****     }
2034:systemview/SEGGER_RTT.c ****     //
2035:systemview/SEGGER_RTT.c ****     // Finish up.
2036:systemview/SEGGER_RTT.c ****     //
2037:systemview/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3855              		.loc 1 2037 5 is_stmt 1 view .LVU1144
 3856              		.syntax unified
 3857              	@ 2037 "systemview/SEGGER_RTT.c" 1
 3858 004a 86F31188 		msr   basepri, r6  
 3859              		
 3860              	@ 0 "" 2
 3861              		.thumb
 3862              		.syntax unified
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 110


 3863              	.LBE57:
 3864              		.loc 1 2037 24 view .LVU1145
 3865              	.LVL384:
 3866              	.L244:
2038:systemview/SEGGER_RTT.c ****   } else {
2039:systemview/SEGGER_RTT.c ****     Status = -1;
2040:systemview/SEGGER_RTT.c ****   }
2041:systemview/SEGGER_RTT.c ****   return Status;
2042:systemview/SEGGER_RTT.c **** }
 3867              		.loc 1 2042 1 is_stmt 0 view .LVU1146
 3868 004e 2046     		mov	r0, r4
 3869 0050 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3870              	.LVL385:
 3871              	.L255:
 3872              	.LBB58:
1975:systemview/SEGGER_RTT.c ****   //
 3873              		.loc 1 1975 3 is_stmt 1 discriminator 1 view .LVU1147
 3874 0054 FFF7FEFF 		bl	_DoInit
 3875              	.LVL386:
1975:systemview/SEGGER_RTT.c ****   //
 3876              		.loc 1 1975 3 is_stmt 0 discriminator 1 view .LVU1148
 3877 0058 DBE7     		b	.L245
 3878              	.LVL387:
 3879              	.L256:
1975:systemview/SEGGER_RTT.c ****   //
 3880              		.loc 1 1975 3 discriminator 1 view .LVU1149
 3881              	.LBE58:
 3882              	.LBB59:
2000:systemview/SEGGER_RTT.c ****         Status = 0;
 3883              		.loc 1 2000 7 is_stmt 1 view .LVU1150
2000:systemview/SEGGER_RTT.c ****         Status = 0;
 3884              		.loc 1 2000 28 is_stmt 0 view .LVU1151
 3885 005a 08F10403 		add	r3, r8, #4
2000:systemview/SEGGER_RTT.c ****         Status = 0;
 3886              		.loc 1 2000 10 view .LVU1152
 3887 005e 8342     		cmp	r3, r0
 3888 0060 01D9     		bls	.L257
2001:systemview/SEGGER_RTT.c ****       } else {
 3889              		.loc 1 2001 16 view .LVU1153
 3890 0062 0024     		movs	r4, #0
 3891 0064 F1E7     		b	.L249
 3892              	.L257:
2003:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3893              		.loc 1 2003 9 is_stmt 1 view .LVU1154
 3894 0066 1837     		adds	r7, r7, #24
 3895 0068 2146     		mov	r1, r4
 3896 006a 3846     		mov	r0, r7
 3897              	.LVL388:
2003:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3898              		.loc 1 2003 9 is_stmt 0 view .LVU1155
 3899 006c FFF7FEFF 		bl	_PostTerminalSwitch
 3900              	.LVL389:
2004:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3901              		.loc 1 2004 9 is_stmt 1 view .LVU1156
2004:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3902              		.loc 1 2004 23 is_stmt 0 view .LVU1157
 3903 0070 4246     		mov	r2, r8
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 111


 3904 0072 2946     		mov	r1, r5
 3905 0074 3846     		mov	r0, r7
 3906 0076 FFF7FEFF 		bl	_WriteBlocking
 3907              	.LVL390:
 3908 007a 0446     		mov	r4, r0
 3909              	.LVL391:
2005:systemview/SEGGER_RTT.c ****       }
 3910              		.loc 1 2005 9 is_stmt 1 view .LVU1158
 3911 007c 1A4B     		ldr	r3, .L259+4
 3912 007e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3913 0080 3846     		mov	r0, r7
 3914              	.LVL392:
2005:systemview/SEGGER_RTT.c ****       }
 3915              		.loc 1 2005 9 is_stmt 0 view .LVU1159
 3916 0082 FFF7FEFF 		bl	_PostTerminalSwitch
 3917              	.LVL393:
 3918 0086 E0E7     		b	.L249
 3919              	.LVL394:
 3920              	.L247:
2014:systemview/SEGGER_RTT.c ****         Status = -1;
 3921              		.loc 1 2014 7 is_stmt 1 view .LVU1160
2014:systemview/SEGGER_RTT.c ****         Status = -1;
 3922              		.loc 1 2014 10 is_stmt 0 view .LVU1161
 3923 0088 0328     		cmp	r0, #3
 3924 008a 02D8     		bhi	.L258
2015:systemview/SEGGER_RTT.c ****       } else {
 3925              		.loc 1 2015 16 view .LVU1162
 3926 008c 4FF0FF34 		mov	r4, #-1
 3927 0090 DBE7     		b	.L249
 3928              	.L258:
2017:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 3929              		.loc 1 2017 9 is_stmt 1 view .LVU1163
 3930 0092 164F     		ldr	r7, .L259+8
 3931 0094 2146     		mov	r1, r4
 3932 0096 3846     		mov	r0, r7
 3933              	.LVL395:
2017:systemview/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 3934              		.loc 1 2017 9 is_stmt 0 view .LVU1164
 3935 0098 FFF7FEFF 		bl	_PostTerminalSwitch
 3936              	.LVL396:
2018:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3937              		.loc 1 2018 9 is_stmt 1 view .LVU1165
2018:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3938              		.loc 1 2018 66 is_stmt 0 view .LVU1166
 3939 009c A9F10402 		sub	r2, r9, #4
2018:systemview/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3940              		.loc 1 2018 23 view .LVU1167
 3941 00a0 4245     		cmp	r2, r8
 3942 00a2 28BF     		it	cs
 3943 00a4 4246     		movcs	r2, r8
 3944 00a6 2946     		mov	r1, r5
 3945 00a8 3846     		mov	r0, r7
 3946 00aa FFF7FEFF 		bl	_WriteBlocking
 3947              	.LVL397:
 3948 00ae 0446     		mov	r4, r0
 3949              	.LVL398:
2019:systemview/SEGGER_RTT.c ****       }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 112


 3950              		.loc 1 2019 9 is_stmt 1 view .LVU1168
 3951 00b0 0D4B     		ldr	r3, .L259+4
 3952 00b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3953 00b4 3846     		mov	r0, r7
 3954              	.LVL399:
2019:systemview/SEGGER_RTT.c ****       }
 3955              		.loc 1 2019 9 is_stmt 0 view .LVU1169
 3956 00b6 FFF7FEFF 		bl	_PostTerminalSwitch
 3957              	.LVL400:
 3958 00ba C6E7     		b	.L249
 3959              	.LVL401:
 3960              	.L248:
2026:systemview/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 3961              		.loc 1 2026 7 is_stmt 1 view .LVU1170
 3962 00bc 0B4F     		ldr	r7, .L259+8
 3963 00be 2146     		mov	r1, r4
 3964 00c0 3846     		mov	r0, r7
 3965              	.LVL402:
2026:systemview/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 3966              		.loc 1 2026 7 is_stmt 0 view .LVU1171
 3967 00c2 FFF7FEFF 		bl	_PostTerminalSwitch
 3968              	.LVL403:
2027:systemview/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 3969              		.loc 1 2027 7 is_stmt 1 view .LVU1172
2027:systemview/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 3970              		.loc 1 2027 21 is_stmt 0 view .LVU1173
 3971 00c6 4246     		mov	r2, r8
 3972 00c8 2946     		mov	r1, r5
 3973 00ca 3846     		mov	r0, r7
 3974 00cc FFF7FEFF 		bl	_WriteBlocking
 3975              	.LVL404:
 3976 00d0 0446     		mov	r4, r0
 3977              	.LVL405:
2028:systemview/SEGGER_RTT.c ****       break;
 3978              		.loc 1 2028 7 is_stmt 1 view .LVU1174
 3979 00d2 054B     		ldr	r3, .L259+4
 3980 00d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3981 00d6 3846     		mov	r0, r7
 3982              	.LVL406:
2028:systemview/SEGGER_RTT.c ****       break;
 3983              		.loc 1 2028 7 is_stmt 0 view .LVU1175
 3984 00d8 FFF7FEFF 		bl	_PostTerminalSwitch
 3985              	.LVL407:
2029:systemview/SEGGER_RTT.c ****     default:
 3986              		.loc 1 2029 7 is_stmt 1 view .LVU1176
 3987 00dc B5E7     		b	.L249
 3988              	.LVL408:
 3989              	.L250:
2029:systemview/SEGGER_RTT.c ****     default:
 3990              		.loc 1 2029 7 is_stmt 0 view .LVU1177
 3991              	.LBE59:
2039:systemview/SEGGER_RTT.c ****   }
 3992              		.loc 1 2039 12 view .LVU1178
 3993 00de 4FF0FF34 		mov	r4, #-1
 3994              	.LVL409:
2041:systemview/SEGGER_RTT.c **** }
 3995              		.loc 1 2041 3 is_stmt 1 view .LVU1179
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 113


2041:systemview/SEGGER_RTT.c **** }
 3996              		.loc 1 2041 10 is_stmt 0 view .LVU1180
 3997 00e2 B4E7     		b	.L244
 3998              	.L260:
 3999              		.align	2
 4000              	.L259:
 4001 00e4 00000000 		.word	.LANCHOR1
 4002 00e8 00000000 		.word	.LANCHOR5
 4003 00ec 18000000 		.word	.LANCHOR1+24
 4004              		.cfi_endproc
 4005              	.LFE33:
 4007              		.section	.text.SEGGER_RTT_GetAvailWriteSpace,"ax",%progbits
 4008              		.align	1
 4009              		.global	SEGGER_RTT_GetAvailWriteSpace
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4014              	SEGGER_RTT_GetAvailWriteSpace:
 4015              	.LVL410:
 4016              	.LFB34:
2043:systemview/SEGGER_RTT.c **** 
2044:systemview/SEGGER_RTT.c **** /*********************************************************************
2045:systemview/SEGGER_RTT.c **** *
2046:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_GetAvailWriteSpace
2047:systemview/SEGGER_RTT.c **** *
2048:systemview/SEGGER_RTT.c **** *  Function description
2049:systemview/SEGGER_RTT.c **** *    Returns the number of bytes available in the ring buffer.
2050:systemview/SEGGER_RTT.c **** *
2051:systemview/SEGGER_RTT.c **** *  Parameters
2052:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2053:systemview/SEGGER_RTT.c **** *
2054:systemview/SEGGER_RTT.c **** *  Return value
2055:systemview/SEGGER_RTT.c **** *    Number of bytes that are free in the selected up buffer.
2056:systemview/SEGGER_RTT.c **** */
2057:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetAvailWriteSpace (unsigned BufferIndex) {
 4017              		.loc 1 2057 63 is_stmt 1 view -0
 4018              		.cfi_startproc
 4019              		@ args = 0, pretend = 0, frame = 0
 4020              		@ frame_needed = 0, uses_anonymous_args = 0
 4021              		.loc 1 2057 63 is_stmt 0 view .LVU1182
 4022 0000 08B5     		push	{r3, lr}
 4023              	.LCFI41:
 4024              		.cfi_def_cfa_offset 8
 4025              		.cfi_offset 3, -8
 4026              		.cfi_offset 14, -4
2058:systemview/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 4027              		.loc 1 2058 3 is_stmt 1 view .LVU1183
2059:systemview/SEGGER_RTT.c **** 
2060:systemview/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((uintptr_t)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 4028              		.loc 1 2060 3 view .LVU1184
 4029              		.loc 1 2060 9 is_stmt 0 view .LVU1185
 4030 0002 0130     		adds	r0, r0, #1
 4031              	.LVL411:
 4032              		.loc 1 2060 9 view .LVU1186
 4033 0004 00EB4000 		add	r0, r0, r0, lsl #1
 4034              	.LVL412:
2061:systemview/SEGGER_RTT.c ****   return _GetAvailWriteSpace(pRing);
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 114


 4035              		.loc 1 2061 3 is_stmt 1 view .LVU1187
 4036              		.loc 1 2061 10 is_stmt 0 view .LVU1188
 4037 0008 024B     		ldr	r3, .L263
 4038 000a 03EBC000 		add	r0, r3, r0, lsl #3
 4039              	.LVL413:
 4040              		.loc 1 2061 10 view .LVU1189
 4041 000e FFF7FEFF 		bl	_GetAvailWriteSpace
 4042              	.LVL414:
2062:systemview/SEGGER_RTT.c **** }
 4043              		.loc 1 2062 1 view .LVU1190
 4044 0012 08BD     		pop	{r3, pc}
 4045              	.L264:
 4046              		.align	2
 4047              	.L263:
 4048 0014 00000000 		.word	.LANCHOR1
 4049              		.cfi_endproc
 4050              	.LFE34:
 4052              		.section	.text.SEGGER_RTT_GetBytesInBuffer,"ax",%progbits
 4053              		.align	1
 4054              		.global	SEGGER_RTT_GetBytesInBuffer
 4055              		.syntax unified
 4056              		.thumb
 4057              		.thumb_func
 4059              	SEGGER_RTT_GetBytesInBuffer:
 4060              	.LVL415:
 4061              	.LFB35:
2063:systemview/SEGGER_RTT.c **** 
2064:systemview/SEGGER_RTT.c **** 
2065:systemview/SEGGER_RTT.c **** /*********************************************************************
2066:systemview/SEGGER_RTT.c **** *
2067:systemview/SEGGER_RTT.c **** *       SEGGER_RTT_GetBytesInBuffer()
2068:systemview/SEGGER_RTT.c **** *
2069:systemview/SEGGER_RTT.c **** *  Function description
2070:systemview/SEGGER_RTT.c **** *    Returns the number of bytes currently used in the up buffer.
2071:systemview/SEGGER_RTT.c **** *
2072:systemview/SEGGER_RTT.c **** *  Parameters
2073:systemview/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2074:systemview/SEGGER_RTT.c **** *
2075:systemview/SEGGER_RTT.c **** *  Return value
2076:systemview/SEGGER_RTT.c **** *    Number of bytes that are used in the buffer.
2077:systemview/SEGGER_RTT.c **** */
2078:systemview/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetBytesInBuffer(unsigned BufferIndex) {
 4062              		.loc 1 2078 60 is_stmt 1 view -0
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 0
 4065              		@ frame_needed = 0, uses_anonymous_args = 0
 4066              		@ link register save eliminated.
2079:systemview/SEGGER_RTT.c ****   unsigned RdOff;
 4067              		.loc 1 2079 3 view .LVU1192
2080:systemview/SEGGER_RTT.c ****   unsigned WrOff;
 4068              		.loc 1 2080 3 view .LVU1193
2081:systemview/SEGGER_RTT.c ****   unsigned r;
 4069              		.loc 1 2081 3 view .LVU1194
2082:systemview/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 4070              		.loc 1 2082 3 view .LVU1195
2083:systemview/SEGGER_RTT.c ****   //
2084:systemview/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 115


2085:systemview/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
2086:systemview/SEGGER_RTT.c ****   //
2087:systemview/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((uintptr_t)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // Access
 4071              		.loc 1 2087 3 view .LVU1196
2088:systemview/SEGGER_RTT.c ****   RdOff = pRTTCB->aUp[BufferIndex].RdOff;
 4072              		.loc 1 2088 3 view .LVU1197
 4073              		.loc 1 2088 9 is_stmt 0 view .LVU1198
 4074 0000 00EB4002 		add	r2, r0, r0, lsl #1
 4075 0004 084B     		ldr	r3, .L268
 4076 0006 03EBC203 		add	r3, r3, r2, lsl #3
 4077 000a 9A6A     		ldr	r2, [r3, #40]
 4078              	.LVL416:
2089:systemview/SEGGER_RTT.c ****   WrOff = pRTTCB->aUp[BufferIndex].WrOff;
 4079              		.loc 1 2089 3 is_stmt 1 view .LVU1199
 4080              		.loc 1 2089 9 is_stmt 0 view .LVU1200
 4081 000c 5B6A     		ldr	r3, [r3, #36]
 4082              	.LVL417:
2090:systemview/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4083              		.loc 1 2090 3 is_stmt 1 view .LVU1201
 4084              		.loc 1 2090 6 is_stmt 0 view .LVU1202
 4085 000e 9A42     		cmp	r2, r3
 4086 0010 01D8     		bhi	.L266
2091:systemview/SEGGER_RTT.c ****     r = WrOff - RdOff;
 4087              		.loc 1 2091 5 is_stmt 1 view .LVU1203
 4088              		.loc 1 2091 7 is_stmt 0 view .LVU1204
 4089 0012 981A     		subs	r0, r3, r2
 4090              	.LVL418:
 4091              		.loc 1 2091 7 view .LVU1205
 4092 0014 7047     		bx	lr
 4093              	.LVL419:
 4094              	.L266:
2092:systemview/SEGGER_RTT.c ****   } else {
2093:systemview/SEGGER_RTT.c ****     r = pRTTCB->aUp[BufferIndex].SizeOfBuffer - (WrOff - RdOff);
 4095              		.loc 1 2093 5 is_stmt 1 view .LVU1206
 4096              		.loc 1 2093 33 is_stmt 0 view .LVU1207
 4097 0016 00EB4000 		add	r0, r0, r0, lsl #1
 4098              	.LVL420:
 4099              		.loc 1 2093 33 view .LVU1208
 4100 001a 0349     		ldr	r1, .L268
 4101 001c 01EBC000 		add	r0, r1, r0, lsl #3
 4102 0020 006A     		ldr	r0, [r0, #32]
 4103              		.loc 1 2093 47 view .LVU1209
 4104 0022 D21A     		subs	r2, r2, r3
 4105              	.LVL421:
 4106              		.loc 1 2093 7 view .LVU1210
 4107 0024 1044     		add	r0, r0, r2
 4108              	.LVL422:
2094:systemview/SEGGER_RTT.c ****   }
2095:systemview/SEGGER_RTT.c ****   return r;
 4109              		.loc 1 2095 3 is_stmt 1 view .LVU1211
2096:systemview/SEGGER_RTT.c **** }
 4110              		.loc 1 2096 1 is_stmt 0 view .LVU1212
 4111 0026 7047     		bx	lr
 4112              	.L269:
 4113              		.align	2
 4114              	.L268:
 4115 0028 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 116


 4116              		.cfi_endproc
 4117              	.LFE35:
 4119              		.global	_SEGGER_RTT
 4120              		.section	.bss._ActiveTerminal,"aw",%nobits
 4121              		.set	.LANCHOR5,. + 0
 4124              	_ActiveTerminal:
 4125 0000 00       		.space	1
 4126              		.section	.bss._SEGGER_RTT,"aw",%nobits
 4127              		.align	2
 4128              		.set	.LANCHOR1,. + 0
 4131              	_SEGGER_RTT:
 4132 0000 00000000 		.space	168
 4132      00000000 
 4132      00000000 
 4132      00000000 
 4132      00000000 
 4133              		.section	.bss._acDownBuffer,"aw",%nobits
 4134              		.align	2
 4135              		.set	.LANCHOR3,. + 0
 4138              	_acDownBuffer:
 4139 0000 00000000 		.space	16
 4139      00000000 
 4139      00000000 
 4139      00000000 
 4140              		.section	.bss._acUpBuffer,"aw",%nobits
 4141              		.align	2
 4142              		.set	.LANCHOR2,. + 0
 4145              	_acUpBuffer:
 4146 0000 00000000 		.space	1024
 4146      00000000 
 4146      00000000 
 4146      00000000 
 4146      00000000 
 4147              		.section	.rodata._aInitStr.0,"a"
 4148              		.align	2
 4149              		.set	.LANCHOR4,. + 0
 4152              	_aInitStr.0:
 4153 0000 00000000 		.ascii	"\000\000\000\000\000\000TTR REGGES\000"
 4153      00005454 
 4153      52205245 
 4153      47474553 
 4153      00
 4154              		.section	.rodata._aTerminalId,"a"
 4155              		.align	2
 4156              		.set	.LANCHOR0,. + 0
 4159              	_aTerminalId:
 4160 0000 30313233 		.ascii	"0123456789ABCDEF"
 4160      34353637 
 4160      38394142 
 4160      43444546 
 4161              		.text
 4162              	.Letext0:
 4163              		.file 2 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 4164              		.file 3 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 4165              		.file 4 "systemview/SEGGER_RTT.h"
 4166              		.file 5 "<built-in>"
 4167              		.file 6 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 117


ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 118


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT.c
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:18     .text._GetAvailWriteSpace:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:23     .text._GetAvailWriteSpace:00000000 _GetAvailWriteSpace
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:77     .text._WriteNoCheck:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:82     .text._WriteNoCheck:00000000 _WriteNoCheck
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:182    .text._WriteBlocking:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:187    .text._WriteBlocking:00000000 _WriteBlocking
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:333    .text._PostTerminalSwitch:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:338    .text._PostTerminalSwitch:00000000 _PostTerminalSwitch
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:380    .text._PostTerminalSwitch:00000020 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:385    .rodata._DoInit.str1.4:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:389    .text._DoInit:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:394    .text._DoInit:00000000 _DoInit
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:495    .text._DoInit:00000050 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:504    .text.SEGGER_RTT_ReadUpBufferNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:510    .text.SEGGER_RTT_ReadUpBufferNoLock:00000000 SEGGER_RTT_ReadUpBufferNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:707    .text.SEGGER_RTT_ReadUpBufferNoLock:000000ac $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:712    .text.SEGGER_RTT_ReadNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:718    .text.SEGGER_RTT_ReadNoLock:00000000 SEGGER_RTT_ReadNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:910    .text.SEGGER_RTT_ReadNoLock:000000a0 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:915    .text.SEGGER_RTT_ReadUpBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:921    .text.SEGGER_RTT_ReadUpBuffer:00000000 SEGGER_RTT_ReadUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:973    .text.SEGGER_RTT_Read:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:979    .text.SEGGER_RTT_Read:00000000 SEGGER_RTT_Read
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1031   .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1037   .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000 SEGGER_RTT_WriteWithOverwriteNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1276   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000010c $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1281   .text.SEGGER_RTT_WriteDownBufferNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1287   .text.SEGGER_RTT_WriteDownBufferNoLock:00000000 SEGGER_RTT_WriteDownBufferNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1401   .text.SEGGER_RTT_WriteDownBufferNoLock:00000060 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1406   .text.SEGGER_RTT_WriteNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1412   .text.SEGGER_RTT_WriteNoLock:00000000 SEGGER_RTT_WriteNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1527   .text.SEGGER_RTT_WriteNoLock:00000068 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1532   .text.SEGGER_RTT_WriteDownBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1538   .text.SEGGER_RTT_WriteDownBuffer:00000000 SEGGER_RTT_WriteDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1620   .text.SEGGER_RTT_WriteDownBuffer:00000034 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1626   .text.SEGGER_RTT_Write:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1632   .text.SEGGER_RTT_Write:00000000 SEGGER_RTT_Write
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1714   .text.SEGGER_RTT_Write:00000034 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1720   .text.SEGGER_RTT_WriteString:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1726   .text.SEGGER_RTT_WriteString:00000000 SEGGER_RTT_WriteString
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1769   .text.SEGGER_RTT_PutCharSkipNoLock:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1775   .text.SEGGER_RTT_PutCharSkipNoLock:00000000 SEGGER_RTT_PutCharSkipNoLock
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1873   .text.SEGGER_RTT_PutCharSkipNoLock:0000004c $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1878   .text.SEGGER_RTT_PutCharSkip:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:1884   .text.SEGGER_RTT_PutCharSkip:00000000 SEGGER_RTT_PutCharSkip
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2025   .text.SEGGER_RTT_PutCharSkip:00000070 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2031   .text.SEGGER_RTT_PutChar:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2037   .text.SEGGER_RTT_PutChar:00000000 SEGGER_RTT_PutChar
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2202   .text.SEGGER_RTT_PutChar:00000090 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2208   .text.SEGGER_RTT_GetKey:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2214   .text.SEGGER_RTT_GetKey:00000000 SEGGER_RTT_GetKey
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2266   .text.SEGGER_RTT_WaitKey:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2272   .text.SEGGER_RTT_WaitKey:00000000 SEGGER_RTT_WaitKey
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2302   .text.SEGGER_RTT_HasKey:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2308   .text.SEGGER_RTT_HasKey:00000000 SEGGER_RTT_HasKey
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 119


C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2374   .text.SEGGER_RTT_HasKey:00000024 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2379   .text.SEGGER_RTT_HasData:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2385   .text.SEGGER_RTT_HasData:00000000 SEGGER_RTT_HasData
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2416   .text.SEGGER_RTT_HasData:0000001c $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2421   .text.SEGGER_RTT_HasDataUp:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2427   .text.SEGGER_RTT_HasDataUp:00000000 SEGGER_RTT_HasDataUp
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2458   .text.SEGGER_RTT_HasDataUp:0000001c $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2463   .text.SEGGER_RTT_AllocDownBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2469   .text.SEGGER_RTT_AllocDownBuffer:00000000 SEGGER_RTT_AllocDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2616   .text.SEGGER_RTT_AllocDownBuffer:00000074 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2622   .text.SEGGER_RTT_AllocUpBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2628   .text.SEGGER_RTT_AllocUpBuffer:00000000 SEGGER_RTT_AllocUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2782   .text.SEGGER_RTT_AllocUpBuffer:00000088 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2788   .text.SEGGER_RTT_ConfigUpBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2794   .text.SEGGER_RTT_ConfigUpBuffer:00000000 SEGGER_RTT_ConfigUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2934   .text.SEGGER_RTT_ConfigUpBuffer:00000070 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2939   .text.SEGGER_RTT_ConfigDownBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:2945   .text.SEGGER_RTT_ConfigDownBuffer:00000000 SEGGER_RTT_ConfigDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3081   .text.SEGGER_RTT_ConfigDownBuffer:00000064 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3086   .text.SEGGER_RTT_SetNameUpBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3092   .text.SEGGER_RTT_SetNameUpBuffer:00000000 SEGGER_RTT_SetNameUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3198   .text.SEGGER_RTT_SetNameUpBuffer:00000040 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3203   .text.SEGGER_RTT_SetNameDownBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3209   .text.SEGGER_RTT_SetNameDownBuffer:00000000 SEGGER_RTT_SetNameDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3312   .text.SEGGER_RTT_SetNameDownBuffer:00000040 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3317   .text.SEGGER_RTT_SetFlagsUpBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3323   .text.SEGGER_RTT_SetFlagsUpBuffer:00000000 SEGGER_RTT_SetFlagsUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3426   .text.SEGGER_RTT_SetFlagsUpBuffer:00000040 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3431   .text.SEGGER_RTT_SetFlagsDownBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3437   .text.SEGGER_RTT_SetFlagsDownBuffer:00000000 SEGGER_RTT_SetFlagsDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3540   .text.SEGGER_RTT_SetFlagsDownBuffer:00000040 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3545   .text.SEGGER_RTT_Init:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3551   .text.SEGGER_RTT_Init:00000000 SEGGER_RTT_Init
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3571   .text.SEGGER_RTT_SetTerminal:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3577   .text.SEGGER_RTT_SetTerminal:00000000 SEGGER_RTT_SetTerminal
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3749   .text.SEGGER_RTT_SetTerminal:00000080 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3757   .text.SEGGER_RTT_TerminalOut:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:3763   .text.SEGGER_RTT_TerminalOut:00000000 SEGGER_RTT_TerminalOut
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4001   .text.SEGGER_RTT_TerminalOut:000000e4 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4008   .text.SEGGER_RTT_GetAvailWriteSpace:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4014   .text.SEGGER_RTT_GetAvailWriteSpace:00000000 SEGGER_RTT_GetAvailWriteSpace
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4048   .text.SEGGER_RTT_GetAvailWriteSpace:00000014 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4053   .text.SEGGER_RTT_GetBytesInBuffer:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4059   .text.SEGGER_RTT_GetBytesInBuffer:00000000 SEGGER_RTT_GetBytesInBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4115   .text.SEGGER_RTT_GetBytesInBuffer:00000028 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4131   .bss._SEGGER_RTT:00000000 _SEGGER_RTT
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4124   .bss._ActiveTerminal:00000000 _ActiveTerminal
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4125   .bss._ActiveTerminal:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4127   .bss._SEGGER_RTT:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4134   .bss._acDownBuffer:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4138   .bss._acDownBuffer:00000000 _acDownBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4141   .bss._acUpBuffer:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4145   .bss._acUpBuffer:00000000 _acUpBuffer
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4148   .rodata._aInitStr.0:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4152   .rodata._aInitStr.0:00000000 _aInitStr.0
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4155   .rodata._aTerminalId:00000000 $d
C:\Users\20398\AppData\Local\Temp\ccarHDKn.s:4159   .rodata._aTerminalId:00000000 _aTerminalId
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccarHDKn.s 			page 120



UNDEFINED SYMBOLS
memcpy
memset
strlen
