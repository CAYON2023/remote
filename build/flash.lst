ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FlashWriteNoCheck,"ax",%progbits
  18              		.align	1
  19              		.global	FlashWriteNoCheck
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	FlashWriteNoCheck:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "Modules/flash.c"
   1:Modules/flash.c **** /*
   2:Modules/flash.c ****  * flash.c
   3:Modules/flash.c ****  *
   4:Modules/flash.c ****  * Created: 2018-01-29
   5:Modules/flash.c ****  * Author: zhanglifu
   6:Modules/flash.c ****  */
   7:Modules/flash.c **** 
   8:Modules/flash.c **** /*********************************************************************/
   9:Modules/flash.c **** //                        头文件
  10:Modules/flash.c **** /*********************************************************************/
  11:Modules/flash.c **** #include "flash.h"
  12:Modules/flash.c **** 
  13:Modules/flash.c **** // 不检查的写入
  14:Modules/flash.c **** // WriteAddr:起始地址
  15:Modules/flash.c **** // pBuffer:  数据指针
  16:Modules/flash.c **** // NumToWrite:字节数数
  17:Modules/flash.c **** void FlashWriteNoCheck(uint32_t WriteAddr, uint8_t *pBuffer, uint16_t NumToWrite)
  18:Modules/flash.c **** {
  28              		.loc 1 18 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 18 1 is_stmt 0 view .LVU1
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 2


  41              		.cfi_offset 14, -4
  42 0002 0646     		mov	r6, r0
  43 0004 0D46     		mov	r5, r1
  44 0006 1746     		mov	r7, r2
  19:Modules/flash.c ****     uint16_t i;
  45              		.loc 1 19 5 is_stmt 1 view .LVU2
  20:Modules/flash.c **** 
  21:Modules/flash.c ****     for (i = 0; i < NumToWrite; i += 4)
  46              		.loc 1 21 5 view .LVU3
  47              	.LVL1:
  48              		.loc 1 21 12 is_stmt 0 view .LVU4
  49 0008 0024     		movs	r4, #0
  50              		.loc 1 21 5 view .LVU5
  51 000a 09E0     		b	.L2
  52              	.LVL2:
  53              	.L3:
  22:Modules/flash.c ****     {
  23:Modules/flash.c ****         while (HAL_OK != HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, WriteAddr + i, *(uint32_t *)(pBu
  24:Modules/flash.c ****             ;
  54              		.loc 1 24 13 is_stmt 1 discriminator 1 view .LVU6
  23:Modules/flash.c ****             ;
  55              		.loc 1 23 15 discriminator 1 view .LVU7
  23:Modules/flash.c ****             ;
  56              		.loc 1 23 26 is_stmt 0 discriminator 1 view .LVU8
  57 000c 2A59     		ldr	r2, [r5, r4]
  58 000e 0023     		movs	r3, #0
  59 0010 A119     		adds	r1, r4, r6
  60 0012 0220     		movs	r0, #2
  61 0014 FFF7FEFF 		bl	HAL_FLASH_Program
  62              	.LVL3:
  23:Modules/flash.c ****             ;
  63              		.loc 1 23 15 discriminator 1 view .LVU9
  64 0018 0028     		cmp	r0, #0
  65 001a F7D1     		bne	.L3
  21:Modules/flash.c ****     {
  66              		.loc 1 21 33 is_stmt 1 discriminator 2 view .LVU10
  21:Modules/flash.c ****     {
  67              		.loc 1 21 35 is_stmt 0 discriminator 2 view .LVU11
  68 001c 0434     		adds	r4, r4, #4
  69              	.LVL4:
  21:Modules/flash.c ****     {
  70              		.loc 1 21 35 discriminator 2 view .LVU12
  71 001e A4B2     		uxth	r4, r4
  72              	.LVL5:
  73              	.L2:
  21:Modules/flash.c ****     {
  74              		.loc 1 21 17 is_stmt 1 discriminator 1 view .LVU13
  21:Modules/flash.c ****     {
  75              		.loc 1 21 5 is_stmt 0 discriminator 1 view .LVU14
  76 0020 BC42     		cmp	r4, r7
  77 0022 F3D3     		bcc	.L3
  25:Modules/flash.c ****     }
  26:Modules/flash.c **** }
  78              		.loc 1 26 1 view .LVU15
  79 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  80              		.loc 1 26 1 view .LVU16
  81              		.cfi_endproc
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 3


  82              	.LFE65:
  84              		.section	.text.FlashWriteBuff,"ax",%progbits
  85              		.align	1
  86              		.global	FlashWriteBuff
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	FlashWriteBuff:
  92              	.LVL6:
  93              	.LFB66:
  27:Modules/flash.c **** 
  28:Modules/flash.c **** extern void FLASH_PageErase(uint32_t PageAddress);
  29:Modules/flash.c **** void FlashWriteBuff(const uint32_t destination_address, uint8_t *const buffer, uint32_t length)
  30:Modules/flash.c **** {
  94              		.loc 1 30 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 32
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 30 1 is_stmt 0 view .LVU18
  99 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 28
 102              		.cfi_offset 4, -28
 103              		.cfi_offset 5, -24
 104              		.cfi_offset 6, -20
 105              		.cfi_offset 7, -16
 106              		.cfi_offset 8, -12
 107              		.cfi_offset 9, -8
 108              		.cfi_offset 14, -4
 109 0004 89B0     		sub	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 64
  31:Modules/flash.c ****     uint16_t i;
 112              		.loc 1 31 5 is_stmt 1 view .LVU19
  32:Modules/flash.c ****     uint8_t FlashBuff[FMC_SECTOR_SIZE];
 113              		.loc 1 32 5 view .LVU20
  33:Modules/flash.c ****     uint32_t StartAddress = destination_address - destination_address % FMC_SECTOR_SIZE;
 114              		.loc 1 33 5 view .LVU21
 115              		.loc 1 33 14 is_stmt 0 view .LVU22
 116 0006 20F01F08 		bic	r8, r0, #31
 117              	.LVL7:
  34:Modules/flash.c ****     uint16_t Offset = destination_address - StartAddress;
 118              		.loc 1 34 5 is_stmt 1 view .LVU23
 119              		.loc 1 34 43 is_stmt 0 view .LVU24
 120 000a 86B2     		uxth	r6, r0
 121 000c 1FFA88F3 		uxth	r3, r8
 122              		.loc 1 34 14 view .LVU25
 123 0010 F61A     		subs	r6, r6, r3
 124              	.LVL8:
  35:Modules/flash.c ****     uint8_t *pBuf = buffer;
 125              		.loc 1 35 5 is_stmt 1 view .LVU26
  36:Modules/flash.c ****     uint32_t remaindNum = length;
 126              		.loc 1 36 5 view .LVU27
  37:Modules/flash.c **** 
  38:Modules/flash.c ****     HAL_StatusTypeDef status = HAL_ERROR;
 127              		.loc 1 38 5 view .LVU28
  39:Modules/flash.c **** 
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 4


  40:Modules/flash.c ****     // 地址检查
  41:Modules/flash.c ****     if ((destination_address < FMC_FLASH_BASE) || (destination_address + length >= FMC_FLASH_END) |
 128              		.loc 1 41 5 view .LVU29
 129              		.loc 1 41 8 is_stmt 0 view .LVU30
 130 0012 B0F1006F 		cmp	r0, #134217728
 131 0016 07D3     		bcc	.L5
 132 0018 8946     		mov	r9, r1
 133 001a 1746     		mov	r7, r2
 134 001c B6B2     		uxth	r6, r6
 135              		.loc 1 41 72 discriminator 1 view .LVU31
 136 001e 1044     		add	r0, r0, r2
 137              	.LVL9:
 138              		.loc 1 41 48 discriminator 1 view .LVU32
 139 0020 204B     		ldr	r3, .L20
 140 0022 9842     		cmp	r0, r3
 141 0024 00D8     		bhi	.L5
 142              		.loc 1 41 99 discriminator 2 view .LVU33
 143 0026 12B9     		cbnz	r2, .L18
 144              	.LVL10:
 145              	.L5:
  42:Modules/flash.c ****         return;
  43:Modules/flash.c **** 
  44:Modules/flash.c ****     HAL_FLASH_Unlock(); // 解锁
  45:Modules/flash.c ****     do
  46:Modules/flash.c ****     {
  47:Modules/flash.c ****         // 读出一页数据
  48:Modules/flash.c ****         for (i = 0; i < FMC_SECTOR_SIZE; i += 4)
  49:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
  50:Modules/flash.c **** 
  51:Modules/flash.c ****         // 修改要改入的数据
  52:Modules/flash.c ****         for (i = 0; (i + Offset) < FMC_SECTOR_SIZE && i < remaindNum; i++)
  53:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
  54:Modules/flash.c **** 
  55:Modules/flash.c ****         // 擦除一ROW数据
  56:Modules/flash.c ****         FLASH_PageErase(StartAddress);
  57:Modules/flash.c **** 
  58:Modules/flash.c ****         // HAL库 FLASH_PageErase有BUFF,要加上下面三行代码
  59:Modules/flash.c ****         while (status != HAL_OK)
  60:Modules/flash.c ****             status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
  61:Modules/flash.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
  62:Modules/flash.c **** 
  63:Modules/flash.c ****         // 写入数据
  64:Modules/flash.c ****         FlashWriteNoCheck(StartAddress, FlashBuff, FMC_SECTOR_SIZE);
  65:Modules/flash.c **** 
  66:Modules/flash.c ****         // 为下一页做准备
  67:Modules/flash.c ****         StartAddress += FMC_SECTOR_SIZE;
  68:Modules/flash.c ****         remaindNum -= i;
  69:Modules/flash.c ****         pBuf += i;
  70:Modules/flash.c ****         Offset = 0;
  71:Modules/flash.c **** 
  72:Modules/flash.c ****     } while (remaindNum > 0);
  73:Modules/flash.c **** 
  74:Modules/flash.c ****     HAL_FLASH_Lock(); // 上锁
  75:Modules/flash.c **** }
 146              		.loc 1 75 1 view .LVU34
 147 0028 09B0     		add	sp, sp, #36
 148              	.LCFI3:
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 5


 149              		.cfi_remember_state
 150              		.cfi_def_cfa_offset 28
 151              		@ sp needed
 152 002a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 153              	.LVL11:
 154              	.L18:
 155              	.LCFI4:
 156              		.cfi_restore_state
  44:Modules/flash.c ****     do
 157              		.loc 1 44 5 is_stmt 1 view .LVU35
 158 002e FFF7FEFF 		bl	HAL_FLASH_Unlock
 159              	.LVL12:
  38:Modules/flash.c **** 
 160              		.loc 1 38 23 is_stmt 0 view .LVU36
 161 0032 0125     		movs	r5, #1
 162 0034 30E0     		b	.L16
 163              	.LVL13:
 164              	.L10:
  49:Modules/flash.c **** 
 165              		.loc 1 49 13 is_stmt 1 discriminator 3 view .LVU37
  49:Modules/flash.c **** 
 166              		.loc 1 49 44 is_stmt 0 discriminator 3 view .LVU38
 167 0036 53F80820 		ldr	r2, [r3, r8]
  49:Modules/flash.c **** 
 168              		.loc 1 49 42 discriminator 3 view .LVU39
 169 003a 4DF80320 		str	r2, [sp, r3]
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 170              		.loc 1 48 42 is_stmt 1 discriminator 3 view .LVU40
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 171              		.loc 1 48 44 is_stmt 0 discriminator 3 view .LVU41
 172 003e 0433     		adds	r3, r3, #4
 173              	.LVL14:
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 174              		.loc 1 48 44 discriminator 3 view .LVU42
 175 0040 9BB2     		uxth	r3, r3
 176              	.LVL15:
 177              	.L9:
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 178              		.loc 1 48 21 is_stmt 1 discriminator 1 view .LVU43
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 179              		.loc 1 48 9 is_stmt 0 discriminator 1 view .LVU44
 180 0042 1F2B     		cmp	r3, #31
 181 0044 F7D9     		bls	.L10
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 182              		.loc 1 52 16 view .LVU45
 183 0046 0024     		movs	r4, #0
 184              	.LVL16:
 185              	.L11:
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 186              		.loc 1 52 21 is_stmt 1 discriminator 1 view .LVU46
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 187              		.loc 1 52 24 is_stmt 0 discriminator 1 view .LVU47
 188 0048 A319     		adds	r3, r4, r6
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 189              		.loc 1 52 9 discriminator 1 view .LVU48
 190 004a 1F2B     		cmp	r3, #31
 191 004c 09DC     		bgt	.L12
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 6


  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 192              		.loc 1 52 52 discriminator 3 view .LVU49
 193 004e BC42     		cmp	r4, r7
 194 0050 07D2     		bcs	.L12
  53:Modules/flash.c **** 
 195              		.loc 1 53 13 is_stmt 1 discriminator 4 view .LVU50
  53:Modules/flash.c **** 
 196              		.loc 1 53 34 is_stmt 0 discriminator 4 view .LVU51
 197 0052 3319     		adds	r3, r6, r4
  53:Modules/flash.c **** 
 198              		.loc 1 53 41 discriminator 4 view .LVU52
 199 0054 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
  53:Modules/flash.c **** 
 200              		.loc 1 53 39 discriminator 4 view .LVU53
 201 0058 0DF80320 		strb	r2, [sp, r3]
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 202              		.loc 1 52 71 is_stmt 1 discriminator 4 view .LVU54
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 203              		.loc 1 52 72 is_stmt 0 discriminator 4 view .LVU55
 204 005c 0134     		adds	r4, r4, #1
 205              	.LVL17:
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 206              		.loc 1 52 72 discriminator 4 view .LVU56
 207 005e A4B2     		uxth	r4, r4
 208              	.LVL18:
  52:Modules/flash.c ****             *(FlashBuff + Offset + i) = *(pBuf + i);
 209              		.loc 1 52 72 discriminator 4 view .LVU57
 210 0060 F2E7     		b	.L11
 211              	.L12:
  56:Modules/flash.c **** 
 212              		.loc 1 56 9 is_stmt 1 view .LVU58
 213 0062 4046     		mov	r0, r8
 214 0064 FFF7FEFF 		bl	FLASH_PageErase
 215              	.LVL19:
  59:Modules/flash.c ****             status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 216              		.loc 1 59 9 view .LVU59
  59:Modules/flash.c ****             status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 217              		.loc 1 59 15 is_stmt 0 view .LVU60
 218 0068 04E0     		b	.L14
 219              	.L15:
  60:Modules/flash.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 220              		.loc 1 60 13 is_stmt 1 view .LVU61
  60:Modules/flash.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 221              		.loc 1 60 22 is_stmt 0 view .LVU62
 222 006a 4CF25030 		movw	r0, #50000
 223 006e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 224              	.LVL20:
 225 0072 0546     		mov	r5, r0
 226              	.LVL21:
 227              	.L14:
  59:Modules/flash.c ****             status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 228              		.loc 1 59 15 is_stmt 1 view .LVU63
 229 0074 002D     		cmp	r5, #0
 230 0076 F8D1     		bne	.L15
  61:Modules/flash.c **** 
 231              		.loc 1 61 9 view .LVU64
 232 0078 0B4A     		ldr	r2, .L20+4
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 7


 233 007a 1369     		ldr	r3, [r2, #16]
 234 007c 23F00203 		bic	r3, r3, #2
 235 0080 1361     		str	r3, [r2, #16]
  64:Modules/flash.c **** 
 236              		.loc 1 64 9 view .LVU65
 237 0082 2022     		movs	r2, #32
 238 0084 6946     		mov	r1, sp
 239 0086 4046     		mov	r0, r8
 240 0088 FFF7FEFF 		bl	FlashWriteNoCheck
 241              	.LVL22:
  67:Modules/flash.c ****         remaindNum -= i;
 242              		.loc 1 67 9 view .LVU66
  67:Modules/flash.c ****         remaindNum -= i;
 243              		.loc 1 67 22 is_stmt 0 view .LVU67
 244 008c 08F12008 		add	r8, r8, #32
 245              	.LVL23:
  68:Modules/flash.c ****         pBuf += i;
 246              		.loc 1 68 9 is_stmt 1 view .LVU68
  69:Modules/flash.c ****         Offset = 0;
 247              		.loc 1 69 9 view .LVU69
  69:Modules/flash.c ****         Offset = 0;
 248              		.loc 1 69 14 is_stmt 0 view .LVU70
 249 0090 A144     		add	r9, r9, r4
 250              	.LVL24:
  70:Modules/flash.c **** 
 251              		.loc 1 70 9 is_stmt 1 view .LVU71
  72:Modules/flash.c **** 
 252              		.loc 1 72 13 view .LVU72
  70:Modules/flash.c **** 
 253              		.loc 1 70 16 is_stmt 0 view .LVU73
 254 0092 0026     		movs	r6, #0
  72:Modules/flash.c **** 
 255              		.loc 1 72 5 view .LVU74
 256 0094 3F1B     		subs	r7, r7, r4
 257              	.LVL25:
  72:Modules/flash.c **** 
 258              		.loc 1 72 5 view .LVU75
 259 0096 01D0     		beq	.L19
 260              	.LVL26:
 261              	.L16:
  45:Modules/flash.c ****     {
 262              		.loc 1 45 5 is_stmt 1 view .LVU76
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 263              		.loc 1 48 9 view .LVU77
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 264              		.loc 1 48 16 is_stmt 0 view .LVU78
 265 0098 0023     		movs	r3, #0
  48:Modules/flash.c ****             *(uint32_t *)(FlashBuff + i) = *(uint32_t *)(StartAddress + i);
 266              		.loc 1 48 9 view .LVU79
 267 009a D2E7     		b	.L9
 268              	.LVL27:
 269              	.L19:
  74:Modules/flash.c **** }
 270              		.loc 1 74 5 is_stmt 1 view .LVU80
 271 009c FFF7FEFF 		bl	HAL_FLASH_Lock
 272              	.LVL28:
 273 00a0 C2E7     		b	.L5
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 8


 274              	.L21:
 275 00a2 00BF     		.align	2
 276              	.L20:
 277 00a4 FFFF0008 		.word	134283263
 278 00a8 00200240 		.word	1073881088
 279              		.cfi_endproc
 280              	.LFE66:
 282              		.section	.text.FlashReadBuff,"ax",%progbits
 283              		.align	1
 284              		.global	FlashReadBuff
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	FlashReadBuff:
 290              	.LVL29:
 291              	.LFB67:
  76:Modules/flash.c **** 
  77:Modules/flash.c **** // 从FLASH中读指定长度数据
  78:Modules/flash.c **** void FlashReadBuff(const uint32_t source_address, uint8_t *const buffer, uint16_t length)
  79:Modules/flash.c **** {
 292              		.loc 1 79 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		.loc 1 79 1 is_stmt 0 view .LVU82
 297 0000 30B5     		push	{r4, r5, lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
 301              		.cfi_offset 5, -8
 302              		.cfi_offset 14, -4
  80:Modules/flash.c ****     uint16_t i;
 303              		.loc 1 80 5 is_stmt 1 view .LVU83
  81:Modules/flash.c ****     uint8_t Offset = 0;
 304              		.loc 1 81 5 view .LVU84
 305              	.LVL30:
  82:Modules/flash.c ****     uint32_t StartAddress = source_address;
 306              		.loc 1 82 5 view .LVU85
  83:Modules/flash.c ****     uint16_t data;
 307              		.loc 1 83 5 view .LVU86
  84:Modules/flash.c **** 
  85:Modules/flash.c ****     // 地址检测
  86:Modules/flash.c ****     if (source_address + length > FMC_FLASH_END)
 308              		.loc 1 86 5 view .LVU87
 309              		.loc 1 86 24 is_stmt 0 view .LVU88
 310 0002 1418     		adds	r4, r2, r0
 311              		.loc 1 86 8 view .LVU89
 312 0004 134B     		ldr	r3, .L30
 313 0006 9C42     		cmp	r4, r3
 314 0008 22D8     		bhi	.L22
  87:Modules/flash.c ****         return;
  88:Modules/flash.c **** 
  89:Modules/flash.c ****     // 如果没有对16齐
  90:Modules/flash.c ****     if (source_address & 1)
 315              		.loc 1 90 5 is_stmt 1 view .LVU90
 316              		.loc 1 90 8 is_stmt 0 view .LVU91
 317 000a 10F0010F 		tst	r0, #1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 9


 318 000e 07D0     		beq	.L28
  91:Modules/flash.c ****     {
  92:Modules/flash.c ****         Offset = 1;
 319              		.loc 1 92 9 is_stmt 1 view .LVU92
 320              	.LVL31:
  93:Modules/flash.c ****         StartAddress = source_address - 1;
 321              		.loc 1 93 9 view .LVU93
  94:Modules/flash.c ****     }
  95:Modules/flash.c **** 
  96:Modules/flash.c ****     // flash的操作要求16对齐 最小读写操作16个比特
  97:Modules/flash.c ****     if (Offset)
 322              		.loc 1 97 5 view .LVU94
  98:Modules/flash.c ****     {
  99:Modules/flash.c ****         data = *(uint16_t *)(StartAddress);
 323              		.loc 1 99 9 view .LVU95
 324              		.loc 1 99 14 is_stmt 0 view .LVU96
 325 0010 30F8013C 		ldrh	r3, [r0, #-1]
 326              	.LVL32:
 100:Modules/flash.c ****         buffer[0] = data >> 8;
 327              		.loc 1 100 9 is_stmt 1 view .LVU97
 328              		.loc 1 100 19 is_stmt 0 view .LVU98
 329 0014 1B0A     		lsrs	r3, r3, #8
 330              	.LVL33:
 331              		.loc 1 100 19 view .LVU99
 332 0016 0B70     		strb	r3, [r1]
 333              	.LVL34:
 101:Modules/flash.c ****         StartAddress += 2;
 334              		.loc 1 101 9 is_stmt 1 view .LVU100
 335              		.loc 1 101 22 is_stmt 0 view .LVU101
 336 0018 0130     		adds	r0, r0, #1
 337              	.LVL35:
  92:Modules/flash.c ****         StartAddress = source_address - 1;
 338              		.loc 1 92 16 view .LVU102
 339 001a 0124     		movs	r4, #1
 340              	.LVL36:
 341              	.L24:
 102:Modules/flash.c ****     }
 103:Modules/flash.c **** 
 104:Modules/flash.c ****     for (i = 0; i < (length - Offset); i += 2)
 342              		.loc 1 104 5 is_stmt 1 view .LVU103
 343              		.loc 1 104 12 is_stmt 0 view .LVU104
 344 001c 0023     		movs	r3, #0
 345              		.loc 1 104 5 view .LVU105
 346 001e 03E0     		b	.L25
 347              	.LVL37:
 348              	.L28:
  81:Modules/flash.c ****     uint32_t StartAddress = source_address;
 349              		.loc 1 81 13 view .LVU106
 350 0020 0024     		movs	r4, #0
 351 0022 FBE7     		b	.L24
 352              	.LVL38:
 353              	.L26:
 354              		.loc 1 104 40 is_stmt 1 discriminator 2 view .LVU107
 355              		.loc 1 104 42 is_stmt 0 discriminator 2 view .LVU108
 356 0024 0233     		adds	r3, r3, #2
 357              	.LVL39:
 358              		.loc 1 104 42 discriminator 2 view .LVU109
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 10


 359 0026 9BB2     		uxth	r3, r3
 360              	.LVL40:
 361              	.L25:
 362              		.loc 1 104 17 is_stmt 1 discriminator 1 view .LVU110
 363              		.loc 1 104 29 is_stmt 0 discriminator 1 view .LVU111
 364 0028 A2EB040C 		sub	ip, r2, r4
 365              		.loc 1 104 5 discriminator 1 view .LVU112
 366 002c 6345     		cmp	r3, ip
 367 002e 0FDA     		bge	.L22
 105:Modules/flash.c ****     {
 106:Modules/flash.c ****         data = *(uint16_t *)(StartAddress + i);
 368              		.loc 1 106 9 is_stmt 1 view .LVU113
 369              		.loc 1 106 14 is_stmt 0 view .LVU114
 370 0030 33F800E0 		ldrh	lr, [r3, r0]
 371              	.LVL41:
 107:Modules/flash.c ****         buffer[i + Offset] = (data & 0xFF);
 372              		.loc 1 107 9 is_stmt 1 view .LVU115
 373              		.loc 1 107 18 is_stmt 0 view .LVU116
 374 0034 03EB040C 		add	ip, r3, r4
 375              		.loc 1 107 28 view .LVU117
 376 0038 01F80CE0 		strb	lr, [r1, ip]
 108:Modules/flash.c ****         if ((i + Offset) < (length - 1))
 377              		.loc 1 108 9 is_stmt 1 view .LVU118
 378              		.loc 1 108 36 is_stmt 0 view .LVU119
 379 003c 551E     		subs	r5, r2, #1
 380              		.loc 1 108 12 view .LVU120
 381 003e AC45     		cmp	ip, r5
 382 0040 F0DA     		bge	.L26
 109:Modules/flash.c ****             buffer[i + Offset + 1] = (data >> 8);
 383              		.loc 1 109 13 is_stmt 1 view .LVU121
 384              		.loc 1 109 19 is_stmt 0 view .LVU122
 385 0042 0CF1010C 		add	ip, ip, #1
 386              		.loc 1 109 36 view .LVU123
 387 0046 4FEA1E2E 		lsr	lr, lr, #8
 388              	.LVL42:
 389              		.loc 1 109 36 view .LVU124
 390 004a 01F80CE0 		strb	lr, [r1, ip]
 391 004e E9E7     		b	.L26
 392              	.LVL43:
 393              	.L22:
 110:Modules/flash.c ****     }
 111:Modules/flash.c **** }
 394              		.loc 1 111 1 view .LVU125
 395 0050 30BD     		pop	{r4, r5, pc}
 396              	.L31:
 397 0052 00BF     		.align	2
 398              	.L30:
 399 0054 00000108 		.word	134283264
 400              		.cfi_endproc
 401              	.LFE67:
 403              		.text
 404              	.Letext0:
 405              		.file 2 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 406              		.file 3 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 407              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 408              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 409              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 11


ARM GAS  C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:18     .text.FlashWriteNoCheck:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:24     .text.FlashWriteNoCheck:00000000 FlashWriteNoCheck
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:85     .text.FlashWriteBuff:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:91     .text.FlashWriteBuff:00000000 FlashWriteBuff
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:277    .text.FlashWriteBuff:000000a4 $d
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:283    .text.FlashReadBuff:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:289    .text.FlashReadBuff:00000000 FlashReadBuff
C:\Users\20398\AppData\Local\Temp\ccvuMfJW.s:399    .text.FlashReadBuff:00000054 $d

UNDEFINED SYMBOLS
HAL_FLASH_Program
HAL_FLASH_Unlock
FLASH_PageErase
FLASH_WaitForLastOperation
HAL_FLASH_Lock
