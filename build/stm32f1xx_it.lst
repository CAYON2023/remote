ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB70:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****  ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****  * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****  ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****  * @attention
   8:Core/Src/stm32f1xx_it.c ****  *
   9:Core/Src/stm32f1xx_it.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****  * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****  *
  12:Core/Src/stm32f1xx_it.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****  * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****  *
  16:Core/Src/stm32f1xx_it.c ****  ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****  */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** #include "cmsis_os.h"
  26:Core/Src/stm32f1xx_it.c **** #include "MENU.h"
  27:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32f1xx_it.c **** 
  29:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** 
  34:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f1xx_it.c **** 
  39:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f1xx_it.c **** 
  44:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f1xx_it.c **** 
  49:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f1xx_it.c **** 
  54:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f1xx_it.c **** 
  59:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  61:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim4;
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f1xx_it.c **** /**
  71:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f1xx_it.c ****  */
  73:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f1xx_it.c ****   while (1)
  34              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32f1xx_it.c ****   {
  81:Core/Src/stm32f1xx_it.c ****   }
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 3


  35              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32f1xx_it.c ****   {
  36              		.loc 1 79 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE70:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB71:
  82:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f1xx_it.c **** }
  84:Core/Src/stm32f1xx_it.c **** 
  85:Core/Src/stm32f1xx_it.c **** /**
  86:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f1xx_it.c ****  */
  88:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f1xx_it.c **** {
  50              		.loc 1 89 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c **** 
  92:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32f1xx_it.c ****   {
  95:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c ****   }
  58              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32f1xx_it.c ****   {
  59              		.loc 1 93 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE71:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB72:
  98:Core/Src/stm32f1xx_it.c **** }
  99:Core/Src/stm32f1xx_it.c **** 
 100:Core/Src/stm32f1xx_it.c **** /**
 101:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Memory management fault.
 102:Core/Src/stm32f1xx_it.c ****  */
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 4


 103:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f1xx_it.c **** {
  73              		.loc 1 104 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c **** 
 107:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32f1xx_it.c ****   {
 110:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c ****   }
  81              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32f1xx_it.c ****   {
  82              		.loc 1 108 9 discriminator 1 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE72:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB73:
 113:Core/Src/stm32f1xx_it.c **** }
 114:Core/Src/stm32f1xx_it.c **** 
 115:Core/Src/stm32f1xx_it.c **** /**
 116:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Prefetch fault, memory access fault.
 117:Core/Src/stm32f1xx_it.c ****  */
 118:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f1xx_it.c **** {
  96              		.loc 1 119 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c **** 
 122:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32f1xx_it.c ****   {
 125:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c ****   }
 104              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 5


 105              		.loc 1 123 9 discriminator 1 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE73:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB74:
 128:Core/Src/stm32f1xx_it.c **** }
 129:Core/Src/stm32f1xx_it.c **** 
 130:Core/Src/stm32f1xx_it.c **** /**
 131:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f1xx_it.c ****  */
 133:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 134 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c **** 
 137:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32f1xx_it.c ****   {
 140:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 138 9 discriminator 1 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE74:
 133              		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	DebugMon_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	DebugMon_Handler:
 141              	.LFB75:
 143:Core/Src/stm32f1xx_it.c **** }
 144:Core/Src/stm32f1xx_it.c **** 
 145:Core/Src/stm32f1xx_it.c **** /**
 146:Core/Src/stm32f1xx_it.c ****  * @brief This function handles Debug monitor.
 147:Core/Src/stm32f1xx_it.c ****  */
 148:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f1xx_it.c **** {
 142              		.loc 1 149 1 view -0
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 6


 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** }
 147              		.loc 1 156 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE75:
 152              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 153              		.align	1
 154              		.global	EXTI3_IRQHandler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	EXTI3_IRQHandler:
 160              	.LFB76:
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 159:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 160:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 163:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c **** /**
 166:Core/Src/stm32f1xx_it.c ****  * @brief This function handles EXTI line3 interrupt.
 167:Core/Src/stm32f1xx_it.c ****  */
 168:Core/Src/stm32f1xx_it.c **** void EXTI3_IRQHandler(void)
 169:Core/Src/stm32f1xx_it.c **** {
 161              		.loc 1 169 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 170:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 171:Core/Src/stm32f1xx_it.c ****   // if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_3) == GPIO_PIN_RESET)
 172:Core/Src/stm32f1xx_it.c ****   // {
 173:Core/Src/stm32f1xx_it.c ****   //   osDelay(5);
 174:Core/Src/stm32f1xx_it.c ****   //   if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_3) == GPIO_PIN_RESET)
 175:Core/Src/stm32f1xx_it.c ****   key.key_up = 1;
 170              		.loc 1 175 3 view .LVU23
 171              		.loc 1 175 14 is_stmt 0 view .LVU24
 172 0002 044A     		ldr	r2, .L14
 173 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 174 0006 43F00203 		orr	r3, r3, #2
 175 000a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 7


 176:Core/Src/stm32f1xx_it.c ****   // }
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 178:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 176              		.loc 1 178 3 is_stmt 1 view .LVU25
 177 000c 0820     		movs	r0, #8
 178 000e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 179              	.LVL0:
 179:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 180:Core/Src/stm32f1xx_it.c **** 
 181:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 182:Core/Src/stm32f1xx_it.c **** }
 180              		.loc 1 182 1 is_stmt 0 view .LVU26
 181 0012 08BD     		pop	{r3, pc}
 182              	.L15:
 183              		.align	2
 184              	.L14:
 185 0014 00000000 		.word	key
 186              		.cfi_endproc
 187              	.LFE76:
 189              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 190              		.align	1
 191              		.global	EXTI4_IRQHandler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	EXTI4_IRQHandler:
 197              	.LFB77:
 183:Core/Src/stm32f1xx_it.c **** 
 184:Core/Src/stm32f1xx_it.c **** /**
 185:Core/Src/stm32f1xx_it.c ****  * @brief This function handles EXTI line4 interrupt.
 186:Core/Src/stm32f1xx_it.c ****  */
 187:Core/Src/stm32f1xx_it.c **** void EXTI4_IRQHandler(void)
 188:Core/Src/stm32f1xx_it.c **** {
 198              		.loc 1 188 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI1:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 190:Core/Src/stm32f1xx_it.c ****   // if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == GPIO_PIN_RESET)
 191:Core/Src/stm32f1xx_it.c ****   // {
 192:Core/Src/stm32f1xx_it.c ****   //   osDelay(5);
 193:Core/Src/stm32f1xx_it.c ****   //   if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) == GPIO_PIN_RESET)
 194:Core/Src/stm32f1xx_it.c ****   key.key_back = 1;
 207              		.loc 1 194 3 view .LVU28
 208              		.loc 1 194 16 is_stmt 0 view .LVU29
 209 0002 044A     		ldr	r2, .L18
 210 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 211 0006 43F00103 		orr	r3, r3, #1
 212 000a 1370     		strb	r3, [r2]
 195:Core/Src/stm32f1xx_it.c ****   // }
 196:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 197:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 8


 213              		.loc 1 197 3 is_stmt 1 view .LVU30
 214 000c 1020     		movs	r0, #16
 215 000e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 216              	.LVL1:
 198:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 199:Core/Src/stm32f1xx_it.c **** 
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 201:Core/Src/stm32f1xx_it.c **** }
 217              		.loc 1 201 1 is_stmt 0 view .LVU31
 218 0012 08BD     		pop	{r3, pc}
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0014 00000000 		.word	key
 223              		.cfi_endproc
 224              	.LFE77:
 226              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	DMA1_Channel1_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	DMA1_Channel1_IRQHandler:
 234              	.LFB78:
 202:Core/Src/stm32f1xx_it.c **** 
 203:Core/Src/stm32f1xx_it.c **** /**
 204:Core/Src/stm32f1xx_it.c ****  * @brief This function handles DMA1 channel1 global interrupt.
 205:Core/Src/stm32f1xx_it.c ****  */
 206:Core/Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 207:Core/Src/stm32f1xx_it.c **** {
 235              		.loc 1 207 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI2:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 208:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 209:Core/Src/stm32f1xx_it.c **** 
 210:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 211:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 244              		.loc 1 211 3 view .LVU33
 245 0002 0248     		ldr	r0, .L22
 246 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 247              	.LVL2:
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 215:Core/Src/stm32f1xx_it.c **** }
 248              		.loc 1 215 1 is_stmt 0 view .LVU34
 249 0008 08BD     		pop	{r3, pc}
 250              	.L23:
 251 000a 00BF     		.align	2
 252              	.L22:
 253 000c 00000000 		.word	hdma_adc1
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 9


 254              		.cfi_endproc
 255              	.LFE78:
 257              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	TIM4_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	TIM4_IRQHandler:
 265              	.LFB79:
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c **** /**
 218:Core/Src/stm32f1xx_it.c ****  * @brief This function handles TIM4 global interrupt.
 219:Core/Src/stm32f1xx_it.c ****  */
 220:Core/Src/stm32f1xx_it.c **** void TIM4_IRQHandler(void)
 221:Core/Src/stm32f1xx_it.c **** {
 266              		.loc 1 221 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI3:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 223:Core/Src/stm32f1xx_it.c **** 
 224:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 225:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 275              		.loc 1 225 3 view .LVU36
 276 0002 0248     		ldr	r0, .L26
 277 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 278              	.LVL3:
 226:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 227:Core/Src/stm32f1xx_it.c **** 
 228:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 229:Core/Src/stm32f1xx_it.c **** }
 279              		.loc 1 229 1 is_stmt 0 view .LVU37
 280 0008 08BD     		pop	{r3, pc}
 281              	.L27:
 282 000a 00BF     		.align	2
 283              	.L26:
 284 000c 00000000 		.word	htim4
 285              		.cfi_endproc
 286              	.LFE79:
 288              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	EXTI15_10_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	EXTI15_10_IRQHandler:
 296              	.LFB80:
 230:Core/Src/stm32f1xx_it.c **** 
 231:Core/Src/stm32f1xx_it.c **** /**
 232:Core/Src/stm32f1xx_it.c ****  * @brief This function handles EXTI line[15:10] interrupts.
 233:Core/Src/stm32f1xx_it.c ****  */
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 10


 234:Core/Src/stm32f1xx_it.c **** void EXTI15_10_IRQHandler(void)
 235:Core/Src/stm32f1xx_it.c **** {
 297              		.loc 1 235 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 236:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 237:Core/Src/stm32f1xx_it.c ****   // if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_RESET)
 238:Core/Src/stm32f1xx_it.c ****   // {
 239:Core/Src/stm32f1xx_it.c ****   // osDelay(5);
 240:Core/Src/stm32f1xx_it.c ****   if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_RESET)
 306              		.loc 1 240 3 view .LVU39
 307              		.loc 1 240 7 is_stmt 0 view .LVU40
 308 0002 4FF40051 		mov	r1, #8192
 309 0006 0E48     		ldr	r0, .L32
 310 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 311              	.LVL4:
 312              		.loc 1 240 6 view .LVU41
 313 000c 20B9     		cbnz	r0, .L29
 241:Core/Src/stm32f1xx_it.c ****     key.key_down = 1;
 314              		.loc 1 241 5 is_stmt 1 view .LVU42
 315              		.loc 1 241 18 is_stmt 0 view .LVU43
 316 000e 0D4A     		ldr	r2, .L32+4
 317 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 318 0012 43F00403 		orr	r3, r3, #4
 319 0016 1370     		strb	r3, [r2]
 320              	.L29:
 242:Core/Src/stm32f1xx_it.c ****   // }
 243:Core/Src/stm32f1xx_it.c ****   // if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_RESET)
 244:Core/Src/stm32f1xx_it.c ****   // {
 245:Core/Src/stm32f1xx_it.c ****   //   osDelay(5);
 246:Core/Src/stm32f1xx_it.c ****   if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_RESET)
 321              		.loc 1 246 3 is_stmt 1 view .LVU44
 322              		.loc 1 246 7 is_stmt 0 view .LVU45
 323 0018 4FF48051 		mov	r1, #4096
 324 001c 0848     		ldr	r0, .L32
 325 001e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 326              	.LVL5:
 327              		.loc 1 246 6 view .LVU46
 328 0022 20B9     		cbnz	r0, .L30
 247:Core/Src/stm32f1xx_it.c ****     key.key_enter = 1;
 329              		.loc 1 247 5 is_stmt 1 view .LVU47
 330              		.loc 1 247 19 is_stmt 0 view .LVU48
 331 0024 074A     		ldr	r2, .L32+4
 332 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 333 0028 43F00803 		orr	r3, r3, #8
 334 002c 1370     		strb	r3, [r2]
 335              	.L30:
 248:Core/Src/stm32f1xx_it.c ****   // }
 249:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 250:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 336              		.loc 1 250 3 is_stmt 1 view .LVU49
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 11


 337 002e 4FF48050 		mov	r0, #4096
 338 0032 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 339              	.LVL6:
 251:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 340              		.loc 1 251 3 view .LVU50
 341 0036 4FF40050 		mov	r0, #8192
 342 003a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 343              	.LVL7:
 252:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 253:Core/Src/stm32f1xx_it.c **** 
 254:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 255:Core/Src/stm32f1xx_it.c **** }
 344              		.loc 1 255 1 is_stmt 0 view .LVU51
 345 003e 08BD     		pop	{r3, pc}
 346              	.L33:
 347              		.align	2
 348              	.L32:
 349 0040 000C0140 		.word	1073810432
 350 0044 00000000 		.word	key
 351              		.cfi_endproc
 352              	.LFE80:
 354              		.text
 355              	.Letext0:
 356              		.file 2 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 357              		.file 3 "e:\\ace2025\\enviroment\\gcc-arm-none-eabi-10.3-2021.10-win32\\arm-gnu-toolchian\\arm-non
 358              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 359              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 360              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 361              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 362              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 363              		.file 9 "Application/MENU.h"
ARM GAS  C:\Users\20398\AppData\Local\Temp\ccATXIb9.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:18     .text.NMI_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:65     .text.MemManage_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:111    .text.UsageFault_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:134    .text.DebugMon_Handler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:140    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:153    .text.EXTI3_IRQHandler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:159    .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:185    .text.EXTI3_IRQHandler:00000014 $d
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:190    .text.EXTI4_IRQHandler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:196    .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:222    .text.EXTI4_IRQHandler:00000014 $d
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:227    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:233    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:253    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:258    .text.TIM4_IRQHandler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:264    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:284    .text.TIM4_IRQHandler:0000000c $d
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:289    .text.EXTI15_10_IRQHandler:00000000 $t
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:295    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
C:\Users\20398\AppData\Local\Temp\ccATXIb9.s:349    .text.EXTI15_10_IRQHandler:00000040 $d

UNDEFINED SYMBOLS
HAL_GPIO_EXTI_IRQHandler
key
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim4
HAL_GPIO_ReadPin
